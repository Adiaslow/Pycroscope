{
  "session_id": "26b13525-fa85-4dba-8a00-d3f05237571d",
  "config": {
    "line_profiling": true,
    "memory_profiling": true,
    "call_profiling": true,
    "output_dir": "profiling_results",
    "session_name": null,
    "save_raw_data": true,
    "sampling_interval": 0.01,
    "memory_precision": 3,
    "max_call_depth": 50,
    "generate_reports": true,
    "create_visualizations": true,
    "analyze_patterns": true,
    "enabled_patterns": [
      "PatternType.NESTED_LOOPS",
      "PatternType.INEFFICIENT_DATA_STRUCTURE",
      "PatternType.UNNECESSARY_COMPUTATION",
      "PatternType.MEMORY_LEAK_PATTERN",
      "PatternType.QUADRATIC_COMPLEXITY",
      "PatternType.EXPONENTIAL_COMPLEXITY",
      "PatternType.RECURSIVE_WITHOUT_MEMOIZATION",
      "PatternType.DEAD_CODE",
      "PatternType.UNUSED_IMPORTS",
      "PatternType.DUPLICATE_CODE",
      "PatternType.HIGH_CYCLOMATIC_COMPLEXITY",
      "PatternType.LOW_MAINTAINABILITY_INDEX",
      "PatternType.LONG_FUNCTION",
      "PatternType.TOO_MANY_PARAMETERS",
      "PatternType.MISSED_VECTORIZATION",
      "PatternType.INEFFICIENT_ARRAY_OPERATIONS",
      "PatternType.SUBOPTIMAL_MATRIX_OPERATIONS",
      "PatternType.NON_CONTIGUOUS_MEMORY_ACCESS",
      "PatternType.UNNECESSARY_ARRAY_COPY",
      "PatternType.INEFFICIENT_BROADCASTING",
      "PatternType.SCALAR_ARRAY_OPERATIONS",
      "PatternType.WRONG_DTYPE_USAGE",
      "PatternType.INEFFICIENT_ARRAY_CONCATENATION",
      "PatternType.SUBOPTIMAL_LINEAR_ALGEBRA"
    ],
    "pattern_severity_threshold": "medium",
    "pattern_confidence_threshold": 0.7,
    "max_results_per_file": 50,
    "correlate_patterns_with_profiling": true,
    "include_suggestions": true,
    "prioritize_hotspot_patterns": true,
    "hotspot_correlation_threshold": 0.1,
    "pattern_complexity_threshold": 10,
    "pattern_maintainability_threshold": 20.0,
    "max_function_lines": 50,
    "max_function_parameters": 5,
    "exclude_test_files": true,
    "test_file_patterns": [
      "*test*.py",
      "*_test.py",
      "test_*.py"
    ],
    "generate_detailed_analysis_report": true,
    "save_intermediate_analysis_results": false,
    "profiler_prefix": "pycroscope",
    "use_thread_isolation": true,
    "cleanup_on_exit": true,
    "extra_config": {}
  },
  "start_time": "2025-07-30T22:08:43.514154",
  "end_time": "2025-07-30T22:09:17.651118",
  "duration": 34.136964,
  "status": "completed",
  "results": {
    "line": {
      "profiler_type": "line",
      "data": {
        "line_stats": {
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:373": {
            "hits": 2,
            "time": 0.000352,
            "time_per_hit": 0.000176,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 373,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:375": {
            "hits": 2,
            "time": 6.1e-05,
            "time_per_hit": 3.05e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 375,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:376": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 376,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:379": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 379,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:380": {
            "hits": 2,
            "time": 0.000247,
            "time_per_hit": 0.0001235,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 380,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:381": {
            "hits": 2,
            "time": 4.1e-05,
            "time_per_hit": 2.05e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 381,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:382": {
            "hits": 2,
            "time": 1e-06,
            "time_per_hit": 5e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 382,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:383": {
            "hits": 2,
            "time": 1e-06,
            "time_per_hit": 5e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 383,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:384": {
            "hits": 2,
            "time": 0.000346,
            "time_per_hit": 0.000173,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 384,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:395": {
            "hits": 2,
            "time": 3.5e-05,
            "time_per_hit": 1.75e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 395,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:116": {
            "hits": 2,
            "time": 0.000188,
            "time_per_hit": 9.4e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 116,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:117": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 117,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:118": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 118,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:119": {
            "hits": 2,
            "time": 1e-06,
            "time_per_hit": 5e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 119,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:120": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 120,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:121": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 121,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:124": {
            "hits": 2,
            "time": 1e-06,
            "time_per_hit": 5e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 124,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:125": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 125,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:126": {
            "hits": 2,
            "time": 8.6e-05,
            "time_per_hit": 4.3e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 126,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:129": {
            "hits": 2,
            "time": 3e-06,
            "time_per_hit": 1.5e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 129,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:87": {
            "hits": 2,
            "time": 3e-06,
            "time_per_hit": 1.5e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 87,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:88": {
            "hits": 8,
            "time": 9e-06,
            "time_per_hit": 1.125e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 88,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:89": {
            "hits": 6,
            "time": 5e-06,
            "time_per_hit": 8.333333333333334e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 89,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:90": {
            "hits": 5,
            "time": 2e-06,
            "time_per_hit": 4e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 90,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:92": {
            "hits": 1,
            "time": 5e-06,
            "time_per_hit": 5e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 92,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:95": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 95,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:101": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 101,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:104": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 104,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:105": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 105,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:106": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 106,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:107": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 107,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:111": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 111,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:315": {
            "hits": 2,
            "time": 5.9e-05,
            "time_per_hit": 2.95e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 315,
            "function": "gettempdir"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:304": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 304,
            "function": "_gettempdir"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:311": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 311,
            "function": "_gettempdir"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:233": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 233,
            "function": "_get_candidate_names"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:240": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 240,
            "function": "_get_candidate_names"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:133": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 133,
            "function": "RLock"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:135": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 135,
            "function": "RLock"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:840": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 840,
            "function": "_newname"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1361": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1361,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1362": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1362,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1363": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1363,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1365": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1365,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1368": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1368,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1369": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1369,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1370": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1370,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1372": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1372,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1404": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1404,
            "function": "_make_invoke_excepthook"
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py:124": {
            "hits": 1,
            "time": 4.2e-05,
            "time_per_hit": 4.2e-05,
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py",
            "line_number": 124,
            "function": "register_trace_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:43": {
            "hits": 1,
            "time": 0.001959,
            "time_per_hit": 0.001959,
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "line_number": 43,
            "function": "run_sample_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:45": {
            "hits": 1,
            "time": 5e-06,
            "time_per_hit": 5e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "line_number": 45,
            "function": "run_sample_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:46": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "line_number": 46,
            "function": "run_sample_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:47": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "line_number": 47,
            "function": "run_sample_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:50": {
            "hits": 1,
            "time": 33.97852,
            "time_per_hit": 33.97852,
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "line_number": 50,
            "function": "run_sample_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:52": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "line_number": 52,
            "function": "run_sample_workload"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:187": {
            "hits": 3,
            "time": 4e-06,
            "time_per_hit": 1.3333333333333332e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 187,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:188": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 188,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:189": {
            "hits": 3,
            "time": 4e-06,
            "time_per_hit": 1.3333333333333332e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 189,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:190": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 190,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:191": {
            "hits": 3,
            "time": 5e-06,
            "time_per_hit": 1.6666666666666669e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 191,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:193": {
            "hits": 3,
            "time": 5.4e-05,
            "time_per_hit": 1.8e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 193,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:194": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 194,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:197": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 197,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:199": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 199,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:201": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 201,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:203": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 203,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:205": {
            "hits": 3,
            "time": 5e-06,
            "time_per_hit": 1.6666666666666669e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 205,
            "function": "_type_check"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:168": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 168,
            "function": "_type_convert"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:170": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 170,
            "function": "_type_convert"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:172": {
            "hits": 3,
            "time": 4e-06,
            "time_per_hit": 1.3333333333333332e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 172,
            "function": "_type_convert"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:1162": {
            "hits": 12,
            "time": 2e-05,
            "time_per_hit": 1.6666666666666669e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "line_number": 1162,
            "function": "_is_dunder"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:357": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 357,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:359": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 359,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:362": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 362,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:363": {
            "hits": 1,
            "time": 15.190202,
            "time_per_hit": 15.190202,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 363,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:364": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 364,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:365": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 365,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:368": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 368,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:369": {
            "hits": 1,
            "time": 1.493286,
            "time_per_hit": 1.493286,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 369,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:370": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 370,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:371": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 371,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:374": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 374,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:375": {
            "hits": 1,
            "time": 0.34844,
            "time_per_hit": 0.34844,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 375,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:376": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 376,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:377": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 377,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:380": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 380,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:381": {
            "hits": 1,
            "time": 0.00013,
            "time_per_hit": 0.00013,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 381,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:382": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 382,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:383": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 383,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:386": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 386,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:387": {
            "hits": 1,
            "time": 0.055173,
            "time_per_hit": 0.055173,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 387,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:388": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 388,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:389": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 389,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:392": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 392,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:393": {
            "hits": 1,
            "time": 15.507625,
            "time_per_hit": 15.507625,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 393,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:394": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 394,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:395": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 395,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:398": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 398,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:399": {
            "hits": 1,
            "time": 1.370047,
            "time_per_hit": 1.370047,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 399,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:400": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 400,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:402": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 402,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:403": {
            "hits": 1,
            "time": 5.6e-05,
            "time_per_hit": 5.6e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 403,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:404": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 404,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:406": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 406,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:408": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 408,
            "function": "mixed_workload"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:134": {
            "hits": 1,
            "time": 4e-06,
            "time_per_hit": 4e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 134,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:137": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 137,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:138": {
            "hits": 1,
            "time": 0.022799,
            "time_per_hit": 0.022799,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 138,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:139": {
            "hits": 1,
            "time": 0.022972,
            "time_per_hit": 0.022972,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 139,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:141": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 141,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:142": {
            "hits": 201,
            "time": 0.000173,
            "time_per_hit": 8.606965174129354e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 142,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:143": {
            "hits": 40200,
            "time": 0.032493,
            "time_per_hit": 8.082835820895522e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 143,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:144": {
            "hits": 8040000,
            "time": 6.491779,
            "time_per_hit": 8.074351990049751e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 144,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:145": {
            "hits": 8000000,
            "time": 6.402371,
            "time_per_hit": 8.00296375e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 145,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:148": {
            "hits": 10001,
            "time": 0.008217,
            "time_per_hit": 8.216178382161784e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 148,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:149": {
            "hits": 10000,
            "time": 0.008923,
            "time_per_hit": 8.923e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 149,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:151": {
            "hits": 1,
            "time": 9e-06,
            "time_per_hit": 9e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 151,
            "function": "cpu_intensive_calculation"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:156": {
            "hits": 1,
            "time": 4e-06,
            "time_per_hit": 4e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 156,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:159": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 159,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:160": {
            "hits": 50001,
            "time": 0.040941,
            "time_per_hit": 8.188036239275214e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 160,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:161": {
            "hits": 100000,
            "time": 0.081211,
            "time_per_hit": 8.121100000000001e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 161,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:162": {
            "hits": 50000,
            "time": 0.059945,
            "time_per_hit": 1.1988999999999999e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 162,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:163": {
            "hits": 50000,
            "time": 0.038443,
            "time_per_hit": 7.688599999999999e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 163,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:164": {
            "hits": 50000,
            "time": 0.623693,
            "time_per_hit": 1.2473860000000002e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 164,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:165": {
            "hits": 50000,
            "time": 0.047203,
            "time_per_hit": 9.4406e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 165,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:166": {
            "hits": 50000,
            "time": 0.041728,
            "time_per_hit": 8.3456e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 166,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:167": {
            "hits": 50000,
            "time": 0.04395,
            "time_per_hit": 8.790000000000001e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 167,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:168": {
            "hits": 50000,
            "time": 0.203372,
            "time_per_hit": 4.06744e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 168,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:174": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 174,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:175": {
            "hits": 50001,
            "time": 0.040041,
            "time_per_hit": 8.008039839203216e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 175,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:176": {
            "hits": 50000,
            "time": 0.038924,
            "time_per_hit": 7.7848e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 176,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:177": {
            "hits": 50000,
            "time": 0.040765,
            "time_per_hit": 8.153000000000001e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 177,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:178": {
            "hits": 10,
            "time": 8e-06,
            "time_per_hit": 8e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 178,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:179": {
            "hits": 50000,
            "time": 0.040082,
            "time_per_hit": 8.0164e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 179,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:182": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 182,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:183": {
            "hits": 101,
            "time": 9.4e-05,
            "time_per_hit": 9.306930693069306e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 183,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:184": {
            "hits": 100,
            "time": 0.059993,
            "time_per_hit": 0.0005999299999999999,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 184,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:185": {
            "hits": 100,
            "time": 9.1e-05,
            "time_per_hit": 9.100000000000001e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 185,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:186": {
            "hits": 100,
            "time": 9.5e-05,
            "time_per_hit": 9.5e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 186,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:187": {
            "hits": 90,
            "time": 0.000487,
            "time_per_hit": 5.411111111111111e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 187,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:189": {
            "hits": 1,
            "time": 7e-06,
            "time_per_hit": 7e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 189,
            "function": "memory_intensive_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:194": {
            "hits": 1,
            "time": 5e-06,
            "time_per_hit": 5e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 194,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:197": {
            "hits": 1,
            "time": 0.000409,
            "time_per_hit": 0.000409,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 197,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:199": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 199,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:201": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 201,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:202": {
            "hits": 11,
            "time": 1.5e-05,
            "time_per_hit": 1.3636363636363636e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 202,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:203": {
            "hits": 10,
            "time": 0.000237,
            "time_per_hit": 2.37e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 203,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:204": {
            "hits": 10,
            "time": 9e-06,
            "time_per_hit": 9.000000000000001e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 204,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:205": {
            "hits": 10,
            "time": 1.5e-05,
            "time_per_hit": 1.5e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 205,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:206": {
            "hits": 10,
            "time": 0.005477,
            "time_per_hit": 0.0005477,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 206,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:207": {
            "hits": 10,
            "time": 1.1e-05,
            "time_per_hit": 1.1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 207,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:210": {
            "hits": 20,
            "time": 0.001892,
            "time_per_hit": 9.46e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 210,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:211": {
            "hits": 10,
            "time": 0.336372,
            "time_per_hit": 0.0336372,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 211,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:213": {
            "hits": 10,
            "time": 1.3e-05,
            "time_per_hit": 1.2999999999999998e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 213,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:216": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 216,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:217": {
            "hits": 11,
            "time": 8e-06,
            "time_per_hit": 7.272727272727272e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 217,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:218": {
            "hits": 20,
            "time": 0.000278,
            "time_per_hit": 1.3899999999999999e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 218,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:219": {
            "hits": 10,
            "time": 0.002465,
            "time_per_hit": 0.00024650000000000003,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 219,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:222": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 222,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:223": {
            "hits": 11,
            "time": 9e-06,
            "time_per_hit": 8.181818181818182e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 223,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:224": {
            "hits": 10,
            "time": 9e-06,
            "time_per_hit": 9.000000000000001e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 224,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:226": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 226,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:230": {
            "hits": 11,
            "time": 2.9e-05,
            "time_per_hit": 2.6363636363636364e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 230,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:231": {
            "hits": 10,
            "time": 0.000552,
            "time_per_hit": 5.52e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 231,
            "function": "file_io_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:232": {
            "hits": 1,
            "time": 4.2e-05,
            "time_per_hit": 4.2e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 232,
            "function": "file_io_operations"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:165": {
            "hits": 10,
            "time": 1e-05,
            "time_per_hit": 1.0000000000000002e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 165,
            "function": "dump"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:166": {
            "hits": 10,
            "time": 1e-05,
            "time_per_hit": 1.0000000000000002e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 166,
            "function": "dump"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:167": {
            "hits": 10,
            "time": 1e-05,
            "time_per_hit": 1.0000000000000002e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 167,
            "function": "dump"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:168": {
            "hits": 10,
            "time": 1e-05,
            "time_per_hit": 1.0000000000000002e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 168,
            "function": "dump"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:169": {
            "hits": 10,
            "time": 0.00042,
            "time_per_hit": 4.2000000000000004e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 169,
            "function": "dump"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:179": {
            "hits": 10180,
            "time": 0.321509,
            "time_per_hit": 3.1582416502946956e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 179,
            "function": "dump"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:180": {
            "hits": 10170,
            "time": 0.010127,
            "time_per_hit": 9.95771878072763e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 180,
            "function": "dump"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:275": {
            "hits": 10,
            "time": 1.1e-05,
            "time_per_hit": 1.1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "line_number": 275,
            "function": "_make_iterencode"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:278": {
            "hits": 10,
            "time": 1.2e-05,
            "time_per_hit": 1.2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "line_number": 278,
            "function": "_make_iterencode"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:334": {
            "hits": 10,
            "time": 1.2e-05,
            "time_per_hit": 1.2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "line_number": 334,
            "function": "_make_iterencode"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:414": {
            "hits": 10,
            "time": 1.1e-05,
            "time_per_hit": 1.1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "line_number": 414,
            "function": "_make_iterencode"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:443": {
            "hits": 10,
            "time": 1.5e-05,
            "time_per_hit": 1.5e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "line_number": 443,
            "function": "_make_iterencode"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:293": {
            "hits": 30,
            "time": 0.002325,
            "time_per_hit": 7.75e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 293,
            "function": "load"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:294": {
            "hits": 10,
            "time": 7e-06,
            "time_per_hit": 7e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 294,
            "function": "load"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:295": {
            "hits": 10,
            "time": 5e-06,
            "time_per_hit": 5.000000000000001e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 295,
            "function": "load"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:296": {
            "hits": 20,
            "time": 1e-05,
            "time_per_hit": 5.000000000000001e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 296,
            "function": "load"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:333": {
            "hits": 10,
            "time": 1e-05,
            "time_per_hit": 1.0000000000000002e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 333,
            "function": "loads"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:334": {
            "hits": 10,
            "time": 1e-05,
            "time_per_hit": 1.0000000000000002e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 334,
            "function": "loads"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:343": {
            "hits": 10,
            "time": 7e-06,
            "time_per_hit": 7e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 343,
            "function": "loads"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:344": {
            "hits": 10,
            "time": 8e-06,
            "time_per_hit": 8e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 344,
            "function": "loads"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:345": {
            "hits": 10,
            "time": 8e-06,
            "time_per_hit": 8e-07,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 345,
            "function": "loads"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:346": {
            "hits": 10,
            "time": 0.001932,
            "time_per_hit": 0.00019319999999999998,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "line_number": 346,
            "function": "loads"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:237": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 237,
            "function": "nested_function_calls"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:239": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 239,
            "function": "nested_function_calls"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:244": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 244,
            "function": "nested_function_calls"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:249": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 249,
            "function": "nested_function_calls"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:254": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 254,
            "function": "nested_function_calls"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:259": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 259,
            "function": "nested_function_calls"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:262": {
            "hits": 1,
            "time": 6.3e-05,
            "time_per_hit": 6.3e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 262,
            "function": "nested_function_calls"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:267": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 267,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:270": {
            "hits": 1,
            "time": 0.005767,
            "time_per_hit": 0.005767,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 270,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:273": {
            "hits": 1,
            "time": 0.005587,
            "time_per_hit": 0.005587,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 273,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:276": {
            "hits": 1,
            "time": 0.005437,
            "time_per_hit": 0.005437,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 276,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:279": {
            "hits": 1,
            "time": 2.2e-05,
            "time_per_hit": 2.2e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 279,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:280": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 280,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:281": {
            "hits": 1,
            "time": 6.8e-05,
            "time_per_hit": 6.8e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 281,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:282": {
            "hits": 1,
            "time": 6.6e-05,
            "time_per_hit": 6.6e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 282,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:285": {
            "hits": 2,
            "time": 0.037942,
            "time_per_hit": 0.018971,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 285,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:286": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 286,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:288": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 288,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:290": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 290,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:291": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 291,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:292": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 292,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:293": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 293,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:294": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 294,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:295": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 295,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:296": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 296,
            "function": "data_processing_pipeline"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:302": {
            "hits": 1,
            "time": 4e-06,
            "time_per_hit": 4e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 302,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:305": {
            "hits": 1,
            "time": 8e-06,
            "time_per_hit": 8e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 305,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:308": {
            "hits": 1,
            "time": 5.6e-05,
            "time_per_hit": 5.6e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 308,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:311": {
            "hits": 1,
            "time": 2.4e-05,
            "time_per_hit": 2.4e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 311,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:312": {
            "hits": 1,
            "time": 3.9e-05,
            "time_per_hit": 3.9e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 312,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:315": {
            "hits": 1,
            "time": 2.1e-05,
            "time_per_hit": 2.1e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 315,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:316": {
            "hits": 1,
            "time": 1.8e-05,
            "time_per_hit": 1.8e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 316,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:317": {
            "hits": 1,
            "time": 0.000183,
            "time_per_hit": 0.000183,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 317,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:320": {
            "hits": 1,
            "time": 6e-06,
            "time_per_hit": 6e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 320,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:321": {
            "hits": 1,
            "time": 5e-06,
            "time_per_hit": 5e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 321,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:324": {
            "hits": 1,
            "time": 8e-06,
            "time_per_hit": 8e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 324,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:327": {
            "hits": 1,
            "time": 0.003915,
            "time_per_hit": 0.003915,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 327,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:330": {
            "hits": 1,
            "time": 0.000502,
            "time_per_hit": 0.000502,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 330,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:333": {
            "hits": 1,
            "time": 6.1e-05,
            "time_per_hit": 6.1e-05,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 333,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:334": {
            "hits": 1,
            "time": 0.000508,
            "time_per_hit": 0.000508,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 334,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:337": {
            "hits": 1,
            "time": 15.501874,
            "time_per_hit": 15.501874,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 337,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:338": {
            "hits": 1,
            "time": 0.000137,
            "time_per_hit": 0.000137,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 338,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:340": {
            "hits": 1,
            "time": 4e-06,
            "time_per_hit": 4e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 340,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:341": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 341,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:342": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 342,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:343": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 343,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:344": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 344,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:345": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 345,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:346": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 346,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:348": {
            "hits": 1,
            "time": 6e-06,
            "time_per_hit": 6e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 348,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:349": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 349,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:350": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 350,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:351": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 351,
            "function": "demonstrate_anti_patterns"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:47": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 47,
            "function": "inefficient_nested_search"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:50": {
            "hits": 4,
            "time": 3e-06,
            "time_per_hit": 7.5e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 50,
            "function": "inefficient_nested_search"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:51": {
            "hits": 2252,
            "time": 0.001666,
            "time_per_hit": 7.397868561278863e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 51,
            "function": "inefficient_nested_search"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:52": {
            "hits": 2252,
            "time": 0.001631,
            "time_per_hit": 7.242451154529308e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 52,
            "function": "inefficient_nested_search"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:53": {
            "hits": 3,
            "time": 4e-06,
            "time_per_hit": 1.3333333333333332e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 53,
            "function": "inefficient_nested_search"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:54": {
            "hits": 3,
            "time": 2e-06,
            "time_per_hit": 6.666666666666666e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 54,
            "function": "inefficient_nested_search"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:56": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 56,
            "function": "inefficient_nested_search"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:64": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 64,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:67": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 67,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:68": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 68,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:69": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 69,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:70": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 70,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:71": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 71,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:72": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 72,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:73": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 73,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:74": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 74,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:75": {
            "hits": 7,
            "time": 7e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 75,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:76": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 76,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:77": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 77,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:78": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 78,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:79": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 79,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:80": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 80,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:81": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 81,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:99": {
            "hits": 11,
            "time": 1.4e-05,
            "time_per_hit": 1.2727272727272728e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 99,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:100": {
            "hits": 110,
            "time": 0.000132,
            "time_per_hit": 1.2000000000000002e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 100,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:101": {
            "hits": 100,
            "time": 0.000116,
            "time_per_hit": 1.16e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 101,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:102": {
            "hits": 10,
            "time": 7e-06,
            "time_per_hit": 7e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 102,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:104": {
            "hits": 1,
            "time": 3e-06,
            "time_per_hit": 3e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 104,
            "function": "overly_complex_function"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:113": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 113,
            "function": "inefficient_data_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:114": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 114,
            "function": "inefficient_data_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:116": {
            "hits": 101,
            "time": 7.8e-05,
            "time_per_hit": 7.722772277227722e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 116,
            "function": "inefficient_data_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:117": {
            "hits": 100,
            "time": 0.0001,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 117,
            "function": "inefficient_data_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:118": {
            "hits": 100,
            "time": 7.8e-05,
            "time_per_hit": 7.799999999999999e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 118,
            "function": "inefficient_data_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:119": {
            "hits": 100,
            "time": 9.5e-05,
            "time_per_hit": 9.5e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 119,
            "function": "inefficient_data_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:121": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 121,
            "function": "inefficient_data_operations"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:27": {
            "hits": 2935322,
            "time": 2.360981,
            "time_per_hit": 8.043345840762956e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 27,
            "function": "fibonacci_recursive"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:28": {
            "hits": 1467662,
            "time": 1.719272,
            "time_per_hit": 1.1714359300710926e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 28,
            "function": "fibonacci_recursive"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:29": {
            "hits": 1467660,
            "time": 5.085541,
            "time_per_hit": 3.465067522450704e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 29,
            "function": "fibonacci_recursive"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:34": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 34,
            "function": "fibonacci_iterative"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:36": {
            "hits": 2,
            "time": 3e-06,
            "time_per_hit": 1.5e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 36,
            "function": "fibonacci_iterative"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:37": {
            "hits": 55,
            "time": 4.3e-05,
            "time_per_hit": 7.818181818181818e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 37,
            "function": "fibonacci_iterative"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:38": {
            "hits": 53,
            "time": 4.1e-05,
            "time_per_hit": 7.735849056603774e-07,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 38,
            "function": "fibonacci_iterative"
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:39": {
            "hits": 2,
            "time": 4e-06,
            "time_per_hit": 2e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "line_number": 39,
            "function": "fibonacci_iterative"
          }
        },
        "function_profiles": {
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:mkdtemp": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "mkdtemp",
            "total_time": 0.0010880000000000002,
            "total_hits": 20,
            "line_details": [
              {
                "line_number": 373,
                "hits": 2,
                "time_us": 352.0,
                "per_hit_us": 176.0,
                "line_content": "prefix, suffix, dir, output_type = _sanitize_params(prefix, suffix, dir)"
              },
              {
                "line_number": 375,
                "hits": 2,
                "time_us": 61.0,
                "per_hit_us": 30.5,
                "line_content": "names = _get_candidate_names()"
              },
              {
                "line_number": 376,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "if output_type is bytes:"
              },
              {
                "line_number": 379,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "for seq in range(TMP_MAX):"
              },
              {
                "line_number": 380,
                "hits": 2,
                "time_us": 247.0,
                "per_hit_us": 123.5,
                "line_content": "name = next(names)"
              },
              {
                "line_number": 381,
                "hits": 2,
                "time_us": 41.0,
                "per_hit_us": 20.5,
                "line_content": "file = _os.path.join(dir, prefix + name + suffix)"
              },
              {
                "line_number": 382,
                "hits": 2,
                "time_us": 1.0,
                "per_hit_us": 0.5,
                "line_content": "_sys.audit(\"tempfile.mkdtemp\", file)"
              },
              {
                "line_number": 383,
                "hits": 2,
                "time_us": 1.0,
                "per_hit_us": 0.5,
                "line_content": "try:"
              },
              {
                "line_number": 384,
                "hits": 2,
                "time_us": 346.0,
                "per_hit_us": 173.0,
                "line_content": "_os.mkdir(file, 0o700)"
              },
              {
                "line_number": 395,
                "hits": 2,
                "time_us": 35.0,
                "per_hit_us": 17.5,
                "line_content": "return _os.path.abspath(file)"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:_sanitize_params": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "_sanitize_params",
            "total_time": 0.000288,
            "total_hits": 18,
            "line_details": [
              {
                "line_number": 116,
                "hits": 2,
                "time_us": 188.0,
                "per_hit_us": 94.0,
                "line_content": "output_type = _infer_return_type(prefix, suffix, dir)"
              },
              {
                "line_number": 117,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "if suffix is None:"
              },
              {
                "line_number": 118,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "suffix = output_type()"
              },
              {
                "line_number": 119,
                "hits": 2,
                "time_us": 1.0,
                "per_hit_us": 0.5,
                "line_content": "if prefix is None:"
              },
              {
                "line_number": 120,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if output_type is str:"
              },
              {
                "line_number": 121,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "prefix = template"
              },
              {
                "line_number": 124,
                "hits": 2,
                "time_us": 1.0,
                "per_hit_us": 0.5,
                "line_content": "if dir is None:"
              },
              {
                "line_number": 125,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "if output_type is str:"
              },
              {
                "line_number": 126,
                "hits": 2,
                "time_us": 86.0,
                "per_hit_us": 43.0,
                "line_content": "dir = gettempdir()"
              },
              {
                "line_number": 129,
                "hits": 2,
                "time_us": 3.0,
                "per_hit_us": 1.5,
                "line_content": "return prefix, suffix, dir, output_type"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:_infer_return_type": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "_infer_return_type",
            "total_time": 3.2000000000000005e-05,
            "total_hits": 30,
            "line_details": [
              {
                "line_number": 87,
                "hits": 2,
                "time_us": 3.0,
                "per_hit_us": 1.5,
                "line_content": "return_type = None"
              },
              {
                "line_number": 88,
                "hits": 8,
                "time_us": 9.0,
                "per_hit_us": 1.125,
                "line_content": "for arg in args:"
              },
              {
                "line_number": 89,
                "hits": 6,
                "time_us": 5.0,
                "per_hit_us": 0.8333333333333334,
                "line_content": "if arg is None:"
              },
              {
                "line_number": 90,
                "hits": 5,
                "time_us": 2.0,
                "per_hit_us": 0.4,
                "line_content": "continue"
              },
              {
                "line_number": 92,
                "hits": 1,
                "time_us": 5.0,
                "per_hit_us": 5.0,
                "line_content": "if isinstance(arg, _os.PathLike):"
              },
              {
                "line_number": 95,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if isinstance(arg, bytes):"
              },
              {
                "line_number": 101,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "if return_type is bytes:"
              },
              {
                "line_number": 104,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "return_type = str"
              },
              {
                "line_number": 105,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "if return_type is None:"
              },
              {
                "line_number": 106,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "if tempdir is None or isinstance(tempdir, str):"
              },
              {
                "line_number": 107,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "return str  # tempfile APIs return a str by default."
              },
              {
                "line_number": 111,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "return return_type"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:gettempdir": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "gettempdir",
            "total_time": 5.9e-05,
            "total_hits": 2,
            "line_details": [
              {
                "line_number": 315,
                "hits": 2,
                "time_us": 59.0,
                "per_hit_us": 29.5,
                "line_content": "return _os.fsdecode(_gettempdir())"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:_gettempdir": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "_gettempdir",
            "total_time": 4e-06,
            "total_hits": 4,
            "line_details": [
              {
                "line_number": 304,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "if tempdir is None:"
              },
              {
                "line_number": 311,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "return tempdir"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:_get_candidate_names": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "_get_candidate_names",
            "total_time": 3e-06,
            "total_hits": 2,
            "line_details": [
              {
                "line_number": 233,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if _name_sequence is None:"
              },
              {
                "line_number": 240,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "return _name_sequence"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:RLock": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "RLock",
            "total_time": 1e-06,
            "total_hits": 2,
            "line_details": [
              {
                "line_number": 133,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "if _CRLock is None:"
              },
              {
                "line_number": 135,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return _CRLock(*args, **kwargs)"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:_newname": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "_newname",
            "total_time": 1e-06,
            "total_hits": 1,
            "line_details": [
              {
                "line_number": 840,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return name_template % _counter()"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:_make_invoke_excepthook": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "_make_invoke_excepthook",
            "total_time": 5.999999999999999e-06,
            "total_hits": 9,
            "line_details": [
              {
                "line_number": 1361,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "old_excepthook = excepthook"
              },
              {
                "line_number": 1362,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "old_sys_excepthook = _sys.excepthook"
              },
              {
                "line_number": 1363,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if old_excepthook is None:"
              },
              {
                "line_number": 1365,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "if old_sys_excepthook is None:"
              },
              {
                "line_number": 1368,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "sys_exc_info = _sys.exc_info"
              },
              {
                "line_number": 1369,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "local_print = print"
              },
              {
                "line_number": 1370,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "local_sys = _sys"
              },
              {
                "line_number": 1372,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "def invoke_excepthook(thread):"
              },
              {
                "line_number": 1404,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return invoke_excepthook"
              }
            ]
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py:register_trace_function": {
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py",
            "function": "register_trace_function",
            "total_time": 4.2e-05,
            "total_hits": 1,
            "line_details": [
              {
                "line_number": 124,
                "hits": 1,
                "time_us": 42.0,
                "per_hit_us": 42.0,
                "line_content": "_trace_multiplexer.register_profiler(profiler_name, trace_func)"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:run_sample_workload": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "function": "run_sample_workload",
            "total_time": 33.980492000000005,
            "total_hits": 6,
            "line_details": [
              {
                "line_number": 43,
                "hits": 1,
                "time_us": 1959.0,
                "per_hit_us": 1959.0,
                "line_content": "from sample_workload import mixed_workload"
              },
              {
                "line_number": 45,
                "hits": 1,
                "time_us": 5.0,
                "per_hit_us": 5.0,
                "line_content": "print(\"Executing workload to be profiled...\")"
              },
              {
                "line_number": 46,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "print(\"   (Replace this section with your own code)\")"
              },
              {
                "line_number": 47,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "print()"
              },
              {
                "line_number": 50,
                "hits": 1,
                "time_us": 33978520.0,
                "per_hit_us": 33978520.0,
                "line_content": "results = mixed_workload()"
              },
              {
                "line_number": 52,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "return results"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:_type_check": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "function": "_type_check",
            "total_time": 9.300000000000002e-05,
            "total_hits": 36,
            "line_details": [
              {
                "line_number": 187,
                "hits": 3,
                "time_us": 4.0,
                "per_hit_us": 1.3333333333333333,
                "line_content": "invalid_generic_forms = (Generic, Protocol)"
              },
              {
                "line_number": 188,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if not allow_special_forms:"
              },
              {
                "line_number": 189,
                "hits": 3,
                "time_us": 4.0,
                "per_hit_us": 1.3333333333333333,
                "line_content": "invalid_generic_forms += (ClassVar,)"
              },
              {
                "line_number": 190,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if is_argument:"
              },
              {
                "line_number": 191,
                "hits": 3,
                "time_us": 5.0,
                "per_hit_us": 1.6666666666666667,
                "line_content": "invalid_generic_forms += (Final,)"
              },
              {
                "line_number": 193,
                "hits": 3,
                "time_us": 54.0,
                "per_hit_us": 18.0,
                "line_content": "arg = _type_convert(arg, module=module, allow_special_forms=allow_special_forms)"
              },
              {
                "line_number": 194,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if (isinstance(arg, _GenericAlias) and"
              },
              {
                "line_number": 197,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if arg in (Any, LiteralString, NoReturn, Never, Self, TypeAlias):"
              },
              {
                "line_number": 199,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if allow_special_forms and arg in (ClassVar, Final):"
              },
              {
                "line_number": 201,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if isinstance(arg, _SpecialForm) or arg in (Generic, Protocol):"
              },
              {
                "line_number": 203,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if type(arg) is tuple:"
              },
              {
                "line_number": 205,
                "hits": 3,
                "time_us": 5.0,
                "per_hit_us": 1.6666666666666667,
                "line_content": "return arg"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:_type_convert": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "function": "_type_convert",
            "total_time": 9.999999999999999e-06,
            "total_hits": 9,
            "line_details": [
              {
                "line_number": 168,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if arg is None:"
              },
              {
                "line_number": 170,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if isinstance(arg, str):"
              },
              {
                "line_number": 172,
                "hits": 3,
                "time_us": 4.0,
                "per_hit_us": 1.3333333333333333,
                "line_content": "return arg"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py:_is_dunder": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py",
            "function": "_is_dunder",
            "total_time": 2e-05,
            "total_hits": 12,
            "line_details": [
              {
                "line_number": 1162,
                "hits": 12,
                "time_us": 20.0,
                "per_hit_us": 1.6666666666666667,
                "line_content": "return attr.startswith('__') and attr.endswith('__')"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:mixed_workload": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "mixed_workload",
            "total_time": 33.96499699999999,
            "total_hits": 34,
            "line_details": [
              {
                "line_number": 357,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "print(\"Running mixed workload demonstration...\")"
              },
              {
                "line_number": 359,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results = {}"
              },
              {
                "line_number": 362,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "start_time = time.time()"
              },
              {
                "line_number": 363,
                "hits": 1,
                "time_us": 15190202.0,
                "per_hit_us": 15190202.0,
                "line_content": "cpu_result = cpu_intensive_calculation()"
              },
              {
                "line_number": 364,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "results[\"cpu_time\"] = time.time() - start_time"
              },
              {
                "line_number": 365,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "results[\"cpu_result_sample\"] = cpu_result"
              },
              {
                "line_number": 368,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "start_time = time.time()"
              },
              {
                "line_number": 369,
                "hits": 1,
                "time_us": 1493286.0,
                "per_hit_us": 1493286.0,
                "line_content": "memory_data = memory_intensive_operations()"
              },
              {
                "line_number": 370,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "results[\"memory_time\"] = time.time() - start_time"
              },
              {
                "line_number": 371,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results[\"memory_objects_created\"] = len(memory_data)"
              },
              {
                "line_number": 374,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "start_time = time.time()"
              },
              {
                "line_number": 375,
                "hits": 1,
                "time_us": 348440.0,
                "per_hit_us": 348440.0,
                "line_content": "io_result = file_io_operations()"
              },
              {
                "line_number": 376,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "results[\"io_time\"] = time.time() - start_time"
              },
              {
                "line_number": 377,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results[\"io_operations\"] = io_result"
              },
              {
                "line_number": 380,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "start_time = time.time()"
              },
              {
                "line_number": 381,
                "hits": 1,
                "time_us": 130.0,
                "per_hit_us": 130.0,
                "line_content": "call_result = nested_function_calls()"
              },
              {
                "line_number": 382,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results[\"call_time\"] = time.time() - start_time"
              },
              {
                "line_number": 383,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results[\"call_result\"] = call_result"
              },
              {
                "line_number": 386,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "start_time = time.time()"
              },
              {
                "line_number": 387,
                "hits": 1,
                "time_us": 55173.0,
                "per_hit_us": 55173.0,
                "line_content": "processing_result = data_processing_pipeline()"
              },
              {
                "line_number": 388,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "results[\"processing_time\"] = time.time() - start_time"
              },
              {
                "line_number": 389,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results[\"processing_stats\"] = processing_result"
              },
              {
                "line_number": 392,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "start_time = time.time()"
              },
              {
                "line_number": 393,
                "hits": 1,
                "time_us": 15507625.0,
                "per_hit_us": 15507625.0,
                "line_content": "antipattern_result = demonstrate_anti_patterns()"
              },
              {
                "line_number": 394,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "results[\"antipattern_time\"] = time.time() - start_time"
              },
              {
                "line_number": 395,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results[\"antipattern_stats\"] = antipattern_result"
              },
              {
                "line_number": 398,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "start_time = time.time()"
              },
              {
                "line_number": 399,
                "hits": 1,
                "time_us": 1370047.0,
                "per_hit_us": 1370047.0,
                "line_content": "fib_recursive = fibonacci_recursive(25)  # Small enough to not take forever"
              },
              {
                "line_number": 400,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "results[\"fib_recursive_time\"] = time.time() - start_time"
              },
              {
                "line_number": 402,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "start_time = time.time()"
              },
              {
                "line_number": 403,
                "hits": 1,
                "time_us": 56.0,
                "per_hit_us": 56.0,
                "line_content": "fib_iterative = fibonacci_iterative(25)"
              },
              {
                "line_number": 404,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results[\"fib_iterative_time\"] = time.time() - start_time"
              },
              {
                "line_number": 406,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "results[\"fib_results_match\"] = fib_recursive == fib_iterative"
              },
              {
                "line_number": 408,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "return results"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:cpu_intensive_calculation": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "cpu_intensive_calculation",
            "total_time": 12.989742,
            "total_hits": 16100408,
            "line_details": [
              {
                "line_number": 134,
                "hits": 1,
                "time_us": 4.0,
                "per_hit_us": 4.0,
                "line_content": "print(\"Running CPU-intensive calculations...\")"
              },
              {
                "line_number": 137,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "size = 200"
              },
              {
                "line_number": 138,
                "hits": 1,
                "time_us": 22799.0,
                "per_hit_us": 22799.0,
                "line_content": "matrix_a = [[random.random() for _ in range(size)] for _ in range(size)]"
              },
              {
                "line_number": 139,
                "hits": 1,
                "time_us": 22972.0,
                "per_hit_us": 22972.0,
                "line_content": "matrix_b = [[random.random() for _ in range(size)] for _ in range(size)]"
              },
              {
                "line_number": 141,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "result = 0.0"
              },
              {
                "line_number": 142,
                "hits": 201,
                "time_us": 173.0,
                "per_hit_us": 0.8606965174129354,
                "line_content": "for i in range(size):"
              },
              {
                "line_number": 143,
                "hits": 40200,
                "time_us": 32493.0,
                "per_hit_us": 0.8082835820895523,
                "line_content": "for j in range(size):"
              },
              {
                "line_number": 144,
                "hits": 8040000,
                "time_us": 6491779.0,
                "per_hit_us": 0.8074351990049752,
                "line_content": "for k in range(size):"
              },
              {
                "line_number": 145,
                "hits": 8000000,
                "time_us": 6402371.0,
                "per_hit_us": 0.8002963750000001,
                "line_content": "result += matrix_a[i][k] * matrix_b[k][j]"
              },
              {
                "line_number": 148,
                "hits": 10001,
                "time_us": 8217.0,
                "per_hit_us": 0.8216178382161784,
                "line_content": "for i in range(10000):"
              },
              {
                "line_number": 149,
                "hits": 10000,
                "time_us": 8923.0,
                "per_hit_us": 0.8923,
                "line_content": "result += math.sin(i) * math.cos(i) * math.sqrt(i + 1)"
              },
              {
                "line_number": 151,
                "hits": 1,
                "time_us": 9.0,
                "per_hit_us": 9.0,
                "line_content": "return result"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:memory_intensive_operations": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "memory_intensive_operations",
            "total_time": 1.4010799999999997,
            "total_hits": 700508,
            "line_details": [
              {
                "line_number": 156,
                "hits": 1,
                "time_us": 4.0,
                "per_hit_us": 4.0,
                "line_content": "print(\"Running memory-intensive operations...\")"
              },
              {
                "line_number": 159,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "large_list = []"
              },
              {
                "line_number": 160,
                "hits": 50001,
                "time_us": 40941.0,
                "per_hit_us": 0.8188036239275215,
                "line_content": "for i in range(50000):"
              },
              {
                "line_number": 161,
                "hits": 100000,
                "time_us": 81211.0,
                "per_hit_us": 0.81211,
                "line_content": "large_list.append("
              },
              {
                "line_number": 162,
                "hits": 50000,
                "time_us": 59945.0,
                "per_hit_us": 1.1989,
                "line_content": "{"
              },
              {
                "line_number": 163,
                "hits": 50000,
                "time_us": 38443.0,
                "per_hit_us": 0.76886,
                "line_content": "\"id\": i,"
              },
              {
                "line_number": 164,
                "hits": 50000,
                "time_us": 623693.0,
                "per_hit_us": 12.47386,
                "line_content": "\"data\": [random.random() for _ in range(20)],"
              },
              {
                "line_number": 165,
                "hits": 50000,
                "time_us": 47203.0,
                "per_hit_us": 0.9440599999999999,
                "line_content": "\"metadata\": {"
              },
              {
                "line_number": 166,
                "hits": 50000,
                "time_us": 41728.0,
                "per_hit_us": 0.83456,
                "line_content": "\"timestamp\": time.time(),"
              },
              {
                "line_number": 167,
                "hits": 50000,
                "time_us": 43950.0,
                "per_hit_us": 0.879,
                "line_content": "\"category\": f\"category_{i % 10}\","
              },
              {
                "line_number": 168,
                "hits": 50000,
                "time_us": 203372.0,
                "per_hit_us": 4.06744,
                "line_content": "\"tags\": [f\"tag_{j}\" for j in range(i % 5 + 1)],"
              },
              {
                "line_number": 174,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "lookup_dict = {}"
              },
              {
                "line_number": 175,
                "hits": 50001,
                "time_us": 40041.0,
                "per_hit_us": 0.8008039839203216,
                "line_content": "for item in large_list:"
              },
              {
                "line_number": 176,
                "hits": 50000,
                "time_us": 38924.0,
                "per_hit_us": 0.7784800000000001,
                "line_content": "category = item[\"metadata\"][\"category\"]"
              },
              {
                "line_number": 177,
                "hits": 50000,
                "time_us": 40765.0,
                "per_hit_us": 0.8152999999999999,
                "line_content": "if category not in lookup_dict:"
              },
              {
                "line_number": 178,
                "hits": 10,
                "time_us": 8.0,
                "per_hit_us": 0.8,
                "line_content": "lookup_dict[category] = []"
              },
              {
                "line_number": 179,
                "hits": 50000,
                "time_us": 40082.0,
                "per_hit_us": 0.80164,
                "line_content": "lookup_dict[category].append(item)"
              },
              {
                "line_number": 182,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "temp_lists = []"
              },
              {
                "line_number": 183,
                "hits": 101,
                "time_us": 94.0,
                "per_hit_us": 0.9306930693069307,
                "line_content": "for i in range(100):"
              },
              {
                "line_number": 184,
                "hits": 100,
                "time_us": 59993.0,
                "per_hit_us": 599.93,
                "line_content": "temp_list = [random.random() for _ in range(1000)]"
              },
              {
                "line_number": 185,
                "hits": 100,
                "time_us": 91.0,
                "per_hit_us": 0.91,
                "line_content": "temp_lists.append(temp_list)"
              },
              {
                "line_number": 186,
                "hits": 100,
                "time_us": 95.0,
                "per_hit_us": 0.95,
                "line_content": "if len(temp_lists) > 10:"
              },
              {
                "line_number": 187,
                "hits": 90,
                "time_us": 487.0,
                "per_hit_us": 5.411111111111111,
                "line_content": "temp_lists.pop(0)  # Remove oldest"
              },
              {
                "line_number": 189,
                "hits": 1,
                "time_us": 7.0,
                "per_hit_us": 7.0,
                "line_content": "return large_list"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:file_io_operations": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "file_io_operations",
            "total_time": 0.34785099999999985,
            "total_hits": 192,
            "line_details": [
              {
                "line_number": 194,
                "hits": 1,
                "time_us": 5.0,
                "per_hit_us": 5.0,
                "line_content": "print(\"Running file I/O operations...\")"
              },
              {
                "line_number": 197,
                "hits": 1,
                "time_us": 409.0,
                "per_hit_us": 409.0,
                "line_content": "temp_dir = tempfile.mkdtemp()"
              },
              {
                "line_number": 199,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "try:"
              },
              {
                "line_number": 201,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "file_data = {}"
              },
              {
                "line_number": 202,
                "hits": 11,
                "time_us": 15.0,
                "per_hit_us": 1.3636363636363638,
                "line_content": "for i in range(10):"
              },
              {
                "line_number": 203,
                "hits": 10,
                "time_us": 237.0,
                "per_hit_us": 23.7,
                "line_content": "filename = os.path.join(temp_dir, f\"test_file_{i}.json\")"
              },
              {
                "line_number": 204,
                "hits": 10,
                "time_us": 9.0,
                "per_hit_us": 0.9,
                "line_content": "data = {"
              },
              {
                "line_number": 205,
                "hits": 10,
                "time_us": 15.0,
                "per_hit_us": 1.5,
                "line_content": "\"file_id\": i,"
              },
              {
                "line_number": 206,
                "hits": 10,
                "time_us": 5477.0,
                "per_hit_us": 547.7,
                "line_content": "\"content\": [random.random() for _ in range(1000)],"
              },
              {
                "line_number": 207,
                "hits": 10,
                "time_us": 11.0,
                "per_hit_us": 1.1,
                "line_content": "\"metadata\": {\"created\": time.time()},"
              },
              {
                "line_number": 210,
                "hits": 20,
                "time_us": 1892.0,
                "per_hit_us": 94.6,
                "line_content": "with open(filename, \"w\") as f:"
              },
              {
                "line_number": 211,
                "hits": 10,
                "time_us": 336372.0,
                "per_hit_us": 33637.2,
                "line_content": "json.dump(data, f)"
              },
              {
                "line_number": 213,
                "hits": 10,
                "time_us": 13.0,
                "per_hit_us": 1.3,
                "line_content": "file_data[filename] = data"
              },
              {
                "line_number": 216,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "read_data = {}"
              },
              {
                "line_number": 217,
                "hits": 11,
                "time_us": 8.0,
                "per_hit_us": 0.7272727272727273,
                "line_content": "for filename in file_data:"
              },
              {
                "line_number": 218,
                "hits": 20,
                "time_us": 278.0,
                "per_hit_us": 13.9,
                "line_content": "with open(filename, \"r\") as f:"
              },
              {
                "line_number": 219,
                "hits": 10,
                "time_us": 2465.0,
                "per_hit_us": 246.5,
                "line_content": "read_data[filename] = json.load(f)"
              },
              {
                "line_number": 222,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "total_values = 0"
              },
              {
                "line_number": 223,
                "hits": 11,
                "time_us": 9.0,
                "per_hit_us": 0.8181818181818181,
                "line_content": "for data in read_data.values():"
              },
              {
                "line_number": 224,
                "hits": 10,
                "time_us": 9.0,
                "per_hit_us": 0.9,
                "line_content": "total_values += len(data[\"content\"])"
              },
              {
                "line_number": 226,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return {\"files_processed\": len(read_data), \"total_values\": total_values}"
              },
              {
                "line_number": 230,
                "hits": 11,
                "time_us": 29.0,
                "per_hit_us": 2.6363636363636367,
                "line_content": "for filename in os.listdir(temp_dir):"
              },
              {
                "line_number": 231,
                "hits": 10,
                "time_us": 552.0,
                "per_hit_us": 55.2,
                "line_content": "os.remove(os.path.join(temp_dir, filename))"
              },
              {
                "line_number": 232,
                "hits": 1,
                "time_us": 42.0,
                "per_hit_us": 42.0,
                "line_content": "os.rmdir(temp_dir)"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:dump": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "function": "dump",
            "total_time": 0.332096,
            "total_hits": 20400,
            "line_details": [
              {
                "line_number": 165,
                "hits": 10,
                "time_us": 10.0,
                "per_hit_us": 1.0,
                "line_content": "if (not skipkeys and ensure_ascii and"
              },
              {
                "line_number": 166,
                "hits": 10,
                "time_us": 10.0,
                "per_hit_us": 1.0,
                "line_content": "check_circular and allow_nan and"
              },
              {
                "line_number": 167,
                "hits": 10,
                "time_us": 10.0,
                "per_hit_us": 1.0,
                "line_content": "cls is None and indent is None and separators is None and"
              },
              {
                "line_number": 168,
                "hits": 10,
                "time_us": 10.0,
                "per_hit_us": 1.0,
                "line_content": "default is None and not sort_keys and not kw):"
              },
              {
                "line_number": 169,
                "hits": 10,
                "time_us": 420.0,
                "per_hit_us": 42.0,
                "line_content": "iterable = _default_encoder.iterencode(obj)"
              },
              {
                "line_number": 179,
                "hits": 10180,
                "time_us": 321509.0,
                "per_hit_us": 31.582416502946955,
                "line_content": "for chunk in iterable:"
              },
              {
                "line_number": 180,
                "hits": 10170,
                "time_us": 10127.0,
                "per_hit_us": 0.995771878072763,
                "line_content": "fp.write(chunk)"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:_make_iterencode": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "function": "_make_iterencode",
            "total_time": 6.099999999999999e-05,
            "total_hits": 50,
            "line_details": [
              {
                "line_number": 275,
                "hits": 10,
                "time_us": 11.0,
                "per_hit_us": 1.1,
                "line_content": "if _indent is not None and not isinstance(_indent, str):"
              },
              {
                "line_number": 278,
                "hits": 10,
                "time_us": 12.0,
                "per_hit_us": 1.2,
                "line_content": "def _iterencode_list(lst, _current_indent_level):"
              },
              {
                "line_number": 334,
                "hits": 10,
                "time_us": 12.0,
                "per_hit_us": 1.2,
                "line_content": "def _iterencode_dict(dct, _current_indent_level):"
              },
              {
                "line_number": 414,
                "hits": 10,
                "time_us": 11.0,
                "per_hit_us": 1.1,
                "line_content": "def _iterencode(o, _current_indent_level):"
              },
              {
                "line_number": 443,
                "hits": 10,
                "time_us": 15.0,
                "per_hit_us": 1.5,
                "line_content": "return _iterencode"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:load": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "function": "load",
            "total_time": 0.0023469999999999997,
            "total_hits": 70,
            "line_details": [
              {
                "line_number": 293,
                "hits": 30,
                "time_us": 2325.0,
                "per_hit_us": 77.5,
                "line_content": "return loads(fp.read(),"
              },
              {
                "line_number": 294,
                "hits": 10,
                "time_us": 7.0,
                "per_hit_us": 0.7,
                "line_content": "cls=cls, object_hook=object_hook,"
              },
              {
                "line_number": 295,
                "hits": 10,
                "time_us": 5.0,
                "per_hit_us": 0.5,
                "line_content": "parse_float=parse_float, parse_int=parse_int,"
              },
              {
                "line_number": 296,
                "hits": 20,
                "time_us": 10.0,
                "per_hit_us": 0.5,
                "line_content": "parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:loads": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "function": "loads",
            "total_time": 0.0019749999999999998,
            "total_hits": 60,
            "line_details": [
              {
                "line_number": 333,
                "hits": 10,
                "time_us": 10.0,
                "per_hit_us": 1.0,
                "line_content": "if isinstance(s, str):"
              },
              {
                "line_number": 334,
                "hits": 10,
                "time_us": 10.0,
                "per_hit_us": 1.0,
                "line_content": "if s.startswith('\\ufeff'):"
              },
              {
                "line_number": 343,
                "hits": 10,
                "time_us": 7.0,
                "per_hit_us": 0.7,
                "line_content": "if (cls is None and object_hook is None and"
              },
              {
                "line_number": 344,
                "hits": 10,
                "time_us": 8.0,
                "per_hit_us": 0.8,
                "line_content": "parse_int is None and parse_float is None and"
              },
              {
                "line_number": 345,
                "hits": 10,
                "time_us": 8.0,
                "per_hit_us": 0.8,
                "line_content": "parse_constant is None and object_pairs_hook is None and not kw):"
              },
              {
                "line_number": 346,
                "hits": 10,
                "time_us": 1932.0,
                "per_hit_us": 193.2,
                "line_content": "return _default_decoder.decode(s)"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:nested_function_calls": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "nested_function_calls",
            "total_time": 7.2e-05,
            "total_hits": 7,
            "line_details": [
              {
                "line_number": 237,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "print(\"Running nested function calls...\")"
              },
              {
                "line_number": 239,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "def level_1(n: int) -> int:"
              },
              {
                "line_number": 244,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "def level_2(n: int) -> int:"
              },
              {
                "line_number": 249,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "def level_3(n: int) -> int:"
              },
              {
                "line_number": 254,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "def level_4(n: int) -> int:"
              },
              {
                "line_number": 259,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "def level_5(n: int) -> int:"
              },
              {
                "line_number": 262,
                "hits": 1,
                "time_us": 63.0,
                "per_hit_us": 63.0,
                "line_content": "return level_1(8)"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:data_processing_pipeline": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "data_processing_pipeline",
            "total_time": 0.05490400000000001,
            "total_hits": 19,
            "line_details": [
              {
                "line_number": 267,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "print(\"Running data processing pipeline...\")"
              },
              {
                "line_number": 270,
                "hits": 1,
                "time_us": 5767.0,
                "per_hit_us": 5767.0,
                "line_content": "raw_data = [random.random() * 1000 for _ in range(10000)]"
              },
              {
                "line_number": 273,
                "hits": 1,
                "time_us": 5587.0,
                "per_hit_us": 5587.0,
                "line_content": "filtered_data = [x for x in raw_data if x > 100]"
              },
              {
                "line_number": 276,
                "hits": 1,
                "time_us": 5437.0,
                "per_hit_us": 5437.0,
                "line_content": "transformed_data = [math.log(x) if x > 1 else 0 for x in filtered_data]"
              },
              {
                "line_number": 279,
                "hits": 1,
                "time_us": 22.0,
                "per_hit_us": 22.0,
                "line_content": "sum_data = sum(transformed_data)"
              },
              {
                "line_number": 280,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "avg_data = sum_data / len(transformed_data) if transformed_data else 0"
              },
              {
                "line_number": 281,
                "hits": 1,
                "time_us": 68.0,
                "per_hit_us": 68.0,
                "line_content": "max_data = max(transformed_data) if transformed_data else 0"
              },
              {
                "line_number": 282,
                "hits": 1,
                "time_us": 66.0,
                "per_hit_us": 66.0,
                "line_content": "min_data = min(transformed_data) if transformed_data else 0"
              },
              {
                "line_number": 285,
                "hits": 2,
                "time_us": 37942.0,
                "per_hit_us": 18971.0,
                "line_content": "variance = sum((x - avg_data) ** 2 for x in transformed_data) / len("
              },
              {
                "line_number": 286,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "transformed_data"
              },
              {
                "line_number": 288,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "std_dev = math.sqrt(variance)"
              },
              {
                "line_number": 290,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "return {"
              },
              {
                "line_number": 291,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "\"count\": len(transformed_data),"
              },
              {
                "line_number": 292,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "\"sum\": sum_data,"
              },
              {
                "line_number": 293,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "\"average\": avg_data,"
              },
              {
                "line_number": 294,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "\"maximum\": max_data,"
              },
              {
                "line_number": 295,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "\"minimum\": min_data,"
              },
              {
                "line_number": 296,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "\"std_dev\": std_dev,"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:demonstrate_anti_patterns": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "demonstrate_anti_patterns",
            "total_time": 15.507387,
            "total_hits": 28,
            "line_details": [
              {
                "line_number": 302,
                "hits": 1,
                "time_us": 4.0,
                "per_hit_us": 4.0,
                "line_content": "print(\"Running anti-pattern demonstrations...\")"
              },
              {
                "line_number": 305,
                "hits": 1,
                "time_us": 8.0,
                "per_hit_us": 8.0,
                "line_content": "import numpy as np"
              },
              {
                "line_number": 308,
                "hits": 1,
                "time_us": 56.0,
                "per_hit_us": 56.0,
                "line_content": "bad_array = np.array(range(1000))  # Should use np.arange()"
              },
              {
                "line_number": 311,
                "hits": 1,
                "time_us": 24.0,
                "per_hit_us": 24.0,
                "line_content": "test_array = np.random.random(1000)"
              },
              {
                "line_number": 312,
                "hits": 1,
                "time_us": 39.0,
                "per_hit_us": 39.0,
                "line_content": "count_result = (test_array > 0.5).sum()  # Should use np.count_nonzero()"
              },
              {
                "line_number": 315,
                "hits": 1,
                "time_us": 21.0,
                "per_hit_us": 21.0,
                "line_content": "matrix_a = np.random.random((100, 50))"
              },
              {
                "line_number": 316,
                "hits": 1,
                "time_us": 18.0,
                "per_hit_us": 18.0,
                "line_content": "matrix_b = np.random.random((50, 100))"
              },
              {
                "line_number": 317,
                "hits": 1,
                "time_us": 183.0,
                "per_hit_us": 183.0,
                "line_content": "result_tensordot = np.tensordot(matrix_a, matrix_b, axes=(1, 0))  # Could use .dot()"
              },
              {
                "line_number": 320,
                "hits": 1,
                "time_us": 6.0,
                "per_hit_us": 6.0,
                "line_content": "original_array = np.random.random(1000)"
              },
              {
                "line_number": 321,
                "hits": 1,
                "time_us": 5.0,
                "per_hit_us": 5.0,
                "line_content": "copied_array = original_array.copy()  # Might be unnecessary"
              },
              {
                "line_number": 324,
                "hits": 1,
                "time_us": 8.0,
                "per_hit_us": 8.0,
                "line_content": "data = list(range(1000))"
              },
              {
                "line_number": 327,
                "hits": 1,
                "time_us": 3915.0,
                "per_hit_us": 3915.0,
                "line_content": "result = inefficient_nested_search(data, [500, 750, 999])"
              },
              {
                "line_number": 330,
                "hits": 1,
                "time_us": 502.0,
                "per_hit_us": 502.0,
                "line_content": "complex_result = overly_complex_function(10, 20, 30, 40, 50, 60, 70)"
              },
              {
                "line_number": 333,
                "hits": 1,
                "time_us": 61.0,
                "per_hit_us": 61.0,
                "line_content": "string_data = [f\"item_{i}\" for i in range(100)]"
              },
              {
                "line_number": 334,
                "hits": 1,
                "time_us": 508.0,
                "per_hit_us": 508.0,
                "line_content": "processed_data = inefficient_data_operations(string_data)"
              },
              {
                "line_number": 337,
                "hits": 1,
                "time_us": 15501874.0,
                "per_hit_us": 15501874.0,
                "line_content": "fib_recursive_result = fibonacci_recursive(30)"
              },
              {
                "line_number": 338,
                "hits": 1,
                "time_us": 137.0,
                "per_hit_us": 137.0,
                "line_content": "fib_iterative_result = fibonacci_iterative(30)"
              },
              {
                "line_number": 340,
                "hits": 1,
                "time_us": 4.0,
                "per_hit_us": 4.0,
                "line_content": "return {"
              },
              {
                "line_number": 341,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "\"nested_search\": result,"
              },
              {
                "line_number": 342,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "\"complex_function\": complex_result,"
              },
              {
                "line_number": 343,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "\"data_operations\": len(processed_data),"
              },
              {
                "line_number": 344,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "\"fibonacci_recursive\": fib_recursive_result,"
              },
              {
                "line_number": 345,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "\"fibonacci_iterative\": fib_iterative_result,"
              },
              {
                "line_number": 346,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "\"fibonacci_match\": fib_recursive_result == fib_iterative_result,"
              },
              {
                "line_number": 348,
                "hits": 1,
                "time_us": 6.0,
                "per_hit_us": 6.0,
                "line_content": "\"bad_array_size\": len(bad_array),"
              },
              {
                "line_number": 349,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "\"count_result\": count_result,"
              },
              {
                "line_number": 350,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "\"tensordot_shape\": result_tensordot.shape,"
              },
              {
                "line_number": 351,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "\"copied_array_size\": len(copied_array),"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:inefficient_nested_search": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "inefficient_nested_search",
            "total_time": 0.003308,
            "total_hits": 4516,
            "line_details": [
              {
                "line_number": 47,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "found_items = []"
              },
              {
                "line_number": 50,
                "hits": 4,
                "time_us": 3.0,
                "per_hit_us": 0.75,
                "line_content": "for target in targets:"
              },
              {
                "line_number": 51,
                "hits": 2252,
                "time_us": 1666.0,
                "per_hit_us": 0.7397868561278863,
                "line_content": "for item in data_list:"
              },
              {
                "line_number": 52,
                "hits": 2252,
                "time_us": 1631.0,
                "per_hit_us": 0.7242451154529307,
                "line_content": "if item == target:"
              },
              {
                "line_number": 53,
                "hits": 3,
                "time_us": 4.0,
                "per_hit_us": 1.3333333333333333,
                "line_content": "found_items.append(item)"
              },
              {
                "line_number": 54,
                "hits": 3,
                "time_us": 2.0,
                "per_hit_us": 0.6666666666666666,
                "line_content": "break  # At least we break early"
              },
              {
                "line_number": 56,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return found_items"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:overly_complex_function": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "overly_complex_function",
            "total_time": 0.00029200000000000005,
            "total_hits": 254,
            "line_details": [
              {
                "line_number": 64,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "result = 0"
              },
              {
                "line_number": 67,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if param1 > 0:"
              },
              {
                "line_number": 68,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if param2 > 0:"
              },
              {
                "line_number": 69,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "if param3 > 0:"
              },
              {
                "line_number": 70,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if param4 > 0:"
              },
              {
                "line_number": 71,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if param5 > 0:"
              },
              {
                "line_number": 72,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if param6 > 0:"
              },
              {
                "line_number": 73,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if param7 > 0:"
              },
              {
                "line_number": 74,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "result = ("
              },
              {
                "line_number": 75,
                "hits": 7,
                "time_us": 7.0,
                "per_hit_us": 1.0,
                "line_content": "param1"
              },
              {
                "line_number": 76,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "+ param2"
              },
              {
                "line_number": 77,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "+ param3"
              },
              {
                "line_number": 78,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "+ param4"
              },
              {
                "line_number": 79,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "+ param5"
              },
              {
                "line_number": 80,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "+ param6"
              },
              {
                "line_number": 81,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "+ param7"
              },
              {
                "line_number": 99,
                "hits": 11,
                "time_us": 14.0,
                "per_hit_us": 1.2727272727272727,
                "line_content": "for i in range(10):"
              },
              {
                "line_number": 100,
                "hits": 110,
                "time_us": 132.0,
                "per_hit_us": 1.2,
                "line_content": "for j in range(10):"
              },
              {
                "line_number": 101,
                "hits": 100,
                "time_us": 116.0,
                "per_hit_us": 1.16,
                "line_content": "if i + j == result % 10:"
              },
              {
                "line_number": 102,
                "hits": 10,
                "time_us": 7.0,
                "per_hit_us": 0.7,
                "line_content": "result += 1"
              },
              {
                "line_number": 104,
                "hits": 1,
                "time_us": 3.0,
                "per_hit_us": 3.0,
                "line_content": "return result"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:inefficient_data_operations": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "inefficient_data_operations",
            "total_time": 0.000353,
            "total_hits": 404,
            "line_details": [
              {
                "line_number": 113,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "processed_items = []"
              },
              {
                "line_number": 114,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "unique_items = []"
              },
              {
                "line_number": 116,
                "hits": 101,
                "time_us": 78.0,
                "per_hit_us": 0.7722772277227723,
                "line_content": "for item in items:"
              },
              {
                "line_number": 117,
                "hits": 100,
                "time_us": 100.0,
                "per_hit_us": 1.0,
                "line_content": "if item not in processed_items:  # O(n) operation - should use set"
              },
              {
                "line_number": 118,
                "hits": 100,
                "time_us": 78.0,
                "per_hit_us": 0.78,
                "line_content": "processed_items.append(item)"
              },
              {
                "line_number": 119,
                "hits": 100,
                "time_us": 95.0,
                "per_hit_us": 0.95,
                "line_content": "unique_items.append(f\"processed_{item}\")"
              },
              {
                "line_number": 121,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return unique_items"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:fibonacci_recursive": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "fibonacci_recursive",
            "total_time": 9.165794,
            "total_hits": 5870644,
            "line_details": [
              {
                "line_number": 27,
                "hits": 2935322,
                "time_us": 2360981.0,
                "per_hit_us": 0.8043345840762955,
                "line_content": "if n <= 1:"
              },
              {
                "line_number": 28,
                "hits": 1467662,
                "time_us": 1719272.0,
                "per_hit_us": 1.1714359300710926,
                "line_content": "return n"
              },
              {
                "line_number": 29,
                "hits": 1467660,
                "time_us": 5085541.0,
                "per_hit_us": 3.465067522450704,
                "line_content": "return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)"
              }
            ]
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:fibonacci_iterative": {
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "fibonacci_iterative",
            "total_time": 9.3e-05,
            "total_hits": 114,
            "line_details": [
              {
                "line_number": 34,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "if n <= 1:"
              },
              {
                "line_number": 36,
                "hits": 2,
                "time_us": 3.0,
                "per_hit_us": 1.5,
                "line_content": "a, b = 0, 1"
              },
              {
                "line_number": 37,
                "hits": 55,
                "time_us": 43.0,
                "per_hit_us": 0.7818181818181819,
                "line_content": "for _ in range(2, n + 1):"
              },
              {
                "line_number": 38,
                "hits": 53,
                "time_us": 41.0,
                "per_hit_us": 0.7735849056603773,
                "line_content": "a, b = b, a + b"
              },
              {
                "line_number": 39,
                "hits": 2,
                "time_us": 4.0,
                "per_hit_us": 2.0,
                "line_content": "return b"
              }
            ]
          }
        },
        "total_lines": 284,
        "total_hits": 22697860,
        "total_time": 107.75449100000003,
        "stats_output": "Timer unit: 1e-09 s\n\nTotal time: 9.16579 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: fibonacci_recursive at line 25\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n    25                                           def fibonacci_recursive(n: int) -> int:\n    26                                               \"\"\"Recursive fibonacci - creates deep call stack for call profiling.\"\"\"\n    27   2935322 2360981000.0    804.3     25.8      if n <= 1:\n    28   1467662 1719272000.0   1171.4     18.8          return n\n    29   1467660 5085541000.0   3465.1     55.5      return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)\n\nTotal time: 9.3e-05 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: fibonacci_iterative at line 32\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n    32                                           def fibonacci_iterative(n: int) -> int:\n    33                                               \"\"\"Iterative fibonacci - more efficient, shows different call pattern.\"\"\"\n    34         2       2000.0   1000.0      2.2      if n <= 1:\n    35                                                   return n\n    36         2       3000.0   1500.0      3.2      a, b = 0, 1\n    37        55      43000.0    781.8     46.2      for _ in range(2, n + 1):\n    38        53      41000.0    773.6     44.1          a, b = b, a + b\n    39         2       4000.0   2000.0      4.3      return b\n\nTotal time: 0.003308 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: inefficient_nested_search at line 42\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n    42                                           def inefficient_nested_search(data_list: List[int], targets: List[int]) -> List[int]:\n    43                                               \"\"\"\n    44                                               Example of O(n\u00b2) complexity - will be detected by pattern analysis.\n    45                                               This shows a nested loop anti-pattern.\n    46                                               \"\"\"\n    47         1       1000.0   1000.0      0.0      found_items = []\n    48                                           \n    49                                               # Nested loops create O(n\u00b2) complexity - pattern analysis will detect this\n    50         4       3000.0    750.0      0.1      for target in targets:\n    51      2252    1666000.0    739.8     50.4          for item in data_list:\n    52      2252    1631000.0    724.2     49.3              if item == target:\n    53         3       4000.0   1333.3      0.1                  found_items.append(item)\n    54         3       2000.0    666.7      0.1                  break  # At least we break early\n    55                                           \n    56         1       1000.0   1000.0      0.0      return found_items\n\nTotal time: 0.000292 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: overly_complex_function at line 59\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n    59                                           def overly_complex_function(param1, param2, param3, param4, param5, param6, param7):\n    60                                               \"\"\"\n    61                                               Function with too many parameters and high cyclomatic complexity.\n    62                                               Pattern analysis will detect both issues.\n    63                                               \"\"\"\n    64         1       2000.0   2000.0      0.7      result = 0\n    65                                           \n    66                                               # High cyclomatic complexity - deeply nested conditions\n    67         1       1000.0   1000.0      0.3      if param1 > 0:\n    68         1       1000.0   1000.0      0.3          if param2 > 0:\n    69         1          0.0      0.0      0.0              if param3 > 0:\n    70         1       1000.0   1000.0      0.3                  if param4 > 0:\n    71         1       1000.0   1000.0      0.3                      if param5 > 0:\n    72         1       1000.0   1000.0      0.3                          if param6 > 0:\n    73         1       1000.0   1000.0      0.3                              if param7 > 0:\n    74         1          0.0      0.0      0.0                                  result = (\n    75         7       7000.0   1000.0      2.4                                      param1\n    76         1       1000.0   1000.0      0.3                                      + param2\n    77         1       1000.0   1000.0      0.3                                      + param3\n    78         1       1000.0   1000.0      0.3                                      + param4\n    79         1       1000.0   1000.0      0.3                                      + param5\n    80         1          0.0      0.0      0.0                                      + param6\n    81         1       1000.0   1000.0      0.3                                      + param7\n    82                                                                           )\n    83                                                                       else:\n    84                                                                           result = (\n    85                                                                               param1 + param2 + param3 + param4 + param5 + param6\n    86                                                                           )\n    87                                                                   else:\n    88                                                                       result = param1 + param2 + param3 + param4 + param5\n    89                                                               else:\n    90                                                                   result = param1 + param2 + param3 + param4\n    91                                                           else:\n    92                                                               result = param1 + param2 + param3\n    93                                                       else:\n    94                                                           result = param1 + param2\n    95                                                   else:\n    96                                                       result = param1\n    97                                           \n    98                                               # More unnecessary complexity\n    99        11      14000.0   1272.7      4.8      for i in range(10):\n   100       110     132000.0   1200.0     45.2          for j in range(10):\n   101       100     116000.0   1160.0     39.7              if i + j == result % 10:\n   102        10       7000.0    700.0      2.4                  result += 1\n   103                                           \n   104         1       3000.0   3000.0      1.0      return result\n\nTotal time: 0.000353 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: inefficient_data_operations at line 107\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   107                                           def inefficient_data_operations(items: List[str]) -> List[str]:\n   108                                               \"\"\"\n   109                                               Example of inefficient data structure usage.\n   110                                               Using list for membership testing instead of set.\n   111                                               \"\"\"\n   112                                               # Inefficient: using list for membership testing (O(n) per lookup)\n   113         1       1000.0   1000.0      0.3      processed_items = []\n   114         1          0.0      0.0      0.0      unique_items = []\n   115                                           \n   116       101      78000.0    772.3     22.1      for item in items:\n   117       100     100000.0   1000.0     28.3          if item not in processed_items:  # O(n) operation - should use set\n   118       100      78000.0    780.0     22.1              processed_items.append(item)\n   119       100      95000.0    950.0     26.9              unique_items.append(f\"processed_{item}\")\n   120                                           \n   121         1       1000.0   1000.0      0.3      return unique_items\n\nTotal time: 12.9897 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: cpu_intensive_calculation at line 132\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   132                                           def cpu_intensive_calculation() -> float:\n   133                                               \"\"\"CPU-bound task - good for sampling profiler hotspot detection.\"\"\"\n   134         1       4000.0   4000.0      0.0      print(\"Running CPU-intensive calculations...\")\n   135                                           \n   136                                               # Matrix multiplication simulation\n   137         1       1000.0   1000.0      0.0      size = 200\n   138         1   22799000.0 2.28e+07      0.2      matrix_a = [[random.random() for _ in range(size)] for _ in range(size)]\n   139         1   22972000.0  2.3e+07      0.2      matrix_b = [[random.random() for _ in range(size)] for _ in range(size)]\n   140                                           \n   141         1       1000.0   1000.0      0.0      result = 0.0\n   142       201     173000.0    860.7      0.0      for i in range(size):\n   143     40200   32493000.0    808.3      0.3          for j in range(size):\n   144   8040000 6491779000.0    807.4     50.0              for k in range(size):\n   145   8000000 6402371000.0    800.3     49.3                  result += matrix_a[i][k] * matrix_b[k][j]\n   146                                           \n   147                                               # Mathematical computations\n   148     10001    8217000.0    821.6      0.1      for i in range(10000):\n   149     10000    8923000.0    892.3      0.1          result += math.sin(i) * math.cos(i) * math.sqrt(i + 1)\n   150                                           \n   151         1       9000.0   9000.0      0.0      return result\n\nTotal time: 1.40108 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: memory_intensive_operations at line 154\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   154                                           def memory_intensive_operations() -> List[Dict[str, Any]]:\n   155                                               \"\"\"Memory allocation patterns - good for memory profiler.\"\"\"\n   156         1       4000.0   4000.0      0.0      print(\"Running memory-intensive operations...\")\n   157                                           \n   158                                               # Large list allocation\n   159         1       1000.0   1000.0      0.0      large_list = []\n   160     50001   40941000.0    818.8      2.9      for i in range(50000):\n   161    100000   81211000.0    812.1      5.8          large_list.append(\n   162     50000   59945000.0   1198.9      4.3              {\n   163     50000   38443000.0    768.9      2.7                  \"id\": i,\n   164     50000  623693000.0  12473.9     44.5                  \"data\": [random.random() for _ in range(20)],\n   165     50000   47203000.0    944.1      3.4                  \"metadata\": {\n   166     50000   41728000.0    834.6      3.0                      \"timestamp\": time.time(),\n   167     50000   43950000.0    879.0      3.1                      \"category\": f\"category_{i % 10}\",\n   168     50000  203372000.0   4067.4     14.5                      \"tags\": [f\"tag_{j}\" for j in range(i % 5 + 1)],\n   169                                                           },\n   170                                                       }\n   171                                                   )\n   172                                           \n   173                                               # Dictionary operations\n   174         1       1000.0   1000.0      0.0      lookup_dict = {}\n   175     50001   40041000.0    800.8      2.9      for item in large_list:\n   176     50000   38924000.0    778.5      2.8          category = item[\"metadata\"][\"category\"]\n   177     50000   40765000.0    815.3      2.9          if category not in lookup_dict:\n   178        10       8000.0    800.0      0.0              lookup_dict[category] = []\n   179     50000   40082000.0    801.6      2.9          lookup_dict[category].append(item)\n   180                                           \n   181                                               # Memory churn - allocate and deallocate\n   182         1       1000.0   1000.0      0.0      temp_lists = []\n   183       101      94000.0    930.7      0.0      for i in range(100):\n   184       100   59993000.0 599930.0      4.3          temp_list = [random.random() for _ in range(1000)]\n   185       100      91000.0    910.0      0.0          temp_lists.append(temp_list)\n   186       100      95000.0    950.0      0.0          if len(temp_lists) > 10:\n   187        90     487000.0   5411.1      0.0              temp_lists.pop(0)  # Remove oldest\n   188                                           \n   189         1       7000.0   7000.0      0.0      return large_list\n\nTotal time: 0.347851 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: file_io_operations at line 192\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   192                                           def file_io_operations() -> Dict[str, Any]:\n   193                                               \"\"\"File I/O operations - shows I/O patterns.\"\"\"\n   194         1       5000.0   5000.0      0.0      print(\"Running file I/O operations...\")\n   195                                           \n   196                                               # Create temporary files for I/O testing\n   197         1     409000.0 409000.0      0.1      temp_dir = tempfile.mkdtemp()\n   198                                           \n   199         1          0.0      0.0      0.0      try:\n   200                                                   # Write multiple files\n   201         1       1000.0   1000.0      0.0          file_data = {}\n   202        11      15000.0   1363.6      0.0          for i in range(10):\n   203        10     237000.0  23700.0      0.1              filename = os.path.join(temp_dir, f\"test_file_{i}.json\")\n   204        10       9000.0    900.0      0.0              data = {\n   205        10      15000.0   1500.0      0.0                  \"file_id\": i,\n   206        10    5477000.0 547700.0      1.6                  \"content\": [random.random() for _ in range(1000)],\n   207        10      11000.0   1100.0      0.0                  \"metadata\": {\"created\": time.time()},\n   208                                                       }\n   209                                           \n   210        20    1892000.0  94600.0      0.5              with open(filename, \"w\") as f:\n   211        10  336372000.0 3.36e+07     96.7                  json.dump(data, f)\n   212                                           \n   213        10      13000.0   1300.0      0.0              file_data[filename] = data\n   214                                           \n   215                                                   # Read files back\n   216         1       1000.0   1000.0      0.0          read_data = {}\n   217        11       8000.0    727.3      0.0          for filename in file_data:\n   218        20     278000.0  13900.0      0.1              with open(filename, \"r\") as f:\n   219        10    2465000.0 246500.0      0.7                  read_data[filename] = json.load(f)\n   220                                           \n   221                                                   # Process data\n   222         1       1000.0   1000.0      0.0          total_values = 0\n   223        11       9000.0    818.2      0.0          for data in read_data.values():\n   224        10       9000.0    900.0      0.0              total_values += len(data[\"content\"])\n   225                                           \n   226         1       1000.0   1000.0      0.0          return {\"files_processed\": len(read_data), \"total_values\": total_values}\n   227                                           \n   228                                               finally:\n   229                                                   # Cleanup\n   230        11      29000.0   2636.4      0.0          for filename in os.listdir(temp_dir):\n   231        10     552000.0  55200.0      0.2              os.remove(os.path.join(temp_dir, filename))\n   232         1      42000.0  42000.0      0.0          os.rmdir(temp_dir)\n\nTotal time: 7.2e-05 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: nested_function_calls at line 235\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   235                                           def nested_function_calls() -> int:\n   236                                               \"\"\"Complex function call hierarchy - good for call profiler.\"\"\"\n   237         1       3000.0   3000.0      4.2      print(\"Running nested function calls...\")\n   238                                           \n   239         1       2000.0   2000.0      2.8      def level_1(n: int) -> int:\n   240                                                   if n <= 0:\n   241                                                       return 1\n   242                                                   return level_2(n - 1) + level_3(n - 1)\n   243                                           \n   244         1       1000.0   1000.0      1.4      def level_2(n: int) -> int:\n   245                                                   if n <= 0:\n   246                                                       return 2\n   247                                                   return level_4(n - 1) * 2\n   248                                           \n   249         1       1000.0   1000.0      1.4      def level_3(n: int) -> int:\n   250                                                   if n <= 0:\n   251                                                       return 3\n   252                                                   return level_4(n - 1) + level_5(n - 1)\n   253                                           \n   254         1       1000.0   1000.0      1.4      def level_4(n: int) -> int:\n   255                                                   if n <= 0:\n   256                                                       return 4\n   257                                                   return level_5(n - 1) + 1\n   258                                           \n   259         1       1000.0   1000.0      1.4      def level_5(n: int) -> int:\n   260                                                   return 5 + (n * 2 if n > 0 else 0)\n   261                                           \n   262         1      63000.0  63000.0     87.5      return level_1(8)\n\nTotal time: 0.054904 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: data_processing_pipeline at line 265\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   265                                           def data_processing_pipeline() -> Dict[str, float]:\n   266                                               \"\"\"Data processing with multiple stages - shows line-by-line execution.\"\"\"\n   267         1       2000.0   2000.0      0.0      print(\"Running data processing pipeline...\")\n   268                                           \n   269                                               # Stage 1: Generate raw data\n   270         1    5767000.0 5.77e+06     10.5      raw_data = [random.random() * 1000 for _ in range(10000)]\n   271                                           \n   272                                               # Stage 2: Filter data\n   273         1    5587000.0 5.59e+06     10.2      filtered_data = [x for x in raw_data if x > 100]\n   274                                           \n   275                                               # Stage 3: Transform data\n   276         1    5437000.0 5.44e+06      9.9      transformed_data = [math.log(x) if x > 1 else 0 for x in filtered_data]\n   277                                           \n   278                                               # Stage 4: Aggregate data\n   279         1      22000.0  22000.0      0.0      sum_data = sum(transformed_data)\n   280         1       3000.0   3000.0      0.0      avg_data = sum_data / len(transformed_data) if transformed_data else 0\n   281         1      68000.0  68000.0      0.1      max_data = max(transformed_data) if transformed_data else 0\n   282         1      66000.0  66000.0      0.1      min_data = min(transformed_data) if transformed_data else 0\n   283                                           \n   284                                               # Stage 5: Statistical calculations\n   285         2   37942000.0  1.9e+07     69.1      variance = sum((x - avg_data) ** 2 for x in transformed_data) / len(\n   286         1       1000.0   1000.0      0.0          transformed_data\n   287                                               )\n   288         1       2000.0   2000.0      0.0      std_dev = math.sqrt(variance)\n   289                                           \n   290         1       3000.0   3000.0      0.0      return {\n   291         1       1000.0   1000.0      0.0          \"count\": len(transformed_data),\n   292         1          0.0      0.0      0.0          \"sum\": sum_data,\n   293         1          0.0      0.0      0.0          \"average\": avg_data,\n   294         1       1000.0   1000.0      0.0          \"maximum\": max_data,\n   295         1       1000.0   1000.0      0.0          \"minimum\": min_data,\n   296         1       1000.0   1000.0      0.0          \"std_dev\": std_dev,\n   297                                               }\n\nTotal time: 15.5074 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: demonstrate_anti_patterns at line 300\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   300                                           def demonstrate_anti_patterns():\n   301                                               \"\"\"Demonstrate various anti-patterns for detection.\"\"\"\n   302         1       4000.0   4000.0      0.0      print(\"Running anti-pattern demonstrations...\")\n   303                                           \n   304                                               # Scientific computing anti-patterns\n   305         1       8000.0   8000.0      0.0      import numpy as np\n   306                                           \n   307                                               # Pattern: inefficient array creation\n   308         1      56000.0  56000.0      0.0      bad_array = np.array(range(1000))  # Should use np.arange()\n   309                                           \n   310                                               # Pattern: inefficient boolean array sum\n   311         1      24000.0  24000.0      0.0      test_array = np.random.random(1000)\n   312         1      39000.0  39000.0      0.0      count_result = (test_array > 0.5).sum()  # Should use np.count_nonzero()\n   313                                           \n   314                                               # Pattern: suboptimal matrix operations\n   315         1      21000.0  21000.0      0.0      matrix_a = np.random.random((100, 50))\n   316         1      18000.0  18000.0      0.0      matrix_b = np.random.random((50, 100))\n   317         1     183000.0 183000.0      0.0      result_tensordot = np.tensordot(matrix_a, matrix_b, axes=(1, 0))  # Could use .dot()\n   318                                           \n   319                                               # Pattern: unnecessary array copy\n   320         1       6000.0   6000.0      0.0      original_array = np.random.random(1000)\n   321         1       5000.0   5000.0      0.0      copied_array = original_array.copy()  # Might be unnecessary\n   322                                           \n   323                                               # Existing anti-patterns\n   324         1       8000.0   8000.0      0.0      data = list(range(1000))\n   325                                           \n   326                                               # Nested loops (O(n\u00b2) complexity)\n   327         1    3915000.0 3.92e+06      0.0      result = inefficient_nested_search(data, [500, 750, 999])\n   328                                           \n   329                                               # Overly complex function\n   330         1     502000.0 502000.0      0.0      complex_result = overly_complex_function(10, 20, 30, 40, 50, 60, 70)\n   331                                           \n   332                                               # Inefficient data operations\n   333         1      61000.0  61000.0      0.0      string_data = [f\"item_{i}\" for i in range(100)]\n   334         1     508000.0 508000.0      0.0      processed_data = inefficient_data_operations(string_data)\n   335                                           \n   336                                               # Demonstrate recursion without memoization\n   337         1     1.55e+10 1.55e+10    100.0      fib_recursive_result = fibonacci_recursive(30)\n   338         1     137000.0 137000.0      0.0      fib_iterative_result = fibonacci_iterative(30)\n   339                                           \n   340         1       4000.0   4000.0      0.0      return {\n   341         1       1000.0   1000.0      0.0          \"nested_search\": result,\n   342         1       1000.0   1000.0      0.0          \"complex_function\": complex_result,\n   343         1       1000.0   1000.0      0.0          \"data_operations\": len(processed_data),\n   344         1          0.0      0.0      0.0          \"fibonacci_recursive\": fib_recursive_result,\n   345         1          0.0      0.0      0.0          \"fibonacci_iterative\": fib_iterative_result,\n   346         1          0.0      0.0      0.0          \"fibonacci_match\": fib_recursive_result == fib_iterative_result,\n   347                                                   # Scientific computing results\n   348         1       6000.0   6000.0      0.0          \"bad_array_size\": len(bad_array),\n   349         1       1000.0   1000.0      0.0          \"count_result\": count_result,\n   350         1       2000.0   2000.0      0.0          \"tensordot_shape\": result_tensordot.shape,\n   351         1       2000.0   2000.0      0.0          \"copied_array_size\": len(copied_array),\n   352                                               }\n\nTotal time: 33.965 s\nFile: /Users/Adam/Pycroscope/docs/examples/sample_workload.py\nFunction: mixed_workload at line 355\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   355                                           def mixed_workload() -> Dict[str, Any]:\n   356                                               \"\"\"Combined workload showing all patterns together.\"\"\"\n   357         1       2000.0   2000.0      0.0      print(\"Running mixed workload demonstration...\")\n   358                                           \n   359         1       1000.0   1000.0      0.0      results = {}\n   360                                           \n   361                                               # CPU work\n   362         1       1000.0   1000.0      0.0      start_time = time.time()\n   363         1     1.52e+10 1.52e+10     44.7      cpu_result = cpu_intensive_calculation()\n   364         1       2000.0   2000.0      0.0      results[\"cpu_time\"] = time.time() - start_time\n   365         1       2000.0   2000.0      0.0      results[\"cpu_result_sample\"] = cpu_result\n   366                                           \n   367                                               # Memory work\n   368         1       1000.0   1000.0      0.0      start_time = time.time()\n   369         1 1493286000.0 1.49e+09      4.4      memory_data = memory_intensive_operations()\n   370         1       3000.0   3000.0      0.0      results[\"memory_time\"] = time.time() - start_time\n   371         1       1000.0   1000.0      0.0      results[\"memory_objects_created\"] = len(memory_data)\n   372                                           \n   373                                               # I/O work\n   374         1       1000.0   1000.0      0.0      start_time = time.time()\n   375         1  348440000.0 3.48e+08      1.0      io_result = file_io_operations()\n   376         1       2000.0   2000.0      0.0      results[\"io_time\"] = time.time() - start_time\n   377         1       1000.0   1000.0      0.0      results[\"io_operations\"] = io_result\n   378                                           \n   379                                               # Function calls\n   380         1       1000.0   1000.0      0.0      start_time = time.time()\n   381         1     130000.0 130000.0      0.0      call_result = nested_function_calls()\n   382         1       1000.0   1000.0      0.0      results[\"call_time\"] = time.time() - start_time\n   383         1       1000.0   1000.0      0.0      results[\"call_result\"] = call_result\n   384                                           \n   385                                               # Data processing\n   386         1       1000.0   1000.0      0.0      start_time = time.time()\n   387         1   55173000.0 5.52e+07      0.2      processing_result = data_processing_pipeline()\n   388         1       2000.0   2000.0      0.0      results[\"processing_time\"] = time.time() - start_time\n   389         1       1000.0   1000.0      0.0      results[\"processing_stats\"] = processing_result\n   390                                           \n   391                                               # Anti-pattern demonstrations (new)\n   392         1       2000.0   2000.0      0.0      start_time = time.time()\n   393         1     1.55e+10 1.55e+10     45.7      antipattern_result = demonstrate_anti_patterns()\n   394         1       2000.0   2000.0      0.0      results[\"antipattern_time\"] = time.time() - start_time\n   395         1       1000.0   1000.0      0.0      results[\"antipattern_stats\"] = antipattern_result\n   396                                           \n   397                                               # Fibonacci comparison\n   398         1       1000.0   1000.0      0.0      start_time = time.time()\n   399         1 1370047000.0 1.37e+09      4.0      fib_recursive = fibonacci_recursive(25)  # Small enough to not take forever\n   400         1       2000.0   2000.0      0.0      results[\"fib_recursive_time\"] = time.time() - start_time\n   401                                           \n   402         1       1000.0   1000.0      0.0      start_time = time.time()\n   403         1      56000.0  56000.0      0.0      fib_iterative = fibonacci_iterative(25)\n   404         1       1000.0   1000.0      0.0      results[\"fib_iterative_time\"] = time.time() - start_time\n   405                                           \n   406         1       1000.0   1000.0      0.0      results[\"fib_results_match\"] = fib_recursive == fib_iterative\n   407                                           \n   408         1       3000.0   3000.0      0.0      return results\n\nTotal time: 33.9805 s\nFile: /Users/Adam/Pycroscope/docs/examples/usage_example.py\nFunction: run_sample_workload at line 28\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n    28                                           def run_sample_workload():\n    29                                               \"\"\"\n    30                                               REPLACE THIS SECTION WITH YOUR OWN CODE\n    31                                           \n    32                                               This function runs our sample workload script.\n    33                                               Users should replace this with their own code to profile.\n    34                                           \n    35                                               Examples of what you might put here:\n    36                                               - Import and call your own functions\n    37                                               - Run your data processing pipeline\n    38                                               - Execute your machine learning training\n    39                                               - Run your web scraping script\n    40                                               - Call your API processing logic\n    41                                               \"\"\"\n    42                                               # Import the sample workload (replace this with your own imports)\n    43         1    1959000.0 1.96e+06      0.0      from sample_workload import mixed_workload\n    44                                           \n    45         1       5000.0   5000.0      0.0      print(\"Executing workload to be profiled...\")\n    46         1       3000.0   3000.0      0.0      print(\"   (Replace this section with your own code)\")\n    47         1       3000.0   3000.0      0.0      print()\n    48                                           \n    49                                               # Execute the workload (replace this with your own function calls)\n    50         1      3.4e+10  3.4e+10    100.0      results = mixed_workload()\n    51                                           \n    52         1       2000.0   2000.0      0.0      return results\n\nTotal time: 4.2e-05 s\nFile: /Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py\nFunction: register_trace_function at line 122\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   122                                           def register_trace_function(profiler_name: str, trace_func: Callable):\n   123                                               \"\"\"Register a trace function with the global multiplexer.\"\"\"\n   124         1      42000.0  42000.0    100.0      _trace_multiplexer.register_profiler(profiler_name, trace_func)\n\nTotal time: 0 s\nFile: /Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py\nFunction: unregister_trace_function at line 127\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   127                                           def unregister_trace_function(profiler_name: str):\n   128                                               \"\"\"Unregister a trace function from the global multiplexer.\"\"\"\n   129                                               _trace_multiplexer.unregister_profiler(profiler_name)\n\nTotal time: 0.332096 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py\nFunction: dump at line 120\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   120                                           def dump(obj, fp, *, skipkeys=False, ensure_ascii=True, check_circular=True,\n   121                                                   allow_nan=True, cls=None, indent=None, separators=None,\n   122                                                   default=None, sort_keys=False, **kw):\n   123                                               \"\"\"Serialize ``obj`` as a JSON formatted stream to ``fp`` (a\n   124                                               ``.write()``-supporting file-like object).\n   125                                           \n   126                                               If ``skipkeys`` is true then ``dict`` keys that are not basic types\n   127                                               (``str``, ``int``, ``float``, ``bool``, ``None``) will be skipped\n   128                                               instead of raising a ``TypeError``.\n   129                                           \n   130                                               If ``ensure_ascii`` is false, then the strings written to ``fp`` can\n   131                                               contain non-ASCII characters if they appear in strings contained in\n   132                                               ``obj``. Otherwise, all such characters are escaped in JSON strings.\n   133                                           \n   134                                               If ``check_circular`` is false, then the circular reference check\n   135                                               for container types will be skipped and a circular reference will\n   136                                               result in an ``RecursionError`` (or worse).\n   137                                           \n   138                                               If ``allow_nan`` is false, then it will be a ``ValueError`` to\n   139                                               serialize out of range ``float`` values (``nan``, ``inf``, ``-inf``)\n   140                                               in strict compliance of the JSON specification, instead of using the\n   141                                               JavaScript equivalents (``NaN``, ``Infinity``, ``-Infinity``).\n   142                                           \n   143                                               If ``indent`` is a non-negative integer, then JSON array elements and\n   144                                               object members will be pretty-printed with that indent level. An indent\n   145                                               level of 0 will only insert newlines. ``None`` is the most compact\n   146                                               representation.\n   147                                           \n   148                                               If specified, ``separators`` should be an ``(item_separator, key_separator)``\n   149                                               tuple.  The default is ``(', ', ': ')`` if *indent* is ``None`` and\n   150                                               ``(',', ': ')`` otherwise.  To get the most compact JSON representation,\n   151                                               you should specify ``(',', ':')`` to eliminate whitespace.\n   152                                           \n   153                                               ``default(obj)`` is a function that should return a serializable version\n   154                                               of obj or raise TypeError. The default simply raises TypeError.\n   155                                           \n   156                                               If *sort_keys* is true (default: ``False``), then the output of\n   157                                               dictionaries will be sorted by key.\n   158                                           \n   159                                               To use a custom ``JSONEncoder`` subclass (e.g. one that overrides the\n   160                                               ``.default()`` method to serialize additional types), specify it with\n   161                                               the ``cls`` kwarg; otherwise ``JSONEncoder`` is used.\n   162                                           \n   163                                               \"\"\"\n   164                                               # cached encoder\n   165        10      10000.0   1000.0      0.0      if (not skipkeys and ensure_ascii and\n   166        10      10000.0   1000.0      0.0          check_circular and allow_nan and\n   167        10      10000.0   1000.0      0.0          cls is None and indent is None and separators is None and\n   168        10      10000.0   1000.0      0.0          default is None and not sort_keys and not kw):\n   169        10     420000.0  42000.0      0.1          iterable = _default_encoder.iterencode(obj)\n   170                                               else:\n   171                                                   if cls is None:\n   172                                                       cls = JSONEncoder\n   173                                                   iterable = cls(skipkeys=skipkeys, ensure_ascii=ensure_ascii,\n   174                                                       check_circular=check_circular, allow_nan=allow_nan, indent=indent,\n   175                                                       separators=separators,\n   176                                                       default=default, sort_keys=sort_keys, **kw).iterencode(obj)\n   177                                               # could accelerate with writelines in some versions of Python, at\n   178                                               # a debuggability cost\n   179     10180  321509000.0  31582.4     96.8      for chunk in iterable:\n   180     10170   10127000.0    995.8      3.0          fp.write(chunk)\n\nTotal time: 0.002347 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py\nFunction: load at line 274\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   274                                           def load(fp, *, cls=None, object_hook=None, parse_float=None,\n   275                                                   parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n   276                                               \"\"\"Deserialize ``fp`` (a ``.read()``-supporting file-like object containing\n   277                                               a JSON document) to a Python object.\n   278                                           \n   279                                               ``object_hook`` is an optional function that will be called with the\n   280                                               result of any object literal decode (a ``dict``). The return value of\n   281                                               ``object_hook`` will be used instead of the ``dict``. This feature\n   282                                               can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n   283                                           \n   284                                               ``object_pairs_hook`` is an optional function that will be called with the\n   285                                               result of any object literal decoded with an ordered list of pairs.  The\n   286                                               return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n   287                                               This feature can be used to implement custom decoders.  If ``object_hook``\n   288                                               is also defined, the ``object_pairs_hook`` takes priority.\n   289                                           \n   290                                               To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n   291                                               kwarg; otherwise ``JSONDecoder`` is used.\n   292                                               \"\"\"\n   293        30    2325000.0  77500.0     99.1      return loads(fp.read(),\n   294        10       7000.0    700.0      0.3          cls=cls, object_hook=object_hook,\n   295        10       5000.0    500.0      0.2          parse_float=parse_float, parse_int=parse_int,\n   296        20      10000.0    500.0      0.4          parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n\nTotal time: 0.001975 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py\nFunction: loads at line 299\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   299                                           def loads(s, *, cls=None, object_hook=None, parse_float=None,\n   300                                                   parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n   301                                               \"\"\"Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance\n   302                                               containing a JSON document) to a Python object.\n   303                                           \n   304                                               ``object_hook`` is an optional function that will be called with the\n   305                                               result of any object literal decode (a ``dict``). The return value of\n   306                                               ``object_hook`` will be used instead of the ``dict``. This feature\n   307                                               can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n   308                                           \n   309                                               ``object_pairs_hook`` is an optional function that will be called with the\n   310                                               result of any object literal decoded with an ordered list of pairs.  The\n   311                                               return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n   312                                               This feature can be used to implement custom decoders.  If ``object_hook``\n   313                                               is also defined, the ``object_pairs_hook`` takes priority.\n   314                                           \n   315                                               ``parse_float``, if specified, will be called with the string\n   316                                               of every JSON float to be decoded. By default this is equivalent to\n   317                                               float(num_str). This can be used to use another datatype or parser\n   318                                               for JSON floats (e.g. decimal.Decimal).\n   319                                           \n   320                                               ``parse_int``, if specified, will be called with the string\n   321                                               of every JSON int to be decoded. By default this is equivalent to\n   322                                               int(num_str). This can be used to use another datatype or parser\n   323                                               for JSON integers (e.g. float).\n   324                                           \n   325                                               ``parse_constant``, if specified, will be called with one of the\n   326                                               following strings: -Infinity, Infinity, NaN.\n   327                                               This can be used to raise an exception if invalid JSON numbers\n   328                                               are encountered.\n   329                                           \n   330                                               To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n   331                                               kwarg; otherwise ``JSONDecoder`` is used.\n   332                                               \"\"\"\n   333        10      10000.0   1000.0      0.5      if isinstance(s, str):\n   334        10      10000.0   1000.0      0.5          if s.startswith('\\ufeff'):\n   335                                                       raise JSONDecodeError(\"Unexpected UTF-8 BOM (decode using utf-8-sig)\",\n   336                                                                             s, 0)\n   337                                               else:\n   338                                                   if not isinstance(s, (bytes, bytearray)):\n   339                                                       raise TypeError(f'the JSON object must be str, bytes or bytearray, '\n   340                                                                       f'not {s.__class__.__name__}')\n   341                                                   s = s.decode(detect_encoding(s), 'surrogatepass')\n   342                                           \n   343        10       7000.0    700.0      0.4      if (cls is None and object_hook is None and\n   344        10       8000.0    800.0      0.4              parse_int is None and parse_float is None and\n   345        10       8000.0    800.0      0.4              parse_constant is None and object_pairs_hook is None and not kw):\n   346        10    1932000.0 193200.0     97.8          return _default_decoder.decode(s)\n   347                                               if cls is None:\n   348                                                   cls = JSONDecoder\n   349                                               if object_hook is not None:\n   350                                                   kw['object_hook'] = object_hook\n   351                                               if object_pairs_hook is not None:\n   352                                                   kw['object_pairs_hook'] = object_pairs_hook\n   353                                               if parse_float is not None:\n   354                                                   kw['parse_float'] = parse_float\n   355                                               if parse_int is not None:\n   356                                                   kw['parse_int'] = parse_int\n   357                                               if parse_constant is not None:\n   358                                                   kw['parse_constant'] = parse_constant\n   359                                               return cls(**kw).decode(s)\n\nTotal time: 6.1e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py\nFunction: _make_iterencode at line 260\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   260                                           def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,\n   261                                                   _key_separator, _item_separator, _sort_keys, _skipkeys, _one_shot,\n   262                                                   ## HACK: hand-optimized bytecode; turn globals into locals\n   263                                                   ValueError=ValueError,\n   264                                                   dict=dict,\n   265                                                   float=float,\n   266                                                   id=id,\n   267                                                   int=int,\n   268                                                   isinstance=isinstance,\n   269                                                   list=list,\n   270                                                   str=str,\n   271                                                   tuple=tuple,\n   272                                                   _intstr=int.__repr__,\n   273                                               ):\n   274                                           \n   275        10      11000.0   1100.0     18.0      if _indent is not None and not isinstance(_indent, str):\n   276                                                   _indent = ' ' * _indent\n   277                                           \n   278        10      12000.0   1200.0     19.7      def _iterencode_list(lst, _current_indent_level):\n   279                                                   if not lst:\n   280                                                       yield '[]'\n   281                                                       return\n   282                                                   if markers is not None:\n   283                                                       markerid = id(lst)\n   284                                                       if markerid in markers:\n   285                                                           raise ValueError(\"Circular reference detected\")\n   286                                                       markers[markerid] = lst\n   287                                                   buf = '['\n   288                                                   if _indent is not None:\n   289                                                       _current_indent_level += 1\n   290                                                       newline_indent = '\\n' + _indent * _current_indent_level\n   291                                                       separator = _item_separator + newline_indent\n   292                                                       buf += newline_indent\n   293                                                   else:\n   294                                                       newline_indent = None\n   295                                                       separator = _item_separator\n   296                                                   first = True\n   297                                                   for value in lst:\n   298                                                       if first:\n   299                                                           first = False\n   300                                                       else:\n   301                                                           buf = separator\n   302                                                       if isinstance(value, str):\n   303                                                           yield buf + _encoder(value)\n   304                                                       elif value is None:\n   305                                                           yield buf + 'null'\n   306                                                       elif value is True:\n   307                                                           yield buf + 'true'\n   308                                                       elif value is False:\n   309                                                           yield buf + 'false'\n   310                                                       elif isinstance(value, int):\n   311                                                           # Subclasses of int/float may override __repr__, but we still\n   312                                                           # want to encode them as integers/floats in JSON. One example\n   313                                                           # within the standard library is IntEnum.\n   314                                                           yield buf + _intstr(value)\n   315                                                       elif isinstance(value, float):\n   316                                                           # see comment above for int\n   317                                                           yield buf + _floatstr(value)\n   318                                                       else:\n   319                                                           yield buf\n   320                                                           if isinstance(value, (list, tuple)):\n   321                                                               chunks = _iterencode_list(value, _current_indent_level)\n   322                                                           elif isinstance(value, dict):\n   323                                                               chunks = _iterencode_dict(value, _current_indent_level)\n   324                                                           else:\n   325                                                               chunks = _iterencode(value, _current_indent_level)\n   326                                                           yield from chunks\n   327                                                   if newline_indent is not None:\n   328                                                       _current_indent_level -= 1\n   329                                                       yield '\\n' + _indent * _current_indent_level\n   330                                                   yield ']'\n   331                                                   if markers is not None:\n   332                                                       del markers[markerid]\n   333                                           \n   334        10      12000.0   1200.0     19.7      def _iterencode_dict(dct, _current_indent_level):\n   335                                                   if not dct:\n   336                                                       yield '{}'\n   337                                                       return\n   338                                                   if markers is not None:\n   339                                                       markerid = id(dct)\n   340                                                       if markerid in markers:\n   341                                                           raise ValueError(\"Circular reference detected\")\n   342                                                       markers[markerid] = dct\n   343                                                   yield '{'\n   344                                                   if _indent is not None:\n   345                                                       _current_indent_level += 1\n   346                                                       newline_indent = '\\n' + _indent * _current_indent_level\n   347                                                       item_separator = _item_separator + newline_indent\n   348                                                       yield newline_indent\n   349                                                   else:\n   350                                                       newline_indent = None\n   351                                                       item_separator = _item_separator\n   352                                                   first = True\n   353                                                   if _sort_keys:\n   354                                                       items = sorted(dct.items())\n   355                                                   else:\n   356                                                       items = dct.items()\n   357                                                   for key, value in items:\n   358                                                       if isinstance(key, str):\n   359                                                           pass\n   360                                                       # JavaScript is weakly typed for these, so it makes sense to\n   361                                                       # also allow them.  Many encoders seem to do something like this.\n   362                                                       elif isinstance(key, float):\n   363                                                           # see comment for int/float in _make_iterencode\n   364                                                           key = _floatstr(key)\n   365                                                       elif key is True:\n   366                                                           key = 'true'\n   367                                                       elif key is False:\n   368                                                           key = 'false'\n   369                                                       elif key is None:\n   370                                                           key = 'null'\n   371                                                       elif isinstance(key, int):\n   372                                                           # see comment for int/float in _make_iterencode\n   373                                                           key = _intstr(key)\n   374                                                       elif _skipkeys:\n   375                                                           continue\n   376                                                       else:\n   377                                                           raise TypeError(f'keys must be str, int, float, bool or None, '\n   378                                                                           f'not {key.__class__.__name__}')\n   379                                                       if first:\n   380                                                           first = False\n   381                                                       else:\n   382                                                           yield item_separator\n   383                                                       yield _encoder(key)\n   384                                                       yield _key_separator\n   385                                                       if isinstance(value, str):\n   386                                                           yield _encoder(value)\n   387                                                       elif value is None:\n   388                                                           yield 'null'\n   389                                                       elif value is True:\n   390                                                           yield 'true'\n   391                                                       elif value is False:\n   392                                                           yield 'false'\n   393                                                       elif isinstance(value, int):\n   394                                                           # see comment for int/float in _make_iterencode\n   395                                                           yield _intstr(value)\n   396                                                       elif isinstance(value, float):\n   397                                                           # see comment for int/float in _make_iterencode\n   398                                                           yield _floatstr(value)\n   399                                                       else:\n   400                                                           if isinstance(value, (list, tuple)):\n   401                                                               chunks = _iterencode_list(value, _current_indent_level)\n   402                                                           elif isinstance(value, dict):\n   403                                                               chunks = _iterencode_dict(value, _current_indent_level)\n   404                                                           else:\n   405                                                               chunks = _iterencode(value, _current_indent_level)\n   406                                                           yield from chunks\n   407                                                   if newline_indent is not None:\n   408                                                       _current_indent_level -= 1\n   409                                                       yield '\\n' + _indent * _current_indent_level\n   410                                                   yield '}'\n   411                                                   if markers is not None:\n   412                                                       del markers[markerid]\n   413                                           \n   414        10      11000.0   1100.0     18.0      def _iterencode(o, _current_indent_level):\n   415                                                   if isinstance(o, str):\n   416                                                       yield _encoder(o)\n   417                                                   elif o is None:\n   418                                                       yield 'null'\n   419                                                   elif o is True:\n   420                                                       yield 'true'\n   421                                                   elif o is False:\n   422                                                       yield 'false'\n   423                                                   elif isinstance(o, int):\n   424                                                       # see comment for int/float in _make_iterencode\n   425                                                       yield _intstr(o)\n   426                                                   elif isinstance(o, float):\n   427                                                       # see comment for int/float in _make_iterencode\n   428                                                       yield _floatstr(o)\n   429                                                   elif isinstance(o, (list, tuple)):\n   430                                                       yield from _iterencode_list(o, _current_indent_level)\n   431                                                   elif isinstance(o, dict):\n   432                                                       yield from _iterencode_dict(o, _current_indent_level)\n   433                                                   else:\n   434                                                       if markers is not None:\n   435                                                           markerid = id(o)\n   436                                                           if markerid in markers:\n   437                                                               raise ValueError(\"Circular reference detected\")\n   438                                                           markers[markerid] = o\n   439                                                       o = _default(o)\n   440                                                       yield from _iterencode(o, _current_indent_level)\n   441                                                       if markers is not None:\n   442                                                           del markers[markerid]\n   443        10      15000.0   1500.0     24.6      return _iterencode\n\nTotal time: 2.3e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/random.py\nFunction: Random.choices at line 454\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   454                                               def choices(self, population, weights=None, *, cum_weights=None, k=1):\n   455                                                   \"\"\"Return a k sized list of population elements chosen with replacement.\n   456                                           \n   457                                                   If the relative weights or cumulative weights are not specified,\n   458                                                   the selections are made with equal probability.\n   459                                           \n   460                                                   \"\"\"\n   461         2       2000.0   1000.0      8.7          random = self.random\n   462         2       1000.0    500.0      4.3          n = len(population)\n   463         2          0.0      0.0      0.0          if cum_weights is None:\n   464         2       2000.0   1000.0      8.7              if weights is None:\n   465         2       2000.0   1000.0      8.7                  floor = _floor\n   466         2       2000.0   1000.0      8.7                  n += 0.0    # convert to float for a small speed improvement\n   467         2      14000.0   7000.0     60.9                  return [population[floor(random() * n)] for i in _repeat(None, k)]\n   468                                                       try:\n   469                                                           cum_weights = list(_accumulate(weights))\n   470                                                       except TypeError:\n   471                                                           if not isinstance(weights, int):\n   472                                                               raise\n   473                                                           k = weights\n   474                                                           raise TypeError(\n   475                                                               f'The number of choices must be a keyword argument: {k=}'\n   476                                                           ) from None\n   477                                                   elif weights is not None:\n   478                                                       raise TypeError('Cannot specify both weights and cumulative weights')\n   479                                                   if len(cum_weights) != n:\n   480                                                       raise ValueError('The number of weights does not match the population')\n   481                                                   total = cum_weights[-1] + 0.0   # convert to float\n   482                                                   if total <= 0.0:\n   483                                                       raise ValueError('Total of weights must be greater than zero')\n   484                                                   if not _isfinite(total):\n   485                                                       raise ValueError('Total of weights must be finite')\n   486                                                   bisect = _bisect\n   487                                                   hi = n - 1\n   488                                                   return [population[bisect(cum_weights, random() * total, 0, hi)]\n   489                                                           for i in _repeat(None, k)]\n\nTotal time: 3.2e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: _infer_return_type at line 85\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n    85                                           def _infer_return_type(*args):\n    86                                               \"\"\"Look at the type of all args and divine their implied return type.\"\"\"\n    87         2       3000.0   1500.0      9.4      return_type = None\n    88         8       9000.0   1125.0     28.1      for arg in args:\n    89         6       5000.0    833.3     15.6          if arg is None:\n    90         5       2000.0    400.0      6.2              continue\n    91                                           \n    92         1       5000.0   5000.0     15.6          if isinstance(arg, _os.PathLike):\n    93                                                       arg = _os.fspath(arg)\n    94                                           \n    95         1       1000.0   1000.0      3.1          if isinstance(arg, bytes):\n    96                                                       if return_type is str:\n    97                                                           raise TypeError(\"Can't mix bytes and non-bytes in \"\n    98                                                                           \"path components.\")\n    99                                                       return_type = bytes\n   100                                                   else:\n   101         1          0.0      0.0      0.0              if return_type is bytes:\n   102                                                           raise TypeError(\"Can't mix bytes and non-bytes in \"\n   103                                                                           \"path components.\")\n   104         1          0.0      0.0      0.0              return_type = str\n   105         2       2000.0   1000.0      6.2      if return_type is None:\n   106         1       2000.0   2000.0      6.2          if tempdir is None or isinstance(tempdir, str):\n   107         1       3000.0   3000.0      9.4              return str  # tempfile APIs return a str by default.\n   108                                                   else:\n   109                                                       # we could check for bytes but it'll fail later on anyway\n   110                                                       return bytes\n   111         1          0.0      0.0      0.0      return return_type\n\nTotal time: 0.000288 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: _sanitize_params at line 114\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   114                                           def _sanitize_params(prefix, suffix, dir):\n   115                                               \"\"\"Common parameter processing for most APIs in this module.\"\"\"\n   116         2     188000.0  94000.0     65.3      output_type = _infer_return_type(prefix, suffix, dir)\n   117         2       2000.0   1000.0      0.7      if suffix is None:\n   118         2       2000.0   1000.0      0.7          suffix = output_type()\n   119         2       1000.0    500.0      0.3      if prefix is None:\n   120         1       1000.0   1000.0      0.3          if output_type is str:\n   121         1       2000.0   2000.0      0.7              prefix = template\n   122                                                   else:\n   123                                                       prefix = _os.fsencode(template)\n   124         2       1000.0    500.0      0.3      if dir is None:\n   125         2       2000.0   1000.0      0.7          if output_type is str:\n   126         2      86000.0  43000.0     29.9              dir = gettempdir()\n   127                                                   else:\n   128                                                       dir = gettempdirb()\n   129         2       3000.0   1500.0      1.0      return prefix, suffix, dir, output_type\n\nTotal time: 3e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: _get_candidate_names at line 229\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   229                                           def _get_candidate_names():\n   230                                               \"\"\"Common setup sequence for all user-callable interfaces.\"\"\"\n   231                                           \n   232                                               global _name_sequence\n   233         1       1000.0   1000.0     33.3      if _name_sequence is None:\n   234                                                   _once_lock.acquire()\n   235                                                   try:\n   236                                                       if _name_sequence is None:\n   237                                                           _name_sequence = _RandomNameSequence()\n   238                                                   finally:\n   239                                                       _once_lock.release()\n   240         1       2000.0   2000.0     66.7      return _name_sequence\n\nTotal time: 4e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: _gettempdir at line 301\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   301                                           def _gettempdir():\n   302                                               \"\"\"Private accessor for tempfile.tempdir.\"\"\"\n   303                                               global tempdir\n   304         2       2000.0   1000.0     50.0      if tempdir is None:\n   305                                                   _once_lock.acquire()\n   306                                                   try:\n   307                                                       if tempdir is None:\n   308                                                           tempdir = _get_default_tempdir()\n   309                                                   finally:\n   310                                                       _once_lock.release()\n   311         2       2000.0   1000.0     50.0      return tempdir\n\nTotal time: 5.9e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: gettempdir at line 313\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   313                                           def gettempdir():\n   314                                               \"\"\"Returns tempfile.tempdir as str.\"\"\"\n   315         2      59000.0  29500.0    100.0      return _os.fsdecode(_gettempdir())\n\nTotal time: 0.001088 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: mkdtemp at line 360\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   360                                           def mkdtemp(suffix=None, prefix=None, dir=None):\n   361                                               \"\"\"User-callable function to create and return a unique temporary\n   362                                               directory.  The return value is the pathname of the directory.\n   363                                           \n   364                                               Arguments are as for mkstemp, except that the 'text' argument is\n   365                                               not accepted.\n   366                                           \n   367                                               The directory is readable, writable, and searchable only by the\n   368                                               creating user.\n   369                                           \n   370                                               Caller is responsible for deleting the directory when done with it.\n   371                                               \"\"\"\n   372                                           \n   373         2     352000.0 176000.0     32.4      prefix, suffix, dir, output_type = _sanitize_params(prefix, suffix, dir)\n   374                                           \n   375         2      61000.0  30500.0      5.6      names = _get_candidate_names()\n   376         2       2000.0   1000.0      0.2      if output_type is bytes:\n   377                                                   names = map(_os.fsencode, names)\n   378                                           \n   379         2       2000.0   1000.0      0.2      for seq in range(TMP_MAX):\n   380         2     247000.0 123500.0     22.7          name = next(names)\n   381         2      41000.0  20500.0      3.8          file = _os.path.join(dir, prefix + name + suffix)\n   382         2       1000.0    500.0      0.1          _sys.audit(\"tempfile.mkdtemp\", file)\n   383         2       1000.0    500.0      0.1          try:\n   384         2     346000.0 173000.0     31.8              _os.mkdir(file, 0o700)\n   385                                                   except FileExistsError:\n   386                                                       continue    # try again\n   387                                                   except PermissionError:\n   388                                                       # This exception is thrown when a directory with the chosen name\n   389                                                       # already exists on windows.\n   390                                                       if (_os.name == 'nt' and _os.path.isdir(dir) and\n   391                                                           _os.access(dir, _os.W_OK)):\n   392                                                           continue\n   393                                                       else:\n   394                                                           raise\n   395         2      35000.0  17500.0      3.2          return _os.path.abspath(file)\n   396                                           \n   397                                               raise FileExistsError(_errno.EEXIST,\n   398                                                                     \"No usable temporary directory name found\")\n\nTotal time: 1e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py\nFunction: RLock at line 124\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   124                                           def RLock(*args, **kwargs):\n   125                                               \"\"\"Factory function that returns a new reentrant lock.\n   126                                           \n   127                                               A reentrant lock must be released by the thread that acquired it. Once a\n   128                                               thread has acquired a reentrant lock, the same thread may acquire it again\n   129                                               without blocking; the thread must release it once for each time it has\n   130                                               acquired it.\n   131                                           \n   132                                               \"\"\"\n   133         1          0.0      0.0      0.0      if _CRLock is None:\n   134                                                   return _PyRLock(*args, **kwargs)\n   135         1       1000.0   1000.0    100.0      return _CRLock(*args, **kwargs)\n\nTotal time: 1e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py\nFunction: _newname at line 839\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   839                                           def _newname(name_template):\n   840         1       1000.0   1000.0    100.0      return name_template % _counter()\n\nTotal time: 6e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py\nFunction: _make_invoke_excepthook at line 1356\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n  1356                                           def _make_invoke_excepthook():\n  1357                                               # Create a local namespace to ensure that variables remain alive\n  1358                                               # when _invoke_excepthook() is called, even if it is called late during\n  1359                                               # Python shutdown. It is mostly needed for daemon threads.\n  1360                                           \n  1361         1       1000.0   1000.0     16.7      old_excepthook = excepthook\n  1362         1       1000.0   1000.0     16.7      old_sys_excepthook = _sys.excepthook\n  1363         1       1000.0   1000.0     16.7      if old_excepthook is None:\n  1364                                                   raise RuntimeError(\"threading.excepthook is None\")\n  1365         1          0.0      0.0      0.0      if old_sys_excepthook is None:\n  1366                                                   raise RuntimeError(\"sys.excepthook is None\")\n  1367                                           \n  1368         1          0.0      0.0      0.0      sys_exc_info = _sys.exc_info\n  1369         1          0.0      0.0      0.0      local_print = print\n  1370         1       1000.0   1000.0     16.7      local_sys = _sys\n  1371                                           \n  1372         1       1000.0   1000.0     16.7      def invoke_excepthook(thread):\n  1373                                                   global excepthook\n  1374                                                   try:\n  1375                                                       hook = excepthook\n  1376                                                       if hook is None:\n  1377                                                           hook = old_excepthook\n  1378                                           \n  1379                                                       args = ExceptHookArgs([*sys_exc_info(), thread])\n  1380                                           \n  1381                                                       hook(args)\n  1382                                                   except Exception as exc:\n  1383                                                       exc.__suppress_context__ = True\n  1384                                                       del exc\n  1385                                           \n  1386                                                       if local_sys is not None and local_sys.stderr is not None:\n  1387                                                           stderr = local_sys.stderr\n  1388                                                       else:\n  1389                                                           stderr = thread._stderr\n  1390                                           \n  1391                                                       local_print(\"Exception in threading.excepthook:\",\n  1392                                                                   file=stderr, flush=True)\n  1393                                           \n  1394                                                       if local_sys is not None and local_sys.excepthook is not None:\n  1395                                                           sys_excepthook = local_sys.excepthook\n  1396                                                       else:\n  1397                                                           sys_excepthook = old_sys_excepthook\n  1398                                           \n  1399                                                       sys_excepthook(*sys_exc_info())\n  1400                                                   finally:\n  1401                                                       # Break reference cycle (exception stored in a variable)\n  1402                                                       args = None\n  1403                                           \n  1404         1       1000.0   1000.0     16.7      return invoke_excepthook\n\nTotal time: 1e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py\nFunction: _type_convert at line 166\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   166                                           def _type_convert(arg, module=None, *, allow_special_forms=False):\n   167                                               \"\"\"For converting None to type(None), and strings to ForwardRef.\"\"\"\n   168         3       3000.0   1000.0     30.0      if arg is None:\n   169                                                   return type(None)\n   170         3       3000.0   1000.0     30.0      if isinstance(arg, str):\n   171                                                   return ForwardRef(arg, module=module, is_class=allow_special_forms)\n   172         3       4000.0   1333.3     40.0      return arg\n\nTotal time: 9.3e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py\nFunction: _type_check at line 175\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   175                                           def _type_check(arg, msg, is_argument=True, module=None, *, allow_special_forms=False):\n   176                                               \"\"\"Check that the argument is a type, and return it (internal helper).\n   177                                           \n   178                                               As a special case, accept None and return type(None) instead. Also wrap strings\n   179                                               into ForwardRef instances. Consider several corner cases, for example plain\n   180                                               special forms like Union are not valid, while Union[int, str] is OK, etc.\n   181                                               The msg argument is a human-readable error message, e.g.::\n   182                                           \n   183                                                   \"Union[arg, ...]: arg should be a type.\"\n   184                                           \n   185                                               We append the repr() of the actual value (truncated to 100 chars).\n   186                                               \"\"\"\n   187         3       4000.0   1333.3      4.3      invalid_generic_forms = (Generic, Protocol)\n   188         3       3000.0   1000.0      3.2      if not allow_special_forms:\n   189         3       4000.0   1333.3      4.3          invalid_generic_forms += (ClassVar,)\n   190         3       3000.0   1000.0      3.2          if is_argument:\n   191         3       5000.0   1666.7      5.4              invalid_generic_forms += (Final,)\n   192                                           \n   193         3      54000.0  18000.0     58.1      arg = _type_convert(arg, module=module, allow_special_forms=allow_special_forms)\n   194         3       3000.0   1000.0      3.2      if (isinstance(arg, _GenericAlias) and\n   195                                                       arg.__origin__ in invalid_generic_forms):\n   196                                                   raise TypeError(f\"{arg} is not valid as type argument\")\n   197         3       3000.0   1000.0      3.2      if arg in (Any, LiteralString, NoReturn, Never, Self, TypeAlias):\n   198                                                   return arg\n   199         3       3000.0   1000.0      3.2      if allow_special_forms and arg in (ClassVar, Final):\n   200                                                   return arg\n   201         3       3000.0   1000.0      3.2      if isinstance(arg, _SpecialForm) or arg in (Generic, Protocol):\n   202                                                   raise TypeError(f\"Plain {arg} is not valid as type argument\")\n   203         3       3000.0   1000.0      3.2      if type(arg) is tuple:\n   204                                                   raise TypeError(f\"{msg} Got {arg!r:.100}.\")\n   205         3       5000.0   1666.7      5.4      return arg\n\nTotal time: 2e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/typing.py\nFunction: _is_dunder at line 1161\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n  1161                                           def _is_dunder(attr):\n  1162        12      20000.0   1666.7    100.0      return attr.startswith('__') and attr.endswith('__')\n\n",
        "duration": 33.98279162496328,
        "metadata": {
          "profiler": "line_profiler",
          "status": "completed",
          "functions_profiled": 30,
          "lines_profiled": 284,
          "note": "Automatic tracing of all executed code"
        }
      },
      "start_time": "2025-07-30T22:08:43.515391",
      "end_time": "2025-07-30T22:09:17.498037",
      "duration": 33.982646,
      "success": true,
      "error_message": null
    },
    "memory": {
      "profiler_type": "memory",
      "data": {
        "samples": [
          {
            "timestamp": 1753938523.516703,
            "rss_mb": 104.8125,
            "vms_mb": 401324.9375,
            "percent": 0.31986236572265625
          },
          {
            "timestamp": 1753938523.517039,
            "rss_mb": 104.890625,
            "vms_mb": 401341.0,
            "percent": 0.3201007843017578
          },
          {
            "timestamp": 1753938523.5358999,
            "rss_mb": 106.1875,
            "vms_mb": 401351.0,
            "percent": 0.32405853271484375
          },
          {
            "timestamp": 1753938523.554733,
            "rss_mb": 107.453125,
            "vms_mb": 401352.0,
            "percent": 0.32792091369628906
          },
          {
            "timestamp": 1753938523.57355,
            "rss_mb": 108.21875,
            "vms_mb": 401352.0,
            "percent": 0.3302574157714844
          },
          {
            "timestamp": 1753938523.592364,
            "rss_mb": 108.21875,
            "vms_mb": 401352.0,
            "percent": 0.3302574157714844
          },
          {
            "timestamp": 1753938523.611182,
            "rss_mb": 108.21875,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.6299899,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.648811,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.666552,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.685369,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.704177,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.722871,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.741687,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.760491,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.779299,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.7981,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.8169081,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.835715,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.854518,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.873317,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.892117,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.910919,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.929726,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.948561,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.9673972,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938523.9862149,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938524.0050209,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938524.02383,
            "rss_mb": 108.234375,
            "vms_mb": 401352.0,
            "percent": 0.3303050994873047
          },
          {
            "timestamp": 1753938524.042656,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.061463,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.080265,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.099068,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.1178749,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.136678,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.155485,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.174025,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.1928399,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.211648,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.230455,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.249263,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.26807,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.286873,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.3056908,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.3245099,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.343319,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.362123,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.3794281,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.3982341,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.417043,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.4359438,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.4547899,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.4736269,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.492439,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.511251,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.528304,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.547114,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.565921,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.5847292,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.6035368,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.6223412,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.641144,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.65995,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.67876,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.697587,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.716395,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.735202,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.754006,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.772821,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.7916312,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.8104372,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.829243,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.848045,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.866851,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.885657,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.9044638,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.923275,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.942101,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.960918,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.97974,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938524.9985511,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.016549,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.035358,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.0541701,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.072982,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.091788,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.1105988,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.129411,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.148216,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.167042,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.185863,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.2046819,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.2228749,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.24168,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.260486,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.279294,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.298101,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.316907,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.335714,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.3545191,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.373325,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.392131,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.410938,
            "rss_mb": 108.25,
            "vms_mb": 401352.0,
            "percent": 0.330352783203125
          },
          {
            "timestamp": 1753938525.4297578,
            "rss_mb": 108.28125,
            "vms_mb": 401353.0,
            "percent": 0.3304481506347656
          },
          {
            "timestamp": 1753938525.448609,
            "rss_mb": 108.28125,
            "vms_mb": 401353.0,
            "percent": 0.3304481506347656
          },
          {
            "timestamp": 1753938525.467422,
            "rss_mb": 108.28125,
            "vms_mb": 401353.0,
            "percent": 0.3304481506347656
          },
          {
            "timestamp": 1753938525.4862368,
            "rss_mb": 108.28125,
            "vms_mb": 401353.0,
            "percent": 0.3304481506347656
          },
          {
            "timestamp": 1753938525.5050418,
            "rss_mb": 108.28125,
            "vms_mb": 401353.0,
            "percent": 0.3304481506347656
          },
          {
            "timestamp": 1753938525.523849,
            "rss_mb": 108.28125,
            "vms_mb": 401353.0,
            "percent": 0.3304481506347656
          },
          {
            "timestamp": 1753938525.542654,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.56147,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.580276,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.5990841,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.6175518,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.6363661,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.654965,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.6737652,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.692569,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.711375,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.730176,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.7478862,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.7666938,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.7854989,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.80431,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.823118,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.8419251,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.8607318,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.87954,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.898347,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.917151,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.935957,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.954763,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.973569,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938525.992377,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.011177,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.029978,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.048789,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.0675972,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.086404,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.105206,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.1240141,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.1428201,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.161622,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.180425,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.19923,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.2180412,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.236848,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.2556548,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.274461,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.293267,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.3120792,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.3308868,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.3496902,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.368497,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.387302,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.406108,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33049583435058594
          },
          {
            "timestamp": 1753938526.42491,
            "rss_mb": 108.296875,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.443747,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.462573,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.4813828,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.500198,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.5190022,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.537813,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.556622,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.57543,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.594233,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.613038,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.631844,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.650651,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.669457,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.6882539,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.706238,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.725051,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.743861,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.762665,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.781467,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.8002748,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.819077,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.837884,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.856687,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.875492,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.8942988,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.913105,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.931917,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.9507232,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33054351806640625
          },
          {
            "timestamp": 1753938526.96953,
            "rss_mb": 108.3125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938526.9883468,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.0071528,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.025963,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.044767,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.063572,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.082382,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.1011891,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.119992,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.1387908,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.157602,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.176417,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.195217,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.214033,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.232842,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.251651,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.270456,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.2892601,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.308063,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.326868,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.344432,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.36324,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.381508,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.400314,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.4191282,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.4379442,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.456776,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.475588,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.4943948,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.513209,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.532023,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.550833,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.569642,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.588449,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.607255,
            "rss_mb": 108.328125,
            "vms_mb": 401353.0,
            "percent": 0.33059120178222656
          },
          {
            "timestamp": 1753938527.6260622,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.642585,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.6601322,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.678953,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.6977751,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.716589,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.735399,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.754205,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.772908,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.791716,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.810525,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.829334,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.848135,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.865746,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.8845508,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.903352,
            "rss_mb": 108.359375,
            "vms_mb": 401354.0,
            "percent": 0.3306865692138672
          },
          {
            "timestamp": 1753938527.922158,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938527.9409559,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938527.9597619,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938527.976968,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938527.995776,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.0145779,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.0333922,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.052201,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.071008,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.089814,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.1086159,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.127424,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.146254,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.165063,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.183869,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.202687,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.221502,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.240316,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.258107,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.276918,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.295739,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.314574,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.333392,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.352198,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.3710039,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.3898098,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.408614,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.4264052,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.445277,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.464112,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.482937,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.501657,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.520482,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.539295,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.558103,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.576908,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.593507,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.612324,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.6311371,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.6499462,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.668761,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.687576,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.7064052,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.7252219,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.7440588,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.7628841,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.781711,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.800531,
            "rss_mb": 108.375,
            "vms_mb": 401354.0,
            "percent": 0.3307342529296875
          },
          {
            "timestamp": 1753938528.8193579,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.83817,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.856979,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.875788,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.894594,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.9134028,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.932213,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.951021,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.969824,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938528.988631,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.007432,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.026245,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.045053,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.06386,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.082666,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.101474,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.120286,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.139094,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.157904,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.176726,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.1955478,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.2143621,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.233173,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.25198,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.270786,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.289597,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.308406,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.32721,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.346019,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.36483,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.3836422,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.402452,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.421247,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.4400902,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.45893,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.477101,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.495928,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.514739,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.53355,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.5523572,
            "rss_mb": 108.390625,
            "vms_mb": 401354.0,
            "percent": 0.3307819366455078
          },
          {
            "timestamp": 1753938529.5713952,
            "rss_mb": 108.453125,
            "vms_mb": 401356.0,
            "percent": 0.33097267150878906
          },
          {
            "timestamp": 1753938529.590585,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.609795,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.6287081,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.6475809,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.6664221,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.6852438,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.704061,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.722868,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.741678,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.76048,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.779291,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.7980978,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.8169029,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.835712,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.8545222,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.873333,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.8921468,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.910954,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.9297621,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.94857,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.967381,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938529.98619,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.004998,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.023808,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.042615,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.061423,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.080238,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.09904,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.117861,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.136666,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.1546612,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.173475,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.1922839,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.211089,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.2298958,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.248703,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.2675142,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.286321,
            "rss_mb": 108.484375,
            "vms_mb": 401357.0,
            "percent": 0.3310680389404297
          },
          {
            "timestamp": 1753938530.3051252,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.323936,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.34274,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.361547,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.380356,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.399165,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.417971,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.436795,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.455638,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.474455,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.493265,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.5120761,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.5308821,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.549692,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.5685031,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.587311,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.6061141,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.6249259,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.643734,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.6625412,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.681346,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.700153,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.718961,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.73777,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.7562811,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.775092,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.793899,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.812703,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.8315132,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.850327,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.86913,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.887937,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.90675,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.9255638,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.944372,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.963179,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938530.981986,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.000793,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.019596,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.038403,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.0572119,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.076021,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.0948281,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.113636,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.13244,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.151244,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.170041,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.18884,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.33111572265625
          },
          {
            "timestamp": 1753938531.207653,
            "rss_mb": 108.5,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.226458,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.245265,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.264081,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.282898,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.3017101,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.320509,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.339315,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.358123,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.376933,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.3957381,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.414546,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.433383,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.4522188,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.4710379,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.489852,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.50866,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.527468,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.546273,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.5650811,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.58389,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.6027,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.621506,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.6403148,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.6591208,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.677931,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.696737,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.7146251,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.733438,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3311634063720703
          },
          {
            "timestamp": 1753938531.752246,
            "rss_mb": 108.515625,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.7710578,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.78986,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.808665,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.827473,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.8462799,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.865088,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.8838952,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.902702,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.92151,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.94032,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.9591308,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.977937,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938531.9967391,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.0155451,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.0343528,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.053157,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.0719628,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.09077,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.1095839,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.128395,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.147192,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.1659992,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.184801,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.203604,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.222411,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.2412229,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.26003,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.2788339,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.2976398,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.316448,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.3352551,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.354057,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.372865,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.391677,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.410478,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.429288,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.448135,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.4669702,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.48578,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.504592,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.5233989,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.5422049,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.561013,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.579818,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.598696,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.6174972,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.636307,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.6543412,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.673154,
            "rss_mb": 108.53125,
            "vms_mb": 401357.0,
            "percent": 0.3312110900878906
          },
          {
            "timestamp": 1753938532.691964,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.710772,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.729575,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.747972,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.7668009,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.785616,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.804416,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.8230348,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.841843,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.8606431,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.879444,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.8982458,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.917043,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.9358442,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.9546518,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.9734662,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938532.99227,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.011075,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.02988,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.048691,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.067509,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.086329,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.10514,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.123947,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.141946,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.160766,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.179571,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.1979709,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.216786,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.235594,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.254396,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.2729752,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.291788,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.3105972,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.3294048,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.348212,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.365938,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.38474,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.403542,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.422302,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.441129,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.4599638,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.4787998,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.4976199,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.5164301,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.535249,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.5540612,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.5728672,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.591676,
            "rss_mb": 108.546875,
            "vms_mb": 401357.0,
            "percent": 0.33125877380371094
          },
          {
            "timestamp": 1753938533.610493,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.629302,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.648111,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.6669152,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.685719,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.704531,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.723338,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.7421381,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.76094,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.779746,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.7985501,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.817354,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.8361611,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.854968,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.873775,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.8925812,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.9113972,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.930208,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.9490151,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.967824,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938533.98663,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.005437,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.02425,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.043054,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.061861,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.080673,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.0994859,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.118294,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.137107,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.155919,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.174731,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.193557,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.212381,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.231188,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.2499971,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.268812,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.287628,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.306439,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.325242,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.344059,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.362866,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.381674,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.400484,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.419287,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.438102,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.456919,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.4757318,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.494557,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.513375,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.532183,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.5509892,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.569806,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.588615,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.607429,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.6262379,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.645047,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.663856,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.682664,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.70147,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.720274,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.739085,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.75789,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.776701,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.795509,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.8143208,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.833156,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.851965,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.870775,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.889583,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.9083898,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.927194,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.946004,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.9648168,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938534.983624,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938535.002434,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938535.0212429,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938535.040053,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938535.058861,
            "rss_mb": 108.5625,
            "vms_mb": 401357.0,
            "percent": 0.33130645751953125
          },
          {
            "timestamp": 1753938535.077419,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.096264,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.114478,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.133297,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.1521049,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.170917,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.189732,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.20854,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.227351,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.2461681,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.264987,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.283793,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.302602,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.321412,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.340221,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.359044,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.377865,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.396679,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.415485,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.434315,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.453156,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.471977,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.490794,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.509609,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.528416,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.54613,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.564943,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.583751,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.602564,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.621373,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.6401842,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.6589959,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.677799,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.696608,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.7154171,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.7342238,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.7530298,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.771838,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.790645,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.80945,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.828258,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.847071,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.865888,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.8846982,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.9035048,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.9223099,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.94112,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.959928,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.9787362,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.33135414123535156
          },
          {
            "timestamp": 1753938535.997549,
            "rss_mb": 108.578125,
            "vms_mb": 401357.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.0163589,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.035168,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.053975,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.072779,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.091587,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.110388,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.129199,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.148006,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.16681,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.1856089,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.204418,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.223225,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.242033,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.260841,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.279645,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.29845,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.317256,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.336063,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.35487,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.373677,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.3924851,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.411291,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.430105,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.448916,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.466968,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.485802,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.504621,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.523432,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314018249511719
          },
          {
            "timestamp": 1753938536.5422442,
            "rss_mb": 108.59375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.561067,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.5798762,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.5986829,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.617491,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.635231,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.654047,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.672857,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.691663,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.710484,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.729297,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.748113,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.766913,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.785724,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.804532,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.823338,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.842144,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.859759,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.878573,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.897378,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.916182,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.9349859,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.9537868,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.972585,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938536.9913878,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.010186,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.0290098,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.0478148,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.0666208,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.0854242,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.1042309,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.123039,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.14184,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.1601589,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.178967,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.197767,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.2165718,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.235384,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.254194,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.273003,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.291808,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.3106182,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.3294232,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.348226,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.367029,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.3858402,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.404646,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.423452,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.4422662,
            "rss_mb": 108.609375,
            "vms_mb": 401358.0,
            "percent": 0.3314495086669922
          },
          {
            "timestamp": 1753938537.461084,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.479914,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.4987268,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.517538,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.5363462,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.5551538,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.5739598,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.592769,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.61158,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.6303859,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.6492019,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.66802,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.6868439,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.705659,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.7244642,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.7432802,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.762086,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.7808971,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.799707,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.8185139,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.837321,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.855835,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.87464,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.893443,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.9122481,
            "rss_mb": 108.625,
            "vms_mb": 401358.0,
            "percent": 0.3314971923828125
          },
          {
            "timestamp": 1753938537.931071,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938537.949885,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938537.968692,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938537.9875,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.0063,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.025105,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.0439098,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.062717,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.081059,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.0998662,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.11867,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.1374762,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.1562822,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.175093,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.1939,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.212703,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.231502,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.250303,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.2691112,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.287918,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.306725,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.325532,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.344339,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.363144,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.381952,
            "rss_mb": 108.640625,
            "vms_mb": 401358.0,
            "percent": 0.3315448760986328
          },
          {
            "timestamp": 1753938538.400768,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.419573,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.438391,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.457209,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.4760342,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.494849,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.5136588,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.5324721,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.551284,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.570091,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.588894,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.607695,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.626121,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.6449401,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.663746,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.68255,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.7013628,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.720191,
            "rss_mb": 108.65625,
            "vms_mb": 401358.0,
            "percent": 0.3315925598144531
          },
          {
            "timestamp": 1753938538.7390301,
            "rss_mb": 109.09375,
            "vms_mb": 401358.0,
            "percent": 0.3329277038574219
          },
          {
            "timestamp": 1753938538.757858,
            "rss_mb": 109.609375,
            "vms_mb": 401358.0,
            "percent": 0.3345012664794922
          },
          {
            "timestamp": 1753938538.788712,
            "rss_mb": 110.59375,
            "vms_mb": 401359.0,
            "percent": 0.3375053405761719
          },
          {
            "timestamp": 1753938538.807532,
            "rss_mb": 111.921875,
            "vms_mb": 401361.0,
            "percent": 0.34155845642089844
          },
          {
            "timestamp": 1753938538.826346,
            "rss_mb": 113.21875,
            "vms_mb": 401362.0,
            "percent": 0.3455162048339844
          },
          {
            "timestamp": 1753938538.845162,
            "rss_mb": 114.515625,
            "vms_mb": 401363.0,
            "percent": 0.3494739532470703
          },
          {
            "timestamp": 1753938538.8639722,
            "rss_mb": 115.78125,
            "vms_mb": 401365.0,
            "percent": 0.3533363342285156
          },
          {
            "timestamp": 1753938538.882779,
            "rss_mb": 117.0625,
            "vms_mb": 401366.0,
            "percent": 0.35724639892578125
          },
          {
            "timestamp": 1753938538.901599,
            "rss_mb": 118.296875,
            "vms_mb": 401367.0,
            "percent": 0.36101341247558594
          },
          {
            "timestamp": 1753938538.920423,
            "rss_mb": 119.578125,
            "vms_mb": 401368.0,
            "percent": 0.36492347717285156
          },
          {
            "timestamp": 1753938538.9392362,
            "rss_mb": 120.859375,
            "vms_mb": 401370.0,
            "percent": 0.3688335418701172
          },
          {
            "timestamp": 1753938538.9580412,
            "rss_mb": 122.109375,
            "vms_mb": 401371.0,
            "percent": 0.3726482391357422
          },
          {
            "timestamp": 1753938538.976855,
            "rss_mb": 123.375,
            "vms_mb": 401372.0,
            "percent": 0.3765106201171875
          },
          {
            "timestamp": 1753938538.995668,
            "rss_mb": 124.625,
            "vms_mb": 401373.0,
            "percent": 0.3803253173828125
          },
          {
            "timestamp": 1753938539.0144691,
            "rss_mb": 125.90625,
            "vms_mb": 401375.0,
            "percent": 0.3842353820800781
          },
          {
            "timestamp": 1753938539.0332742,
            "rss_mb": 127.125,
            "vms_mb": 401376.0,
            "percent": 0.3879547119140625
          },
          {
            "timestamp": 1753938539.0520818,
            "rss_mb": 128.359375,
            "vms_mb": 401377.0,
            "percent": 0.3917217254638672
          },
          {
            "timestamp": 1753938539.070892,
            "rss_mb": 129.625,
            "vms_mb": 401378.0,
            "percent": 0.3955841064453125
          },
          {
            "timestamp": 1753938539.089699,
            "rss_mb": 130.859375,
            "vms_mb": 401380.0,
            "percent": 0.3993511199951172
          },
          {
            "timestamp": 1753938539.1085079,
            "rss_mb": 132.09375,
            "vms_mb": 401381.0,
            "percent": 0.4031181335449219
          },
          {
            "timestamp": 1753938539.127315,
            "rss_mb": 133.375,
            "vms_mb": 401382.0,
            "percent": 0.4070281982421875
          },
          {
            "timestamp": 1753938539.1461241,
            "rss_mb": 134.609375,
            "vms_mb": 401383.0,
            "percent": 0.4107952117919922
          },
          {
            "timestamp": 1753938539.1649332,
            "rss_mb": 135.890625,
            "vms_mb": 401385.0,
            "percent": 0.4147052764892578
          },
          {
            "timestamp": 1753938539.1837409,
            "rss_mb": 137.171875,
            "vms_mb": 401386.0,
            "percent": 0.41861534118652344
          },
          {
            "timestamp": 1753938539.2025511,
            "rss_mb": 138.46875,
            "vms_mb": 401387.0,
            "percent": 0.4225730895996094
          },
          {
            "timestamp": 1753938539.221361,
            "rss_mb": 139.765625,
            "vms_mb": 401389.0,
            "percent": 0.4265308380126953
          },
          {
            "timestamp": 1753938539.240169,
            "rss_mb": 141.015625,
            "vms_mb": 401390.0,
            "percent": 0.4303455352783203
          },
          {
            "timestamp": 1753938539.2589781,
            "rss_mb": 142.296875,
            "vms_mb": 401391.0,
            "percent": 0.43425559997558594
          },
          {
            "timestamp": 1753938539.277787,
            "rss_mb": 143.53125,
            "vms_mb": 401392.0,
            "percent": 0.4380226135253906
          },
          {
            "timestamp": 1753938539.2965949,
            "rss_mb": 144.765625,
            "vms_mb": 401393.0,
            "percent": 0.4417896270751953
          },
          {
            "timestamp": 1753938539.315401,
            "rss_mb": 146.03125,
            "vms_mb": 401395.0,
            "percent": 0.4456520080566406
          },
          {
            "timestamp": 1753938539.334208,
            "rss_mb": 147.296875,
            "vms_mb": 401396.0,
            "percent": 0.44951438903808594
          },
          {
            "timestamp": 1753938539.358463,
            "rss_mb": 147.640625,
            "vms_mb": 401396.0,
            "percent": 0.4505634307861328
          },
          {
            "timestamp": 1753938539.377291,
            "rss_mb": 148.921875,
            "vms_mb": 401398.0,
            "percent": 0.45447349548339844
          },
          {
            "timestamp": 1753938539.396096,
            "rss_mb": 150.203125,
            "vms_mb": 401399.0,
            "percent": 0.45838356018066406
          },
          {
            "timestamp": 1753938539.414903,
            "rss_mb": 151.453125,
            "vms_mb": 401400.0,
            "percent": 0.46219825744628906
          },
          {
            "timestamp": 1753938539.4337258,
            "rss_mb": 152.703125,
            "vms_mb": 401401.0,
            "percent": 0.46601295471191406
          },
          {
            "timestamp": 1753938539.452568,
            "rss_mb": 153.96875,
            "vms_mb": 401403.0,
            "percent": 0.4698753356933594
          },
          {
            "timestamp": 1753938539.4714,
            "rss_mb": 155.25,
            "vms_mb": 401404.0,
            "percent": 0.473785400390625
          },
          {
            "timestamp": 1753938539.4902248,
            "rss_mb": 156.5,
            "vms_mb": 401405.0,
            "percent": 0.47760009765625
          },
          {
            "timestamp": 1753938539.509047,
            "rss_mb": 157.765625,
            "vms_mb": 401406.0,
            "percent": 0.4814624786376953
          },
          {
            "timestamp": 1753938539.527852,
            "rss_mb": 159.046875,
            "vms_mb": 401408.0,
            "percent": 0.48537254333496094
          },
          {
            "timestamp": 1753938539.5466619,
            "rss_mb": 160.28125,
            "vms_mb": 401409.0,
            "percent": 0.4891395568847656
          },
          {
            "timestamp": 1753938539.565467,
            "rss_mb": 161.515625,
            "vms_mb": 401410.0,
            "percent": 0.4929065704345703
          },
          {
            "timestamp": 1753938539.584275,
            "rss_mb": 162.8125,
            "vms_mb": 401411.0,
            "percent": 0.49686431884765625
          },
          {
            "timestamp": 1753938539.603083,
            "rss_mb": 164.046875,
            "vms_mb": 401413.0,
            "percent": 0.5006313323974609
          },
          {
            "timestamp": 1753938539.62189,
            "rss_mb": 165.3125,
            "vms_mb": 401414.0,
            "percent": 0.5044937133789062
          },
          {
            "timestamp": 1753938539.6407208,
            "rss_mb": 166.59375,
            "vms_mb": 401415.0,
            "percent": 0.5084037780761719
          },
          {
            "timestamp": 1753938539.65954,
            "rss_mb": 167.859375,
            "vms_mb": 401416.0,
            "percent": 0.5122661590576172
          },
          {
            "timestamp": 1753938539.6783612,
            "rss_mb": 169.1875,
            "vms_mb": 401418.0,
            "percent": 0.5163192749023438
          },
          {
            "timestamp": 1753938539.6971898,
            "rss_mb": 170.46875,
            "vms_mb": 401419.0,
            "percent": 0.5202293395996094
          },
          {
            "timestamp": 1753938539.716015,
            "rss_mb": 171.765625,
            "vms_mb": 401420.0,
            "percent": 0.5241870880126953
          },
          {
            "timestamp": 1753938539.7348428,
            "rss_mb": 173.03125,
            "vms_mb": 401422.0,
            "percent": 0.5280494689941406
          },
          {
            "timestamp": 1753938539.753661,
            "rss_mb": 174.265625,
            "vms_mb": 401423.0,
            "percent": 0.5318164825439453
          },
          {
            "timestamp": 1753938539.7724931,
            "rss_mb": 175.515625,
            "vms_mb": 401424.0,
            "percent": 0.5356311798095703
          },
          {
            "timestamp": 1753938539.791314,
            "rss_mb": 176.796875,
            "vms_mb": 401425.0,
            "percent": 0.5395412445068359
          },
          {
            "timestamp": 1753938539.810124,
            "rss_mb": 178.0625,
            "vms_mb": 401427.0,
            "percent": 0.5434036254882812
          },
          {
            "timestamp": 1753938539.828931,
            "rss_mb": 179.328125,
            "vms_mb": 401428.0,
            "percent": 0.5472660064697266
          },
          {
            "timestamp": 1753938539.847734,
            "rss_mb": 180.578125,
            "vms_mb": 401429.0,
            "percent": 0.5510807037353516
          },
          {
            "timestamp": 1753938539.8665411,
            "rss_mb": 181.84375,
            "vms_mb": 401430.0,
            "percent": 0.5549430847167969
          },
          {
            "timestamp": 1753938539.8853471,
            "rss_mb": 183.078125,
            "vms_mb": 401432.0,
            "percent": 0.5587100982666016
          },
          {
            "timestamp": 1753938539.90417,
            "rss_mb": 184.359375,
            "vms_mb": 401433.0,
            "percent": 0.5626201629638672
          },
          {
            "timestamp": 1753938539.9398441,
            "rss_mb": 184.71875,
            "vms_mb": 401433.0,
            "percent": 0.5637168884277344
          },
          {
            "timestamp": 1753938539.958675,
            "rss_mb": 185.765625,
            "vms_mb": 401434.0,
            "percent": 0.5669116973876953
          },
          {
            "timestamp": 1753938539.9774878,
            "rss_mb": 185.78125,
            "vms_mb": 401434.0,
            "percent": 0.5669593811035156
          },
          {
            "timestamp": 1753938539.9963021,
            "rss_mb": 185.84375,
            "vms_mb": 401434.0,
            "percent": 0.5671501159667969
          },
          {
            "timestamp": 1753938540.015112,
            "rss_mb": 185.84375,
            "vms_mb": 401434.0,
            "percent": 0.5671501159667969
          },
          {
            "timestamp": 1753938540.033924,
            "rss_mb": 185.875,
            "vms_mb": 401434.0,
            "percent": 0.5672454833984375
          },
          {
            "timestamp": 1753938540.052738,
            "rss_mb": 185.875,
            "vms_mb": 401434.0,
            "percent": 0.5672454833984375
          },
          {
            "timestamp": 1753938540.0715468,
            "rss_mb": 185.890625,
            "vms_mb": 401434.0,
            "percent": 0.5672931671142578
          },
          {
            "timestamp": 1753938540.090358,
            "rss_mb": 185.90625,
            "vms_mb": 401434.0,
            "percent": 0.5673408508300781
          },
          {
            "timestamp": 1753938540.109171,
            "rss_mb": 185.90625,
            "vms_mb": 401434.0,
            "percent": 0.5673408508300781
          },
          {
            "timestamp": 1753938540.127975,
            "rss_mb": 185.90625,
            "vms_mb": 401434.0,
            "percent": 0.5673408508300781
          },
          {
            "timestamp": 1753938540.146781,
            "rss_mb": 186.125,
            "vms_mb": 401435.0,
            "percent": 0.5680084228515625
          },
          {
            "timestamp": 1753938540.16559,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.184404,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.203181,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.215752,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.228346,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.24094,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.25353,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.266083,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.278626,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.2911959,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.303765,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.31632,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.3288698,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.341413,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.3539782,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.366551,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.3791082,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.3916612,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.4042492,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.416793,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.429364,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.441949,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.45455,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.467155,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.479722,
            "rss_mb": 186.234375,
            "vms_mb": 401435.0,
            "percent": 0.5683422088623047
          },
          {
            "timestamp": 1753938540.4923038,
            "rss_mb": 186.25,
            "vms_mb": 401435.0,
            "percent": 0.568389892578125
          },
          {
            "timestamp": 1753938540.504859,
            "rss_mb": 186.25,
            "vms_mb": 401435.0,
            "percent": 0.568389892578125
          },
          {
            "timestamp": 1753938540.5174358,
            "rss_mb": 186.28125,
            "vms_mb": 401435.0,
            "percent": 0.5684852600097656
          },
          {
            "timestamp": 1753938540.530009,
            "rss_mb": 186.28125,
            "vms_mb": 401435.0,
            "percent": 0.5684852600097656
          },
          {
            "timestamp": 1753938540.5425768,
            "rss_mb": 186.28125,
            "vms_mb": 401435.0,
            "percent": 0.5684852600097656
          },
          {
            "timestamp": 1753938540.5614111,
            "rss_mb": 186.65625,
            "vms_mb": 401435.0,
            "percent": 0.5696296691894531
          },
          {
            "timestamp": 1753938540.57307,
            "rss_mb": 186.65625,
            "vms_mb": 401435.0,
            "percent": 0.5696296691894531
          },
          {
            "timestamp": 1753938540.585654,
            "rss_mb": 186.65625,
            "vms_mb": 401435.0,
            "percent": 0.5696296691894531
          },
          {
            "timestamp": 1753938540.598342,
            "rss_mb": 186.65625,
            "vms_mb": 401435.0,
            "percent": 0.5696296691894531
          },
          {
            "timestamp": 1753938540.612028,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.623125,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.6360462,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.6487858,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.661331,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.673888,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.6876101,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.700226,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.712605,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.7252328,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.737775,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.750318,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.762885,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.775431,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.7879739,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.80065,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.813565,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.826711,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.839512,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.8525178,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.865074,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.877619,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.89055,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.903254,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.915803,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.9284139,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.940966,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.953513,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.9665978,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.97926,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938540.991806,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.004947,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.017542,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.0302541,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.0438359,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.056402,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.069629,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.082248,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.094868,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.108212,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.120759,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.133591,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.146162,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.158709,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.172439,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.1851919,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.198005,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.210766,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.223316,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.236256,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.249989,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.262555,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.275106,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.2877839,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.300859,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.313566,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.326484,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.339137,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.3517592,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.364578,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.378028,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.390605,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.40315,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.4156978,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.4286761,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.44126,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.454452,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.467701,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.480321,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.4928892,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.505974,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.519076,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.531646,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.544477,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.557557,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.570173,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.5832782,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.596083,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.608753,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.62143,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.634378,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.6473112,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.6606731,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.673772,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.686707,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.699797,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.712439,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.725664,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.739386,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.751932,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.765321,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.778962,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.791571,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.8051221,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.817707,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.8304288,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.8430169,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.8558311,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.868475,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.881336,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.894148,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.9069,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.919752,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.932512,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.945237,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.9578922,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.970443,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.983058,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938541.995747,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.008399,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.021097,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.033663,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.0462852,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.059655,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.072202,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.085002,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.097656,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.110411,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.123014,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.135565,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.148711,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.16146,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.174242,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.186794,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.1998909,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.212474,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.225043,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.2380118,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.251261,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.263817,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.276375,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.2895958,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.3021498,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.3155358,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.328522,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.341138,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.354579,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.367234,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.379777,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.392323,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.404869,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.417418,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.4300349,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.4426339,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.455223,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.467981,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.480761,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.493609,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.506204,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.518796,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.5313659,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.544008,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.557077,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.569943,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.582538,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.595114,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.607997,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.620585,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.633636,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.646425,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.660376,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.672926,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.685469,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.698074,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.710814,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.7236779,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.7362251,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.749658,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.7622988,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.774893,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.787443,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.800371,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.8132548,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.826178,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.839662,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.852224,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.864825,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.8773718,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.891011,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.904393,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.91803,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.930805,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.9434109,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.956056,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.9687018,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.981927,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938542.994483,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.00757,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.020211,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.0335722,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.0467782,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.059498,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.072125,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.084737,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.097855,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.110042,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.122596,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.135239,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.147817,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.160634,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.173391,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.186104,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.199038,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.2118888,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.225261,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.2378318,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.250658,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.263851,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.276397,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.2891798,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.301874,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.314522,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.3271759,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.33989,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.352593,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.365385,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.378438,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.391084,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.404004,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.416553,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.429367,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.4419682,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.4545522,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.467322,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.4799519,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.493362,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.5062542,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.5189161,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.531799,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.544739,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.5583549,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.570904,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.583473,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.59602,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.609428,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.621975,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.6345248,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.64751,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.661462,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.674009,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.68655,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.7009401,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.713557,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.726538,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.739085,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.752139,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.764739,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.7775428,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.790252,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.8032,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.81682,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.8298419,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.843956,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.856587,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.8691351,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.882659,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.8958552,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.908462,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.921058,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.934069,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.947242,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.9619899,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.974826,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.987371,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938543.999922,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.0130482,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.026217,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.03884,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.0522308,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.064807,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.0781472,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.090791,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.103759,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.116371,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.129127,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.1420002,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.154712,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.167263,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.179868,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.192631,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.205976,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.218751,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.2314508,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.2440362,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.256672,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.269465,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.2820852,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.2952409,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.308327,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.320874,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.3335,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.3468149,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.360895,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.3746471,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.387527,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.4004521,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.413495,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.42605,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.438633,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.451367,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.464106,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.4775412,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.490346,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.5032902,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.517072,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.530827,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.545248,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.557942,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.570985,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.583539,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.596511,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.609059,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.6216252,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.6365929,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.649954,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.663312,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.676223,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.689038,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.7048361,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.717584,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.730144,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.7427251,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.755043,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.7677271,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.7813408,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.79411,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.806952,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.820019,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.832566,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.845382,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.858701,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.872651,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.88656,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.900459,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.913472,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.926021,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.9392362,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.951861,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.964528,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.977765,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938544.9903932,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.003217,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.015994,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.028587,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.04147,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.054291,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.066837,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.079378,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.091923,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.105271,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.11809,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.131176,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.143726,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.156307,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.169096,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.181637,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.194912,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.2079659,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.2205188,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.234713,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.24787,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.261184,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.274942,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.2888849,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.30245,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.3157032,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.328393,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.3414888,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.354075,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.366633,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.379818,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.3923671,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.405164,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.4190578,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.431689,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.444263,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.456917,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.469481,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.4822888,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.4956439,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.508196,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.5218592,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.535944,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.550612,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.5631602,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.576226,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.58896,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.6015081,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.614374,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.627112,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.639901,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.653596,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.667535,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.681737,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.6945548,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.707607,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.721487,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.734657,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.747388,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.760819,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.773762,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.786447,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.79912,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.811842,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.824391,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.837785,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.850365,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.863389,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.877047,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.8897579,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.902633,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.916072,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.928614,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.941215,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.956374,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.969122,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.9827452,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938545.995786,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.0085819,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.021626,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.0342422,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.046825,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.0593731,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.071984,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.0845282,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.097298,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.109972,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.122517,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.135377,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.1488461,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.161393,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.174408,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.187422,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.200823,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.213407,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.226279,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.239263,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.251405,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.264815,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.277646,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.290273,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.303541,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.3160908,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.329921,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.34247,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.3551638,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.367754,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.380818,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.393636,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.4063349,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.418899,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.431517,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.444355,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.45759,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.470438,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.48324,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.4957938,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.508692,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.5212412,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.534192,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.546988,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.559891,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.572757,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.585341,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.5978932,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.609507,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.6226182,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.6354601,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.648907,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.6620831,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.674438,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.687627,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.700329,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.712877,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.725613,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.73842,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.751507,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.7641118,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.777314,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.791297,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.8043048,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.8168478,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.8306408,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.843294,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.856471,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.869653,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.883216,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.895943,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.90862,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.921174,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.933832,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.946933,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.959531,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.9731698,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.985782,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938546.9967492,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.009517,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.0221922,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.03475,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.0479271,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.0611,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.0752,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.089005,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.103269,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.1159139,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.12868,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.1423,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.1561239,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.1702359,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.182807,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.1956851,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.209928,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.2231302,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.235779,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.249397,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.262107,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.2749891,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.2875671,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.300965,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.313576,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.326577,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.34006,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.352709,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.3653278,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.378537,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.3915892,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.405644,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.418559,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.431487,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.444074,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.4566662,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.47026,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.4843361,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.4968839,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.509823,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.5225642,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.535419,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.5486221,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.561313,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.574064,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.586609,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.599314,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.610024,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.622592,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.635363,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.6480582,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.662028,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.675234,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.687786,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.701688,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.7147038,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.727398,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.740206,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.752842,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.765631,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.778307,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.791768,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.80448,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.817346,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.831161,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.8437738,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.856807,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.86782,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.880666,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.893263,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.907014,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.920146,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.9327009,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.94542,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.9581969,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.970861,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.9839191,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938547.9968581,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.0094888,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.0223172,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.034931,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.0478442,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.060673,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.073094,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.086059,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.0996149,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.110376,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.123845,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.136818,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.149545,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.162551,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.175106,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.188298,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.2008462,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.213394,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.226163,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.23918,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.2518148,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.264509,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.277152,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.2905889,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.30319,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.316288,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.3291771,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.341724,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.3546681,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.368185,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.3810701,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.393793,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.40639,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.418934,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.432129,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.4447858,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.458425,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.471267,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.484681,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.498932,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.511864,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.524758,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.537482,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.550637,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.56394,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.576798,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.589489,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.603437,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.616029,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.62917,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.64212,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.654668,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.667221,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.679934,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.692739,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.7061481,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.718708,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.7312891,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.743859,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.7571049,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.770486,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.7836149,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.796963,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.8097112,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.8229408,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.835663,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.848672,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.8598862,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.872638,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.885184,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.898556,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.911527,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.9242618,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.9371352,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.949693,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.963239,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.975934,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938548.988535,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.001289,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.013898,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.026457,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.0390038,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.051774,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.06433,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.077138,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.089916,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.102655,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.1154938,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.1292539,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.141858,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.1544042,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.1671638,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.180254,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.193069,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.205863,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.218457,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.231068,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.243677,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.2568479,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.270474,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.283021,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.296659,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.3096051,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.322305,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.335051,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.347599,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.360238,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.372908,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.3855019,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.3984451,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.4110012,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.424555,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.437115,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.4496808,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.462388,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.4749491,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.4880562,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.500803,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.513359,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.525943,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.539391,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.551969,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.565058,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.577605,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.5901608,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.602707,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.6153548,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.628319,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.641004,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.653552,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.664562,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.677153,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.6900082,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.7026932,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.7154078,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.72887,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.742605,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.755152,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.767946,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.780968,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.7935119,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.806149,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.819386,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.8324952,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.845122,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.8576682,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.8705769,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.8831291,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.896272,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.908849,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.921567,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.93447,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.947149,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.959739,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.972503,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.985377,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938549.9984388,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.012459,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.025016,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.038024,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.050904,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.06351,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.076503,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.090432,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.103016,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.115836,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.128385,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.1416152,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.15417,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.1667259,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.1797252,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.1924522,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.205235,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.218297,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.23124,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.243783,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.256336,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.269989,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.2827039,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.29537,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.308311,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.321281,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.3338292,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.3473432,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.359921,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.372691,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.38528,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.398047,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.410968,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.423511,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.436107,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.4487958,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.461588,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.474227,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.486818,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.499952,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.513304,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.5258539,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.5386,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.551601,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.564152,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.576949,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.5898418,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.6029608,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.6155121,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.628652,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.6413,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.653887,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.666594,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.679764,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.6923149,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.7051,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.717739,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.7306461,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.743804,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.756657,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.769206,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.782607,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.795152,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.8077,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.820734,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.833354,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.846674,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.85922,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.872083,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.884633,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.897192,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.909943,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.92258,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.935146,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.948344,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.9612641,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.97381,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.986441,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938550.9994292,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.013531,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.02625,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.0391822,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.051861,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.0645068,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.077875,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.090574,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.104059,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.1167932,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.129925,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.1426811,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.1549299,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.1674812,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.1808782,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.1936,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.207114,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.2196622,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.2328231,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.2453802,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.2579682,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.270533,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.284228,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.296892,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.3094988,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.3220491,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.334665,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.347253,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.360152,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.3727202,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.3855748,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.398731,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.411278,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.423958,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.436558,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.450075,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.462684,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.475234,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.487821,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.501647,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.515472,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.52802,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.541089,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.553632,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.566709,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.5795121,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.5923681,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.605215,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.6177669,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.630346,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.642889,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.655545,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.6685371,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.681228,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.693776,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.7064261,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.7191958,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.73176,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.745003,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.757591,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.770218,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.783212,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.797301,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.8100102,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.822562,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.835417,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.849069,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.859953,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.8728452,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.886156,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.8989398,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.91193,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.9244769,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.938307,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.95145,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.964,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.9765482,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938551.988726,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.001816,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.0143669,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.027565,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.040638,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.0544798,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.0671191,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.0801752,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.0934951,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.1060832,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.118644,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.131401,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.1439528,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.1570659,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.170306,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.1829271,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.195919,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.208593,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.2212448,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.234272,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.246818,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.2594671,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.2722418,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.28508,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.297854,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.310418,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.324094,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.336915,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.35011,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.3626728,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.375376,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.388475,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.401479,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.414104,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.4267871,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.439462,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.452111,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.4647071,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.477658,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.4910212,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.504843,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.517974,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.530519,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.543392,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.5562172,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.569058,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.581612,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.594163,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.6071959,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.619746,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.632517,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.64549,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.658156,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.6707451,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.6840608,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.6971798,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.7101178,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.723392,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.7359722,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.7489018,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.761677,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.774003,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.7873,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.8003159,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.8130429,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.825696,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.838707,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.85132,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.863873,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.87665,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.8901162,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.903147,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.9171,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.929684,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.9426749,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.955394,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.968205,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.9808571,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938552.993933,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.006476,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.0193238,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.0322208,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.0435798,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.056659,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.069213,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.081849,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.094572,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.107172,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.119715,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.132351,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.144898,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.158078,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.1704671,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.1832461,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.195904,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.2088819,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.221586,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.2343109,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.247029,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.2599418,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.2729988,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.28603,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.2985852,
            "rss_mb": 186.734375,
            "vms_mb": 401435.0,
            "percent": 0.5698680877685547
          },
          {
            "timestamp": 1753938553.311192,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.323835,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.336923,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.35005,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.363049,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.3755898,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.389178,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.402238,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.4148202,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.427503,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.440088,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.453171,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.465734,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.4783769,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.4912698,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.5041,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.5168178,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.529424,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.54214,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.555153,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.567701,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.580256,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.593035,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.605713,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.618727,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.631381,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.643997,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.656903,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.670362,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.683104,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.696254,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.709284,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.7219992,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.73519,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.7477398,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.7604952,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.775242,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.788361,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.801384,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.8144681,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.8271801,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.8399959,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.852811,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.8660831,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.879037,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.8917959,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.904494,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.9170601,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.92961,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.942749,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.9563851,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.9692512,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.9821,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938553.995098,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.007926,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.021346,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.034812,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.048038,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.06063,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.073183,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.086257,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.098806,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.112061,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.125516,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.138467,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.151485,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.164425,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.177141,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.190449,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.2032,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.215751,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.228713,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.241838,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.254525,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.267039,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.27959,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.292821,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.305641,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.31835,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.331338,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.3439202,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.356585,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.370592,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.383274,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.396538,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.409087,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.421717,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.434911,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.4474869,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.460941,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.473979,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.48676,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.4993842,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.512545,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.525394,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.538014,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.551178,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.563879,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.57649,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.5893068,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.600944,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.613815,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.62411,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.637154,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.6494489,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.6620579,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.675267,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.688673,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.7024488,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.7151601,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.728162,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.740769,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.753421,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.765982,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.7789829,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.791548,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.8024309,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.815275,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.8257082,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.838389,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.8513331,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.864394,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.877364,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.8880699,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.901206,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.913962,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.926524,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.937419,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.9503338,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.961229,
            "rss_mb": 186.75,
            "vms_mb": 401435.0,
            "percent": 0.569915771484375
          },
          {
            "timestamp": 1753938554.97383,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938554.986347,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938554.999216,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.011776,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.0243368,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.037452,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.0507672,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.063395,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.076457,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.089015,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.1016161,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.1122508,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.12523,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.136645,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.15088,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.16121,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.1738,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.186707,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.199954,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.213273,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.225931,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.2390442,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.251711,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.264267,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.276864,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.289412,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.301961,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.312641,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.326064,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.3386161,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.351234,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.364146,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.376788,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.38992,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.402472,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.415148,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.427914,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.440484,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.4530618,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.4656582,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.478273,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.491103,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.503681,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.514341,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.527035,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.5396202,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.5522602,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.5637739,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.576473,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.5891168,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.6018078,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.614847,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.6275442,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.640084,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.6521049,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.6649752,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.6775382,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.690357,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.7029,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.715517,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.729322,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.7427368,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.755284,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.768117,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.778717,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.791265,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.804482,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.817128,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.82998,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.842755,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.856277,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.869081,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.881814,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.8948328,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.9080682,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.920616,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.9338539,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.946582,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.959199,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.971879,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.98448,
            "rss_mb": 186.765625,
            "vms_mb": 401435.0,
            "percent": 0.5699634552001953
          },
          {
            "timestamp": 1753938555.998272,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.011151,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.0242748,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.0368981,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.0504231,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.063107,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.077365,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.090976,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.1040692,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.11729,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.129993,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.142677,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.155622,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.168753,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.181534,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.1941838,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.206808,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.219351,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.2318962,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.245077,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.2576268,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.270195,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.283144,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.296246,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.309032,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.321583,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.334229,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.347181,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.3598652,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.372473,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.3851469,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.398294,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.410922,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.423508,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.435785,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.448388,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.461021,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.4737751,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.486335,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.4990652,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.5118122,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.5251808,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.538503,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.552093,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.5649862,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.577578,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.590127,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.602752,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.615324,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.627912,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.640461,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.653206,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.666,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.678797,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.6916149,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.7047858,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.71761,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.730158,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.742938,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.754575,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.767313,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.7802181,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.792942,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.805851,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.8186262,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.83133,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.8438919,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.856441,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.8689978,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.882138,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.894772,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.907323,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.919979,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.93253,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.9453208,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.957983,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.971313,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.983922,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938556.997293,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.0097458,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.022294,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.0356832,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.048228,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.0609071,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.0734599,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.086116,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.100232,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.1132119,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.1259599,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.139601,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.151705,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.1642601,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.176992,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.189835,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.202837,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.215457,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.228213,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.2410681,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.254208,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.266788,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.279501,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.293728,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.306644,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.319194,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.331771,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.344369,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.357047,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.369664,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.382963,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.395638,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.408281,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.420973,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.433525,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.44612,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.457629,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.4701881,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.483232,
            "rss_mb": 186.78125,
            "vms_mb": 401435.0,
            "percent": 0.5700111389160156
          },
          {
            "timestamp": 1753938557.4978712,
            "rss_mb": 172.78125,
            "vms_mb": 401421.0,
            "percent": 0.5272865295410156
          },
          {
            "timestamp": 1753938557.513212,
            "rss_mb": 172.875,
            "vms_mb": 401421.0,
            "percent": 0.5275726318359375
          },
          {
            "timestamp": 1753938557.52971,
            "rss_mb": 172.90625,
            "vms_mb": 401421.0,
            "percent": 0.5276679992675781
          },
          {
            "timestamp": 1753938557.5459032,
            "rss_mb": 172.953125,
            "vms_mb": 401429.0,
            "percent": 0.5278110504150391
          },
          {
            "timestamp": 1753938557.5638568,
            "rss_mb": 172.953125,
            "vms_mb": 401429.0,
            "percent": 0.5278110504150391
          },
          {
            "timestamp": 1753938557.57703,
            "rss_mb": 172.96875,
            "vms_mb": 401429.0,
            "percent": 0.5278587341308594
          },
          {
            "timestamp": 1753938557.595823,
            "rss_mb": 172.96875,
            "vms_mb": 401429.0,
            "percent": 0.5278587341308594
          },
          {
            "timestamp": 1753938557.609008,
            "rss_mb": 172.96875,
            "vms_mb": 401429.0,
            "percent": 0.5278587341308594
          },
          {
            "timestamp": 1753938557.621665,
            "rss_mb": 172.96875,
            "vms_mb": 401429.0,
            "percent": 0.5278587341308594
          },
          {
            "timestamp": 1753938557.636836,
            "rss_mb": 173.125,
            "vms_mb": 401429.0,
            "percent": 0.5283355712890625
          },
          {
            "timestamp": 1753938557.649465,
            "rss_mb": 173.1875,
            "vms_mb": 401412.9375,
            "percent": 0.5285263061523438
          }
        ],
        "peak_memory_mb": 186.78125,
        "avg_memory_mb": 157.22715061247217,
        "memory_delta_mb": 68.375,
        "sample_count": 2245,
        "initial_memory_mb": 104.8125,
        "final_memory_mb": 173.1875,
        "duration": 34.13227275002282,
        "metadata": {
          "profiler": "psutil",
          "precision": 1,
          "status": "completed",
          "sampling_rate": "100 Hz"
        }
      },
      "start_time": "2025-07-30T22:08:43.517136",
      "end_time": "2025-07-30T22:09:17.643161",
      "duration": 34.126025,
      "success": true,
      "error_message": null
    },
    "call": {
      "profiler_type": "call",
      "data": {
        "total_calls": 3015036,
        "total_time": 140.87020360445604,
        "stats": {
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:0(run_profiling_session)": {
            "ncalls": 1,
            "tottime": 33.980150625051465,
            "cumtime": 33.980150625051465,
            "percall": 33.980150625051465,
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "function": "run_profiling_session",
            "line": 0,
            "callers": {},
            "callees": {
              "/Users/Adam/Pycroscope/docs/examples/usage_example.py:0(run_sample_workload)": 1
            }
          },
          "/Users/Adam/Pycroscope/docs/examples/usage_example.py:0(run_sample_workload)": {
            "ncalls": 1,
            "tottime": 33.980020832968876,
            "cumtime": 33.980020832968876,
            "percall": 33.980020832968876,
            "filename": "/Users/Adam/Pycroscope/docs/examples/usage_example.py",
            "function": "run_sample_workload",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/usage_example.py:0(run_profiling_session)": 1
            },
            "callees": {
              "<frozen importlib._bootstrap>:0(_find_and_load)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(mixed_workload)": 1
            }
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(mixed_workload)": {
            "ncalls": 1,
            "tottime": 33.96452962496551,
            "cumtime": 33.96452962496551,
            "percall": 33.96452962496551,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "mixed_workload",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/usage_example.py:0(run_sample_workload)": 1
            },
            "callees": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(cpu_intensive_calculation)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(memory_intensive_operations)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(file_io_operations)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(nested_function_calls)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(data_processing_pipeline)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(demonstrate_anti_patterns)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(fibonacci_recursive)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(fibonacci_iterative)": 1
            }
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(demonstrate_anti_patterns)": {
            "ncalls": 1,
            "tottime": 15.507180917018559,
            "cumtime": 15.507180917018559,
            "percall": 15.507180917018559,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "demonstrate_anti_patterns",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(mixed_workload)": 1
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/numpy/_core/_methods.py:0(_sum)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/numpy/_core/numeric.py:0(_tensordot_dispatcher)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/numpy/_core/numeric.py:0(tensordot)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(inefficient_nested_search)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(overly_complex_function)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(inefficient_data_operations)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(fibonacci_recursive)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(fibonacci_iterative)": 1
            }
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(cpu_intensive_calculation)": {
            "ncalls": 1,
            "tottime": 15.189342124969698,
            "cumtime": 15.189342124969698,
            "percall": 15.189342124969698,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "cpu_intensive_calculation",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(mixed_workload)": 1
            },
            "callees": {}
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(fibonacci_recursive)": {
            "ncalls": 2935322,
            "tottime": 4.2034464360331185,
            "cumtime": 4.2034464360331185,
            "percall": 1.4320222571946513e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "fibonacci_recursive",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(demonstrate_anti_patterns)": 1,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(fibonacci_recursive)": 2935320,
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(mixed_workload)": 1
            },
            "callees": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(fibonacci_recursive)": 2935320
            }
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(memory_intensive_operations)": {
            "ncalls": 1,
            "tottime": 1.4928575420053676,
            "cumtime": 1.4928575420053676,
            "percall": 1.4928575420053676,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "memory_intensive_operations",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(mixed_workload)": 1
            },
            "callees": {}
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(file_io_operations)": {
            "ncalls": 1,
            "tottime": 0.347927917027846,
            "cumtime": 0.347927917027846,
            "percall": 0.347927917027846,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "file_io_operations",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(mixed_workload)": 1
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:0(mkdtemp)": 1,
              "<frozen posixpath>:0(join)": 20,
              "<frozen codecs>:0(__init__)": 20,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:0(dump)": 10,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:0(load)": 10
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:0(dump)": {
            "ncalls": 10,
            "tottime": 0.33621708198916167,
            "cumtime": 0.33621708198916167,
            "percall": 0.03362170819891617,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "function": "dump",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(file_io_operations)": 10
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(iterencode)": 10,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode)": 10180
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode)": {
            "ncalls": 10180,
            "tottime": 0.27181669999845326,
            "cumtime": 0.27181669999845326,
            "percall": 2.670105108039816e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "function": "_iterencode",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:0(dump)": 10180
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_dict)": 10180
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_dict)": {
            "ncalls": 10240,
            "tottime": 0.21859749197028577,
            "cumtime": 0.21859749197028577,
            "percall": 2.134741132522322e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "function": "_iterencode_dict",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode)": 10180,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_dict)": 60
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_list)": 10020,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_dict)": 60,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(floatstr)": 10
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_list)": {
            "ncalls": 10020,
            "tottime": 0.1686001152265817,
            "cumtime": 0.1686001152265817,
            "percall": 1.6826358805048072e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "function": "_iterencode_list",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_dict)": 10020
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(floatstr)": 10000
            }
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(stop)": {
            "ncalls": 1,
            "tottime": 0.14503529097419232,
            "cumtime": 0.14503529097419232,
            "percall": 0.14503529097419232,
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py",
            "function": "stop",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/orchestra.py:0(stop_profiling)": 1
            },
            "callees": {
              "<frozen importlib._bootstrap>:0(parent)": 1,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py:0(unregister_trace_function)": 1,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/base.py:0(_mark_end)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(print_stats)": 1,
              "<frozen genericpath>:0(exists)": 32,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(_extract_function_data)": 32,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/base.py:0(duration)": 2
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(print_stats)": {
            "ncalls": 1,
            "tottime": 0.12939499999629334,
            "cumtime": 0.12939499999629334,
            "percall": 0.12939499999629334,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "print_stats",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(stop)": 1
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_text)": 1
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_text)": {
            "ncalls": 1,
            "tottime": 0.12905154103646055,
            "cumtime": 0.12905154103646055,
            "percall": 0.12905154103646055,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "show_text",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(print_stats)": 1
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": 32
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": {
            "ncalls": 32,
            "tottime": 0.11426583607681096,
            "cumtime": 0.11426583607681096,
            "percall": 0.0035708073774003424,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "show_func",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_text)": 32
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(<genexpr>)": 1612,
              "<frozen genericpath>:0(exists)": 64,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(clearcache)": 32,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": 32,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__hash__)": 32,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_column_widths)": 2
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": {
            "ncalls": 32,
            "tottime": 0.08509329095249996,
            "cumtime": 0.08509329095249996,
            "percall": 0.0026591653422656236,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "get_code_block",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": 32
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getlines)": 32,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(getblock)": 32,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(_generate_tokens_from_c_tokenizer)": 32
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(getblock)": {
            "ncalls": 32,
            "tottime": 0.07999662810470909,
            "cumtime": 0.07999662810470909,
            "percall": 0.002499894628272159,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py",
            "function": "getblock",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": 32
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(__init__)": 32,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(generate_tokens)": 32,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(_generate_tokens_from_c_tokenizer)": 5607,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(tokeneater)": 5607
            }
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(data_processing_pipeline)": {
            "ncalls": 1,
            "tottime": 0.05492979200789705,
            "cumtime": 0.05492979200789705,
            "percall": 0.05492979200789705,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "data_processing_pipeline",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(mixed_workload)": 1
            },
            "callees": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(<genexpr>)": 9014
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(floatstr)": {
            "ncalls": 10010,
            "tottime": 0.044400411716196686,
            "cumtime": 0.044400411716196686,
            "percall": 4.435605566053615e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py",
            "function": "floatstr",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_list)": 10000,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/encoder.py:0(_iterencode_dict)": 10
            },
            "callees": {}
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(tokeneater)": {
            "ncalls": 5607,
            "tottime": 0.03575283190002665,
            "cumtime": 0.03575283190002665,
            "percall": 6.376463688251587e-06,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "tokeneater",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(getblock)": 5607
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(tokeneater)": 5607
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": {
            "ncalls": 3,
            "tottime": 0.02967075107153505,
            "cumtime": 0.02967075107153505,
            "percall": 0.009890250357178351,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py",
            "function": "from_config",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_text)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_column_widths)": 2
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_default)": 3,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(find_and_read_config_file)": 2,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(iter_configs)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(get_headers)": 2,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(get_subtable)": 20,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(merge)": 2,
              "<string>:0(__init__)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__eq__)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__new__)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__init__)": 1
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(_generate_tokens_from_c_tokenizer)": {
            "ncalls": 5639,
            "tottime": 0.028760054090525955,
            "cumtime": 0.028760054090525955,
            "percall": 5.100204662267415e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py",
            "function": "_generate_tokens_from_c_tokenizer",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(getblock)": 5607,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": 32
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/collections/__init__.py:0(_make)": 5607
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(find_and_read_config_file)": {
            "ncalls": 2,
            "tottime": 0.026494999998249114,
            "cumtime": 0.026494999998249114,
            "percall": 0.013247499999124557,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py",
            "function": "find_and_read_config_file",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": 2
            },
            "callees": {
              "<frozen _collections_abc>:0(get)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(cwd)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(absolute)": 2,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(iter_configs)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(open)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(load)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__new__)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__init__)": 1
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(load)": {
            "ncalls": 2,
            "tottime": 0.025910626049153507,
            "cumtime": 0.025910626049153507,
            "percall": 0.012955313024576753,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "load",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(find_and_read_config_file)": 2
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 2
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": {
            "ncalls": 2,
            "tottime": 0.025870917015708983,
            "cumtime": 0.025870917015708983,
            "percall": 0.012935458507854491,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "loads",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(load)": 2
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(__init__)": 4,
              "<string>:0(<lambda>)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(make_safe_parse_float)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 234,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(finalize_pending)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comment)": 104,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": 78
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": {
            "ncalls": 78,
            "tottime": 0.021339667728170753,
            "cumtime": 0.021339667728170753,
            "percall": 0.00027358548369449685,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "key_value_rule",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 78
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(<genexpr>)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(is_)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(get_or_create_nest)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(set)": 36
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(tokeneater)": {
            "ncalls": 5607,
            "tottime": 0.0205607142415829,
            "cumtime": 0.0205607142415829,
            "percall": 3.666972399069538e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py",
            "function": "tokeneater",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(tokeneater)": 5607
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": {
            "ncalls": 82,
            "tottime": 0.018730088253505528,
            "cumtime": 0.018730088253505528,
            "percall": 0.000228415710408604,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_key_value_pair",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": 4
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": 82,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 82,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 82
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_column_widths)": {
            "ncalls": 2,
            "tottime": 0.015194833977147937,
            "cumtime": 0.015194833977147937,
            "percall": 0.007597416988573968,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "get_column_widths",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": 2
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": 2,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(get_subconfig)": 2
            }
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(<genexpr>)": {
            "ncalls": 9014,
            "tottime": 0.013835881720297039,
            "cumtime": 0.013835881720297039,
            "percall": 1.5349325183378121e-06,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "<genexpr>",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(data_processing_pipeline)": 9014
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_array)": {
            "ncalls": 34,
            "tottime": 0.013520336942747235,
            "cumtime": 0.013520336942747235,
            "percall": 0.00039765696890433044,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_array",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 34
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comments_and_array_ws)": 252,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 120
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/collections/__init__.py:0(_make)": {
            "ncalls": 5607,
            "tottime": 0.012739802536088973,
            "cumtime": 0.012739802536088973,
            "percall": 2.2721245828587434e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/collections/__init__.py",
            "function": "_make",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(_generate_tokens_from_c_tokenizer)": 5607
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": {
            "ncalls": 202,
            "tottime": 0.010689287388231605,
            "cumtime": 0.010689287388231605,
            "percall": 5.291726429817626e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_value",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 82,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_array)": 120
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_array)": 34,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_one_line_basic_str)": 148,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": 4,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_re.py:0(match_to_number)": 6,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_literal_str)": 2
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_one_line_basic_str)": {
            "ncalls": 150,
            "tottime": 0.010008337383624166,
            "cumtime": 0.010008337383624166,
            "percall": 6.672224922416111e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_one_line_basic_str",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 148,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_part)": 2
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_basic_str)": 150
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_basic_str)": {
            "ncalls": 150,
            "tottime": 0.00956878182478249,
            "cumtime": 0.00956878182478249,
            "percall": 6.379187883188327e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_basic_str",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_one_line_basic_str)": 150
            },
            "callees": {}
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/memory_profiler.py:0(stop)": {
            "ncalls": 1,
            "tottime": 0.007549208006821573,
            "cumtime": 0.007549208006821573,
            "percall": 0.007549208006821573,
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/memory_profiler.py",
            "function": "stop",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/orchestra.py:0(stop_profiling)": 1
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(is_alive)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(join)": 1,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/base.py:0(_mark_end)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/psutil/_common.py:0(wrapper)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/psutil/__init__.py:0(memory_percent)": 1,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/base.py:0(duration)": 2
            }
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(_extract_function_data)": {
            "ncalls": 32,
            "tottime": 0.007372664869762957,
            "cumtime": 0.007372664869762957,
            "percall": 0.0002303957771800924,
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py",
            "function": "_extract_function_data",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(stop)": 32
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getline)": 284,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(<lambda>)": 284
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getlines)": {
            "ncalls": 316,
            "tottime": 0.006307884235866368,
            "cumtime": 0.006307884235866368,
            "percall": 1.9961658974260658e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py",
            "function": "getlines",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": 32,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getline)": 284
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(updatecache)": 39
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(join)": {
            "ncalls": 1,
            "tottime": 0.006207624974194914,
            "cumtime": 0.006207624974194914,
            "percall": 0.006207624974194914,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "join",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/memory_profiler.py:0(stop)": 1
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(is_set)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(current_thread)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(_wait_for_tstate_lock)": 1
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(_wait_for_tstate_lock)": {
            "ncalls": 2,
            "tottime": 0.006195875001139939,
            "cumtime": 0.006195875001139939,
            "percall": 0.0030979375005699694,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "_wait_for_tstate_lock",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(is_alive)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(join)": 1
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(_stop)": 1
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(updatecache)": {
            "ncalls": 39,
            "tottime": 0.005405247095040977,
            "cumtime": 0.005405247095040977,
            "percall": 0.00013859607936002506,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py",
            "function": "updatecache",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getlines)": 39
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(open)": 39,
              "<frozen codecs>:0(decode)": 223
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comments_and_array_ws)": {
            "ncalls": 252,
            "tottime": 0.004145380982663482,
            "cumtime": 0.004145380982663482,
            "percall": 1.64499245343789e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "skip_comments_and_array_ws",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_array)": 252
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 366,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comment)": 366
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": {
            "ncalls": 1032,
            "tottime": 0.00399348750943318,
            "cumtime": 0.00399348750943318,
            "percall": 3.869658439373237e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "skip_chars",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 234,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_part)": 140,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": 176,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 82,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comments_and_array_ws)": 366,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": 8
            },
            "callees": {}
          },
          "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(inefficient_nested_search)": {
            "ncalls": 1,
            "tottime": 0.003879416035488248,
            "cumtime": 0.003879416035488248,
            "percall": 0.003879416035488248,
            "filename": "/Users/Adam/Pycroscope/docs/examples/sample_workload.py",
            "function": "inefficient_nested_search",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(demonstrate_anti_patterns)": 1
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": {
            "ncalls": 108,
            "tottime": 0.0034575010649859905,
            "cumtime": 0.0034575010649859905,
            "percall": 3.201389874987028e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_key",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 82
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_part)": 142,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 176
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getline)": {
            "ncalls": 284,
            "tottime": 0.002504588570445776,
            "cumtime": 0.002504588570445776,
            "percall": 8.818973839597803e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py",
            "function": "getline",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(_extract_function_data)": 284
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getlines)": 284
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": {
            "ncalls": 26,
            "tottime": 0.002432416134979576,
            "cumtime": 0.002432416134979576,
            "percall": 9.355446672998369e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "create_dict_rule",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 26
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(is_)": 52,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(set)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(get_or_create_nest)": 26
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:0(load)": {
            "ncalls": 10,
            "tottime": 0.0023752498091198504,
            "cumtime": 0.0023752498091198504,
            "percall": 0.00023752498091198505,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py",
            "function": "load",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/docs/examples/sample_workload.py:0(file_io_operations)": 10
            },
            "callees": {
              "<frozen codecs>:0(decode)": 10,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/json/__init__.py:0(loads)": 10
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_default)": {
            "ncalls": 3,
            "tottime": 0.0023607490002177656,
            "cumtime": 0.0023607490002177656,
            "percall": 0.0007869163334059218,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py",
            "function": "from_default",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": 3
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(copy)": 3
            }
          }
        },
        "stats_summary": "Custom call profiler tracked 3015036 function calls in 140.870204 seconds",
        "sort_key": "cumulative",
        "profiler_type": "custom_call_profiler"
      },
      "start_time": "2025-07-30T22:08:43.517671",
      "end_time": "2025-07-30T22:09:17.650752",
      "duration": 34.133081,
      "success": true,
      "error_message": null
    }
  }
}