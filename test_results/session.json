{
  "session_id": "0c4e56d5-faa0-4588-8874-8d8517fc64f0",
  "config": {
    "line_profiling": true,
    "memory_profiling": true,
    "call_profiling": true,
    "output_dir": "test_results",
    "session_name": null,
    "save_raw_data": true,
    "sampling_interval": 0.01,
    "memory_precision": 3,
    "max_call_depth": 50,
    "generate_reports": true,
    "create_visualizations": true,
    "analyze_patterns": true,
    "enabled_patterns": [
      "PatternType.NESTED_LOOPS",
      "PatternType.INEFFICIENT_DATA_STRUCTURE",
      "PatternType.UNNECESSARY_COMPUTATION",
      "PatternType.MEMORY_LEAK_PATTERN",
      "PatternType.QUADRATIC_COMPLEXITY",
      "PatternType.EXPONENTIAL_COMPLEXITY",
      "PatternType.RECURSIVE_WITHOUT_MEMOIZATION",
      "PatternType.DEAD_CODE",
      "PatternType.UNUSED_IMPORTS",
      "PatternType.DUPLICATE_CODE",
      "PatternType.HIGH_CYCLOMATIC_COMPLEXITY",
      "PatternType.LOW_MAINTAINABILITY_INDEX",
      "PatternType.LONG_FUNCTION",
      "PatternType.TOO_MANY_PARAMETERS",
      "PatternType.MISSED_VECTORIZATION",
      "PatternType.INEFFICIENT_ARRAY_OPERATIONS",
      "PatternType.SUBOPTIMAL_MATRIX_OPERATIONS",
      "PatternType.NON_CONTIGUOUS_MEMORY_ACCESS",
      "PatternType.UNNECESSARY_ARRAY_COPY",
      "PatternType.INEFFICIENT_BROADCASTING",
      "PatternType.SCALAR_ARRAY_OPERATIONS",
      "PatternType.WRONG_DTYPE_USAGE",
      "PatternType.INEFFICIENT_ARRAY_CONCATENATION",
      "PatternType.SUBOPTIMAL_LINEAR_ALGEBRA"
    ],
    "pattern_severity_threshold": "medium",
    "pattern_confidence_threshold": 0.7,
    "max_results_per_file": 50,
    "correlate_patterns_with_profiling": true,
    "include_suggestions": true,
    "prioritize_hotspot_patterns": true,
    "hotspot_correlation_threshold": 0.1,
    "pattern_complexity_threshold": 10,
    "pattern_maintainability_threshold": 20.0,
    "max_function_lines": 50,
    "max_function_parameters": 5,
    "exclude_test_files": true,
    "test_file_patterns": [
      "*test*.py",
      "*_test.py",
      "test_*.py"
    ],
    "generate_detailed_analysis_report": true,
    "save_intermediate_analysis_results": false,
    "profiler_prefix": "pycroscope",
    "use_thread_isolation": true,
    "cleanup_on_exit": true,
    "extra_config": {}
  },
  "start_time": "2025-07-27T14:17:03.821404",
  "end_time": "2025-07-27T14:17:03.897323",
  "duration": 0.075919,
  "status": "completed",
  "results": {
    "line": {
      "profiler_type": "line",
      "data": {
        "line_stats": {
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:373": {
            "hits": 1,
            "time": 0.000226,
            "time_per_hit": 0.000226,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 373,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:375": {
            "hits": 1,
            "time": 6.2e-05,
            "time_per_hit": 6.2e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 375,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:376": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 376,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:379": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 379,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:380": {
            "hits": 1,
            "time": 0.000202,
            "time_per_hit": 0.000202,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 380,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:381": {
            "hits": 1,
            "time": 2.1e-05,
            "time_per_hit": 2.1e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 381,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:382": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 382,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:383": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 383,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:384": {
            "hits": 1,
            "time": 0.000219,
            "time_per_hit": 0.000219,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 384,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:395": {
            "hits": 1,
            "time": 1.2e-05,
            "time_per_hit": 1.2e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 395,
            "function": "mkdtemp"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:116": {
            "hits": 1,
            "time": 9.7e-05,
            "time_per_hit": 9.7e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 116,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:117": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 117,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:118": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 118,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:119": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 119,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:124": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 124,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:125": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 125,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:126": {
            "hits": 1,
            "time": 7e-05,
            "time_per_hit": 7e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 126,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:129": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 129,
            "function": "_sanitize_params"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:87": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 87,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:88": {
            "hits": 4,
            "time": 4e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 88,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:89": {
            "hits": 3,
            "time": 3e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 89,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:90": {
            "hits": 2,
            "time": 2e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 90,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:92": {
            "hits": 1,
            "time": 5e-06,
            "time_per_hit": 5e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 92,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:95": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 95,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:101": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 101,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:104": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 104,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:105": {
            "hits": 1,
            "time": 0.0,
            "time_per_hit": 0.0,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 105,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:111": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 111,
            "function": "_infer_return_type"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:315": {
            "hits": 1,
            "time": 5.1e-05,
            "time_per_hit": 5.1e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 315,
            "function": "gettempdir"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:304": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 304,
            "function": "_gettempdir"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:311": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "line_number": 311,
            "function": "_gettempdir"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:133": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 133,
            "function": "RLock"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:135": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 135,
            "function": "RLock"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:840": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 840,
            "function": "_newname"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1361": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1361,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1362": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1362,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1363": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1363,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1365": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1365,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1368": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1368,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1369": {
            "hits": 1,
            "time": 1e-06,
            "time_per_hit": 1e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1369,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1370": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1370,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1372": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1372,
            "function": "_make_invoke_excepthook"
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:1404": {
            "hits": 1,
            "time": 2e-06,
            "time_per_hit": 2e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "line_number": 1404,
            "function": "_make_invoke_excepthook"
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py:124": {
            "hits": 1,
            "time": 4.4e-05,
            "time_per_hit": 4.4e-05,
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py",
            "line_number": 124,
            "function": "register_trace_function"
          }
        },
        "function_profiles": {
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:mkdtemp": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "mkdtemp",
            "total_time": 0.000745,
            "total_hits": 10,
            "line_details": [
              {
                "line_number": 373,
                "hits": 1,
                "time_us": 226.0,
                "per_hit_us": 226.0,
                "line_content": "prefix, suffix, dir, output_type = _sanitize_params(prefix, suffix, dir)"
              },
              {
                "line_number": 375,
                "hits": 1,
                "time_us": 62.0,
                "per_hit_us": 62.0,
                "line_content": "names = _get_candidate_names()"
              },
              {
                "line_number": 376,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if output_type is bytes:"
              },
              {
                "line_number": 379,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "for seq in range(TMP_MAX):"
              },
              {
                "line_number": 380,
                "hits": 1,
                "time_us": 202.0,
                "per_hit_us": 202.0,
                "line_content": "name = next(names)"
              },
              {
                "line_number": 381,
                "hits": 1,
                "time_us": 21.0,
                "per_hit_us": 21.0,
                "line_content": "file = _os.path.join(dir, prefix + name + suffix)"
              },
              {
                "line_number": 382,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "_sys.audit(\"tempfile.mkdtemp\", file)"
              },
              {
                "line_number": 383,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "try:"
              },
              {
                "line_number": 384,
                "hits": 1,
                "time_us": 219.0,
                "per_hit_us": 219.0,
                "line_content": "_os.mkdir(file, 0o700)"
              },
              {
                "line_number": 395,
                "hits": 1,
                "time_us": 12.0,
                "per_hit_us": 12.0,
                "line_content": "return _os.path.abspath(file)"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:_sanitize_params": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "_sanitize_params",
            "total_time": 0.00017299999999999998,
            "total_hits": 8,
            "line_details": [
              {
                "line_number": 116,
                "hits": 1,
                "time_us": 97.0,
                "per_hit_us": 97.0,
                "line_content": "output_type = _infer_return_type(prefix, suffix, dir)"
              },
              {
                "line_number": 117,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if suffix is None:"
              },
              {
                "line_number": 118,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "suffix = output_type()"
              },
              {
                "line_number": 119,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if prefix is None:"
              },
              {
                "line_number": 124,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if dir is None:"
              },
              {
                "line_number": 125,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if output_type is str:"
              },
              {
                "line_number": 126,
                "hits": 1,
                "time_us": 70.0,
                "per_hit_us": 70.0,
                "line_content": "dir = gettempdir()"
              },
              {
                "line_number": 129,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return prefix, suffix, dir, output_type"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:_infer_return_type": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "_infer_return_type",
            "total_time": 1.7e-05,
            "total_hits": 16,
            "line_details": [
              {
                "line_number": 87,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return_type = None"
              },
              {
                "line_number": 88,
                "hits": 4,
                "time_us": 4.0,
                "per_hit_us": 1.0,
                "line_content": "for arg in args:"
              },
              {
                "line_number": 89,
                "hits": 3,
                "time_us": 3.0,
                "per_hit_us": 1.0,
                "line_content": "if arg is None:"
              },
              {
                "line_number": 90,
                "hits": 2,
                "time_us": 2.0,
                "per_hit_us": 1.0,
                "line_content": "continue"
              },
              {
                "line_number": 92,
                "hits": 1,
                "time_us": 5.0,
                "per_hit_us": 5.0,
                "line_content": "if isinstance(arg, _os.PathLike):"
              },
              {
                "line_number": 95,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if isinstance(arg, bytes):"
              },
              {
                "line_number": 101,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "if return_type is bytes:"
              },
              {
                "line_number": 104,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "return_type = str"
              },
              {
                "line_number": 105,
                "hits": 1,
                "time_us": 0.0,
                "per_hit_us": 0.0,
                "line_content": "if return_type is None:"
              },
              {
                "line_number": 111,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return return_type"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:gettempdir": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "gettempdir",
            "total_time": 5.1e-05,
            "total_hits": 1,
            "line_details": [
              {
                "line_number": 315,
                "hits": 1,
                "time_us": 51.0,
                "per_hit_us": 51.0,
                "line_content": "return _os.fsdecode(_gettempdir())"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py:_gettempdir": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py",
            "function": "_gettempdir",
            "total_time": 2e-06,
            "total_hits": 2,
            "line_details": [
              {
                "line_number": 304,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if tempdir is None:"
              },
              {
                "line_number": 311,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return tempdir"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:RLock": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "RLock",
            "total_time": 3e-06,
            "total_hits": 2,
            "line_details": [
              {
                "line_number": 133,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if _CRLock is None:"
              },
              {
                "line_number": 135,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "return _CRLock(*args, **kwargs)"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:_newname": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "_newname",
            "total_time": 1e-06,
            "total_hits": 1,
            "line_details": [
              {
                "line_number": 840,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "return name_template % _counter()"
              }
            ]
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:_make_invoke_excepthook": {
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "_make_invoke_excepthook",
            "total_time": 1.2999999999999998e-05,
            "total_hits": 9,
            "line_details": [
              {
                "line_number": 1361,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "old_excepthook = excepthook"
              },
              {
                "line_number": 1362,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "old_sys_excepthook = _sys.excepthook"
              },
              {
                "line_number": 1363,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if old_excepthook is None:"
              },
              {
                "line_number": 1365,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "if old_sys_excepthook is None:"
              },
              {
                "line_number": 1368,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "sys_exc_info = _sys.exc_info"
              },
              {
                "line_number": 1369,
                "hits": 1,
                "time_us": 1.0,
                "per_hit_us": 1.0,
                "line_content": "local_print = print"
              },
              {
                "line_number": 1370,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "local_sys = _sys"
              },
              {
                "line_number": 1372,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "def invoke_excepthook(thread):"
              },
              {
                "line_number": 1404,
                "hits": 1,
                "time_us": 2.0,
                "per_hit_us": 2.0,
                "line_content": "return invoke_excepthook"
              }
            ]
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py:register_trace_function": {
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py",
            "function": "register_trace_function",
            "total_time": 4.4e-05,
            "total_hits": 1,
            "line_details": [
              {
                "line_number": 124,
                "hits": 1,
                "time_us": 44.0,
                "per_hit_us": 44.0,
                "line_content": "_trace_multiplexer.register_profiler(profiler_name, trace_func)"
              }
            ]
          }
        },
        "total_lines": 44,
        "total_hits": 50,
        "total_time": 0.0010489999999999998,
        "stats_output": "Timer unit: 1e-09 s\n\nTotal time: 4.4e-05 s\nFile: /Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py\nFunction: register_trace_function at line 122\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   122                                           def register_trace_function(profiler_name: str, trace_func: Callable):\n   123                                               \"\"\"Register a trace function with the global multiplexer.\"\"\"\n   124         1      44000.0  44000.0    100.0      _trace_multiplexer.register_profiler(profiler_name, trace_func)\n\nTotal time: 0 s\nFile: /Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py\nFunction: unregister_trace_function at line 127\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   127                                           def unregister_trace_function(profiler_name: str):\n   128                                               \"\"\"Unregister a trace function from the global multiplexer.\"\"\"\n   129                                               _trace_multiplexer.unregister_profiler(profiler_name)\n\nTotal time: 7e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/random.py\nFunction: Random.choices at line 454\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   454                                               def choices(self, population, weights=None, *, cum_weights=None, k=1):\n   455                                                   \"\"\"Return a k sized list of population elements chosen with replacement.\n   456                                           \n   457                                                   If the relative weights or cumulative weights are not specified,\n   458                                                   the selections are made with equal probability.\n   459                                           \n   460                                                   \"\"\"\n   461         1       1000.0   1000.0     14.3          random = self.random\n   462         1          0.0      0.0      0.0          n = len(population)\n   463         1          0.0      0.0      0.0          if cum_weights is None:\n   464         1          0.0      0.0      0.0              if weights is None:\n   465         1          0.0      0.0      0.0                  floor = _floor\n   466         1       1000.0   1000.0     14.3                  n += 0.0    # convert to float for a small speed improvement\n   467         1       5000.0   5000.0     71.4                  return [population[floor(random() * n)] for i in _repeat(None, k)]\n   468                                                       try:\n   469                                                           cum_weights = list(_accumulate(weights))\n   470                                                       except TypeError:\n   471                                                           if not isinstance(weights, int):\n   472                                                               raise\n   473                                                           k = weights\n   474                                                           raise TypeError(\n   475                                                               f'The number of choices must be a keyword argument: {k=}'\n   476                                                           ) from None\n   477                                                   elif weights is not None:\n   478                                                       raise TypeError('Cannot specify both weights and cumulative weights')\n   479                                                   if len(cum_weights) != n:\n   480                                                       raise ValueError('The number of weights does not match the population')\n   481                                                   total = cum_weights[-1] + 0.0   # convert to float\n   482                                                   if total <= 0.0:\n   483                                                       raise ValueError('Total of weights must be greater than zero')\n   484                                                   if not _isfinite(total):\n   485                                                       raise ValueError('Total of weights must be finite')\n   486                                                   bisect = _bisect\n   487                                                   hi = n - 1\n   488                                                   return [population[bisect(cum_weights, random() * total, 0, hi)]\n   489                                                           for i in _repeat(None, k)]\n\nTotal time: 1.7e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: _infer_return_type at line 85\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n    85                                           def _infer_return_type(*args):\n    86                                               \"\"\"Look at the type of all args and divine their implied return type.\"\"\"\n    87         1       1000.0   1000.0      5.9      return_type = None\n    88         4       4000.0   1000.0     23.5      for arg in args:\n    89         3       3000.0   1000.0     17.6          if arg is None:\n    90         2       2000.0   1000.0     11.8              continue\n    91                                           \n    92         1       5000.0   5000.0     29.4          if isinstance(arg, _os.PathLike):\n    93                                                       arg = _os.fspath(arg)\n    94                                           \n    95         1       1000.0   1000.0      5.9          if isinstance(arg, bytes):\n    96                                                       if return_type is str:\n    97                                                           raise TypeError(\"Can't mix bytes and non-bytes in \"\n    98                                                                           \"path components.\")\n    99                                                       return_type = bytes\n   100                                                   else:\n   101         1          0.0      0.0      0.0              if return_type is bytes:\n   102                                                           raise TypeError(\"Can't mix bytes and non-bytes in \"\n   103                                                                           \"path components.\")\n   104         1          0.0      0.0      0.0              return_type = str\n   105         1          0.0      0.0      0.0      if return_type is None:\n   106                                                   if tempdir is None or isinstance(tempdir, str):\n   107                                                       return str  # tempfile APIs return a str by default.\n   108                                                   else:\n   109                                                       # we could check for bytes but it'll fail later on anyway\n   110                                                       return bytes\n   111         1       1000.0   1000.0      5.9      return return_type\n\nTotal time: 0.000173 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: _sanitize_params at line 114\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   114                                           def _sanitize_params(prefix, suffix, dir):\n   115                                               \"\"\"Common parameter processing for most APIs in this module.\"\"\"\n   116         1      97000.0  97000.0     56.1      output_type = _infer_return_type(prefix, suffix, dir)\n   117         1       1000.0   1000.0      0.6      if suffix is None:\n   118         1       1000.0   1000.0      0.6          suffix = output_type()\n   119         1       1000.0   1000.0      0.6      if prefix is None:\n   120                                                   if output_type is str:\n   121                                                       prefix = template\n   122                                                   else:\n   123                                                       prefix = _os.fsencode(template)\n   124         1       1000.0   1000.0      0.6      if dir is None:\n   125         1       1000.0   1000.0      0.6          if output_type is str:\n   126         1      70000.0  70000.0     40.5              dir = gettempdir()\n   127                                                   else:\n   128                                                       dir = gettempdirb()\n   129         1       1000.0   1000.0      0.6      return prefix, suffix, dir, output_type\n\nTotal time: 0 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: _get_candidate_names at line 229\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   229                                           def _get_candidate_names():\n   230                                               \"\"\"Common setup sequence for all user-callable interfaces.\"\"\"\n   231                                           \n   232                                               global _name_sequence\n   233                                               if _name_sequence is None:\n   234                                                   _once_lock.acquire()\n   235                                                   try:\n   236                                                       if _name_sequence is None:\n   237                                                           _name_sequence = _RandomNameSequence()\n   238                                                   finally:\n   239                                                       _once_lock.release()\n   240                                               return _name_sequence\n\nTotal time: 2e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: _gettempdir at line 301\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   301                                           def _gettempdir():\n   302                                               \"\"\"Private accessor for tempfile.tempdir.\"\"\"\n   303                                               global tempdir\n   304         1       1000.0   1000.0     50.0      if tempdir is None:\n   305                                                   _once_lock.acquire()\n   306                                                   try:\n   307                                                       if tempdir is None:\n   308                                                           tempdir = _get_default_tempdir()\n   309                                                   finally:\n   310                                                       _once_lock.release()\n   311         1       1000.0   1000.0     50.0      return tempdir\n\nTotal time: 5.1e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: gettempdir at line 313\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   313                                           def gettempdir():\n   314                                               \"\"\"Returns tempfile.tempdir as str.\"\"\"\n   315         1      51000.0  51000.0    100.0      return _os.fsdecode(_gettempdir())\n\nTotal time: 0.000745 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tempfile.py\nFunction: mkdtemp at line 360\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   360                                           def mkdtemp(suffix=None, prefix=None, dir=None):\n   361                                               \"\"\"User-callable function to create and return a unique temporary\n   362                                               directory.  The return value is the pathname of the directory.\n   363                                           \n   364                                               Arguments are as for mkstemp, except that the 'text' argument is\n   365                                               not accepted.\n   366                                           \n   367                                               The directory is readable, writable, and searchable only by the\n   368                                               creating user.\n   369                                           \n   370                                               Caller is responsible for deleting the directory when done with it.\n   371                                               \"\"\"\n   372                                           \n   373         1     226000.0 226000.0     30.3      prefix, suffix, dir, output_type = _sanitize_params(prefix, suffix, dir)\n   374                                           \n   375         1      62000.0  62000.0      8.3      names = _get_candidate_names()\n   376         1       1000.0   1000.0      0.1      if output_type is bytes:\n   377                                                   names = map(_os.fsencode, names)\n   378                                           \n   379         1       1000.0   1000.0      0.1      for seq in range(TMP_MAX):\n   380         1     202000.0 202000.0     27.1          name = next(names)\n   381         1      21000.0  21000.0      2.8          file = _os.path.join(dir, prefix + name + suffix)\n   382         1       1000.0   1000.0      0.1          _sys.audit(\"tempfile.mkdtemp\", file)\n   383         1          0.0      0.0      0.0          try:\n   384         1     219000.0 219000.0     29.4              _os.mkdir(file, 0o700)\n   385                                                   except FileExistsError:\n   386                                                       continue    # try again\n   387                                                   except PermissionError:\n   388                                                       # This exception is thrown when a directory with the chosen name\n   389                                                       # already exists on windows.\n   390                                                       if (_os.name == 'nt' and _os.path.isdir(dir) and\n   391                                                           _os.access(dir, _os.W_OK)):\n   392                                                           continue\n   393                                                       else:\n   394                                                           raise\n   395         1      12000.0  12000.0      1.6          return _os.path.abspath(file)\n   396                                           \n   397                                               raise FileExistsError(_errno.EEXIST,\n   398                                                                     \"No usable temporary directory name found\")\n\nTotal time: 3e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py\nFunction: RLock at line 124\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   124                                           def RLock(*args, **kwargs):\n   125                                               \"\"\"Factory function that returns a new reentrant lock.\n   126                                           \n   127                                               A reentrant lock must be released by the thread that acquired it. Once a\n   128                                               thread has acquired a reentrant lock, the same thread may acquire it again\n   129                                               without blocking; the thread must release it once for each time it has\n   130                                               acquired it.\n   131                                           \n   132                                               \"\"\"\n   133         1       1000.0   1000.0     33.3      if _CRLock is None:\n   134                                                   return _PyRLock(*args, **kwargs)\n   135         1       2000.0   2000.0     66.7      return _CRLock(*args, **kwargs)\n\nTotal time: 1e-06 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py\nFunction: _newname at line 839\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   839                                           def _newname(name_template):\n   840         1       1000.0   1000.0    100.0      return name_template % _counter()\n\nTotal time: 1.3e-05 s\nFile: /opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py\nFunction: _make_invoke_excepthook at line 1356\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n  1356                                           def _make_invoke_excepthook():\n  1357                                               # Create a local namespace to ensure that variables remain alive\n  1358                                               # when _invoke_excepthook() is called, even if it is called late during\n  1359                                               # Python shutdown. It is mostly needed for daemon threads.\n  1360                                           \n  1361         1       2000.0   2000.0     15.4      old_excepthook = excepthook\n  1362         1       1000.0   1000.0      7.7      old_sys_excepthook = _sys.excepthook\n  1363         1       1000.0   1000.0      7.7      if old_excepthook is None:\n  1364                                                   raise RuntimeError(\"threading.excepthook is None\")\n  1365         1       1000.0   1000.0      7.7      if old_sys_excepthook is None:\n  1366                                                   raise RuntimeError(\"sys.excepthook is None\")\n  1367                                           \n  1368         1       1000.0   1000.0      7.7      sys_exc_info = _sys.exc_info\n  1369         1       1000.0   1000.0      7.7      local_print = print\n  1370         1       2000.0   2000.0     15.4      local_sys = _sys\n  1371                                           \n  1372         1       2000.0   2000.0     15.4      def invoke_excepthook(thread):\n  1373                                                   global excepthook\n  1374                                                   try:\n  1375                                                       hook = excepthook\n  1376                                                       if hook is None:\n  1377                                                           hook = old_excepthook\n  1378                                           \n  1379                                                       args = ExceptHookArgs([*sys_exc_info(), thread])\n  1380                                           \n  1381                                                       hook(args)\n  1382                                                   except Exception as exc:\n  1383                                                       exc.__suppress_context__ = True\n  1384                                                       del exc\n  1385                                           \n  1386                                                       if local_sys is not None and local_sys.stderr is not None:\n  1387                                                           stderr = local_sys.stderr\n  1388                                                       else:\n  1389                                                           stderr = thread._stderr\n  1390                                           \n  1391                                                       local_print(\"Exception in threading.excepthook:\",\n  1392                                                                   file=stderr, flush=True)\n  1393                                           \n  1394                                                       if local_sys is not None and local_sys.excepthook is not None:\n  1395                                                           sys_excepthook = local_sys.excepthook\n  1396                                                       else:\n  1397                                                           sys_excepthook = old_sys_excepthook\n  1398                                           \n  1399                                                       sys_excepthook(*sys_exc_info())\n  1400                                                   finally:\n  1401                                                       # Break reference cycle (exception stored in a variable)\n  1402                                                       args = None\n  1403                                           \n  1404         1       2000.0   2000.0     15.4      return invoke_excepthook\n\n",
        "duration": 0.003940875001717359,
        "metadata": {
          "profiler": "line_profiler",
          "status": "completed",
          "functions_profiled": 9,
          "lines_profiled": 44,
          "note": "Automatic tracing of all executed code"
        }
      },
      "start_time": "2025-07-27T14:17:03.822376",
      "end_time": "2025-07-27T14:17:03.826215",
      "duration": 0.003839,
      "success": true,
      "error_message": null
    },
    "memory": {
      "profiler_type": "memory",
      "data": {
        "samples": [
          {
            "timestamp": 1753651023.824491,
            "rss_mb": 106.703125,
            "vms_mb": 401341.9375,
            "percent": 0.32563209533691406
          },
          {
            "timestamp": 1753651023.824963,
            "rss_mb": 106.765625,
            "vms_mb": 401358.0,
            "percent": 0.3258228302001953
          },
          {
            "timestamp": 1753651023.84154,
            "rss_mb": 106.953125,
            "vms_mb": 401358.0,
            "percent": 0.32639503479003906
          },
          {
            "timestamp": 1753651023.858062,
            "rss_mb": 106.96875,
            "vms_mb": 401358.0,
            "percent": 0.3264427185058594
          },
          {
            "timestamp": 1753651023.8710341,
            "rss_mb": 106.96875,
            "vms_mb": 401358.0,
            "percent": 0.3264427185058594
          },
          {
            "timestamp": 1753651023.886063,
            "rss_mb": 107.109375,
            "vms_mb": 401367.0,
            "percent": 0.3268718719482422
          },
          {
            "timestamp": 1753651023.896917,
            "rss_mb": 107.078125,
            "vms_mb": 401350.9375,
            "percent": 0.32677650451660156
          }
        ],
        "peak_memory_mb": 107.109375,
        "avg_memory_mb": 106.93526785714286,
        "memory_delta_mb": 0.375,
        "sample_count": 7,
        "initial_memory_mb": 106.703125,
        "final_memory_mb": 107.078125,
        "duration": 0.07242725000833161,
        "metadata": {
          "profiler": "psutil",
          "precision": 1,
          "status": "completed",
          "sampling_rate": "100 Hz"
        }
      },
      "start_time": "2025-07-27T14:17:03.824439",
      "end_time": "2025-07-27T14:17:03.888678",
      "duration": 0.064239,
      "success": true,
      "error_message": null
    },
    "call": {
      "profiler_type": "call",
      "data": {
        "total_calls": 9860,
        "total_time": 0.5830670927243773,
        "stats": {
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(stop)": {
            "ncalls": 1,
            "tottime": 0.062385084020206705,
            "cumtime": 0.062385084020206705,
            "percall": 0.062385084020206705,
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py",
            "function": "stop",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/orchestra.py:0(stop_profiling)": 1
            },
            "callees": {
              "<frozen importlib._bootstrap>:0(parent)": 1,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/trace_multiplexer.py:0(unregister_trace_function)": 1,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/base.py:0(_mark_end)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(print_stats)": 1,
              "<frozen genericpath>:0(exists)": 12,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(_extract_function_data)": 12,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/base.py:0(duration)": 2
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(print_stats)": {
            "ncalls": 1,
            "tottime": 0.059651290997862816,
            "cumtime": 0.059651290997862816,
            "percall": 0.059651290997862816,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "print_stats",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(stop)": 1
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_text)": 1
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_text)": {
            "ncalls": 1,
            "tottime": 0.05954449999262579,
            "cumtime": 0.05954449999262579,
            "percall": 0.05954449999262579,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "show_text",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(print_stats)": 1
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": 12
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": {
            "ncalls": 12,
            "tottime": 0.044433623988879845,
            "cumtime": 0.044433623988879845,
            "percall": 0.0037028019990733205,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "show_func",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_text)": 12
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(<genexpr>)": 309,
              "<frozen genericpath>:0(exists)": 24,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(clearcache)": 12,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": 12,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__hash__)": 12,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_column_widths)": 2
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": {
            "ncalls": 3,
            "tottime": 0.030106334015727043,
            "cumtime": 0.030106334015727043,
            "percall": 0.010035444671909014,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py",
            "function": "from_config",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_text)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_column_widths)": 2
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_default)": 3,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(find_and_read_config_file)": 2,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(iter_configs)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(get_headers)": 2,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(get_subtable)": 20,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(merge)": 2,
              "<string>:0(__init__)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__eq__)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__new__)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__init__)": 1
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(find_and_read_config_file)": {
            "ncalls": 2,
            "tottime": 0.0267898750025779,
            "cumtime": 0.0267898750025779,
            "percall": 0.01339493750128895,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py",
            "function": "find_and_read_config_file",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": 2
            },
            "callees": {
              "<frozen _collections_abc>:0(get)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(cwd)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(absolute)": 2,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(iter_configs)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(open)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(load)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__new__)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/pathlib.py:0(__init__)": 1
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(load)": {
            "ncalls": 2,
            "tottime": 0.026268124958733097,
            "cumtime": 0.026268124958733097,
            "percall": 0.013134062479366548,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "load",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(find_and_read_config_file)": 2
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 2
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": {
            "ncalls": 2,
            "tottime": 0.026230999967083335,
            "cumtime": 0.026230999967083335,
            "percall": 0.013115499983541667,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "loads",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(load)": 2
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(__init__)": 4,
              "<string>:0(<lambda>)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(make_safe_parse_float)": 2,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 234,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(finalize_pending)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comment)": 104,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": 78
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": {
            "ncalls": 12,
            "tottime": 0.025315002945717424,
            "cumtime": 0.025315002945717424,
            "percall": 0.002109583578809785,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "get_code_block",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": 12
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getlines)": 12,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(getblock)": 12,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(_generate_tokens_from_c_tokenizer)": 12
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": {
            "ncalls": 78,
            "tottime": 0.021668376110028476,
            "cumtime": 0.021668376110028476,
            "percall": 0.00027779969371831377,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "key_value_rule",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 78
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(<genexpr>)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(is_)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(get_or_create_nest)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(set)": 36
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(getblock)": {
            "ncalls": 12,
            "tottime": 0.020096916909096763,
            "cumtime": 0.020096916909096763,
            "percall": 0.0016747430757580635,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py",
            "function": "getblock",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": 12
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(__init__)": 12,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(generate_tokens)": 12,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(_generate_tokens_from_c_tokenizer)": 1258,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(tokeneater)": 1258
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": {
            "ncalls": 82,
            "tottime": 0.018977920030010864,
            "cumtime": 0.018977920030010864,
            "percall": 0.00023143804914647396,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_key_value_pair",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": 4
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": 82,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 82,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 82
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_column_widths)": {
            "ncalls": 2,
            "tottime": 0.015187625016551465,
            "cumtime": 0.015187625016551465,
            "percall": 0.007593812508275732,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "get_column_widths",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": 2
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": 2,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(get_subconfig)": 2
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_array)": {
            "ncalls": 34,
            "tottime": 0.013444169046124443,
            "cumtime": 0.013444169046124443,
            "percall": 0.00039541673665071894,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_array",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 34
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comments_and_array_ws)": 252,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 120
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": {
            "ncalls": 202,
            "tottime": 0.010825470904819667,
            "cumtime": 0.010825470904819667,
            "percall": 5.359144012286964e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_value",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 82,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_array)": 120
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_array)": 34,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_one_line_basic_str)": 148,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": 4,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_re.py:0(match_to_number)": 6,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_literal_str)": 2
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_one_line_basic_str)": {
            "ncalls": 150,
            "tottime": 0.010152089787879959,
            "cumtime": 0.010152089787879959,
            "percall": 6.76805985858664e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_one_line_basic_str",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 148,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_part)": 2
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_basic_str)": 150
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_basic_str)": {
            "ncalls": 150,
            "tottime": 0.009729452052852139,
            "cumtime": 0.009729452052852139,
            "percall": 6.486301368568093e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_basic_str",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_one_line_basic_str)": 150
            },
            "callees": {}
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(tokeneater)": {
            "ncalls": 1258,
            "tottime": 0.008816794230369851,
            "cumtime": 0.008816794230369851,
            "percall": 7.00858046929241e-06,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "tokeneater",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(getblock)": 1258
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(tokeneater)": 1258
            }
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/memory_profiler.py:0(stop)": {
            "ncalls": 1,
            "tottime": 0.00830091699026525,
            "cumtime": 0.00830091699026525,
            "percall": 0.00830091699026525,
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/memory_profiler.py",
            "function": "stop",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/orchestra.py:0(stop_profiling)": 1
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(is_alive)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(join)": 1,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/base.py:0(_mark_end)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/psutil/_common.py:0(wrapper)": 1,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/psutil/__init__.py:0(memory_percent)": 1,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/base.py:0(duration)": 2
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(join)": {
            "ncalls": 1,
            "tottime": 0.008142166014295071,
            "cumtime": 0.008142166014295071,
            "percall": 0.008142166014295071,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "join",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/memory_profiler.py:0(stop)": 1
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(is_set)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(current_thread)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(_wait_for_tstate_lock)": 1
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(_wait_for_tstate_lock)": {
            "ncalls": 2,
            "tottime": 0.008131665963446721,
            "cumtime": 0.008131665963446721,
            "percall": 0.004065832981723361,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py",
            "function": "_wait_for_tstate_lock",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(is_alive)": 1,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(join)": 1
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/threading.py:0(_stop)": 1
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(_generate_tokens_from_c_tokenizer)": {
            "ncalls": 1270,
            "tottime": 0.0072908696020022035,
            "cumtime": 0.0072908696020022035,
            "percall": 5.740842206300948e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py",
            "function": "_generate_tokens_from_c_tokenizer",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(getblock)": 1258,
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": 12
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/collections/__init__.py:0(_make)": 1258
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getlines)": {
            "ncalls": 56,
            "tottime": 0.0054435828642454,
            "cumtime": 0.0054435828642454,
            "percall": 9.7206836861525e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py",
            "function": "getlines",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(get_code_block)": 12,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getline)": 44
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(updatecache)": 14
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(updatecache)": {
            "ncalls": 14,
            "tottime": 0.005209581984672695,
            "cumtime": 0.005209581984672695,
            "percall": 0.0003721129989051925,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py",
            "function": "updatecache",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getlines)": 14
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(open)": 14,
              "<frozen codecs>:0(decode)": 84
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py:0(tokeneater)": {
            "ncalls": 1258,
            "tottime": 0.00493254407774657,
            "cumtime": 0.00493254407774657,
            "percall": 3.920941238272313e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/inspect.py",
            "function": "tokeneater",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(tokeneater)": 1258
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": {
            "ncalls": 1032,
            "tottime": 0.0040598071936983615,
            "cumtime": 0.0040598071936983615,
            "percall": 3.933921699320118e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "skip_chars",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 234,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_part)": 140,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": 176,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 82,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comments_and_array_ws)": 366,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": 8
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comments_and_array_ws)": {
            "ncalls": 252,
            "tottime": 0.004056125937495381,
            "cumtime": 0.004056125937495381,
            "percall": 1.6095737847203892e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "skip_comments_and_array_ws",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_array)": 252
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 366,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comment)": 366
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": {
            "ncalls": 108,
            "tottime": 0.0036263389920350164,
            "cumtime": 0.0036263389920350164,
            "percall": 3.3577212889213115e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_key",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 82
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_part)": 142,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 176
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/collections/__init__.py:0(_make)": {
            "ncalls": 1258,
            "tottime": 0.0032577221281826496,
            "cumtime": 0.0032577221281826496,
            "percall": 2.589604235439308e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/collections/__init__.py",
            "function": "_make",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(_generate_tokens_from_c_tokenizer)": 1258
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(open)": {
            "ncalls": 14,
            "tottime": 0.0027194569120183587,
            "cumtime": 0.0027194569120183587,
            "percall": 0.0001942469222870256,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py",
            "function": "open",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(updatecache)": 14
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(detect_encoding)": 14,
              "<frozen codecs>:0(__init__)": 14
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_default)": {
            "ncalls": 3,
            "tottime": 0.002415916998870671,
            "cumtime": 0.002415916998870671,
            "percall": 0.0008053056662902236,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py",
            "function": "from_default",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_config)": 3
            },
            "callees": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(copy)": 3
            }
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(copy)": {
            "ncalls": 3,
            "tottime": 0.002403292019153014,
            "cumtime": 0.002403292019153014,
            "percall": 0.0008010973397176713,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py",
            "function": "copy",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(from_default)": 3
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(deepcopy)": 3,
              "<string>:0(__init__)": 3
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": {
            "ncalls": 26,
            "tottime": 0.0024028770276345313,
            "cumtime": 0.0024028770276345313,
            "percall": 9.241834721671275e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "create_dict_rule",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 26
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(is_)": 52,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(set)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(get_or_create_nest)": 26
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_part)": {
            "ncalls": 142,
            "tottime": 0.002204209886258468,
            "cumtime": 0.002204209886258468,
            "percall": 1.5522604832806114e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_key_part",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key)": 142
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 140,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_one_line_basic_str)": 2
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(_deepcopy_dict)": {
            "ncalls": 21,
            "tottime": 0.0017297080485150218,
            "cumtime": 0.0017297080485150218,
            "percall": 8.236704992928676e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py",
            "function": "_deepcopy_dict",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(deepcopy)": 21
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(deepcopy)": 246
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(deepcopy)": {
            "ncalls": 258,
            "tottime": 0.0017163731099572033,
            "cumtime": 0.0017163731099572033,
            "percall": 6.652608953322494e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py",
            "function": "deepcopy",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/toml_config.py:0(copy)": 3,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(_deepcopy_dict)": 246,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(_deepcopy_list)": 9
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(_deepcopy_dict)": 21,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(_deepcopy_atomic)": 228,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(_deepcopy_list)": 9,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/copy.py:0(_keep_alive)": 30
            }
          },
          "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(_extract_function_data)": {
            "ncalls": 12,
            "tottime": 0.0015452069928869605,
            "cumtime": 0.0015452069928869605,
            "percall": 0.0001287672494072467,
            "filename": "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py",
            "function": "_extract_function_data",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(stop)": 12
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getline)": 44,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(<lambda>)": 44
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comment)": {
            "ncalls": 470,
            "tottime": 0.001308430131757632,
            "cumtime": 0.001308430131757632,
            "percall": 2.7838938973566635e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "skip_comment",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(loads)": 104,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_comments_and_array_ws)": 366
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_until)": 4
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(detect_encoding)": {
            "ncalls": 14,
            "tottime": 0.0012226250255480409,
            "cumtime": 0.0012226250255480409,
            "percall": 8.733035896771721e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py",
            "function": "detect_encoding",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(open)": 14
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(read_or_stop)": 14,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(find_cookie)": 14
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(read_or_stop)": {
            "ncalls": 14,
            "tottime": 0.0009182909561786801,
            "cumtime": 0.0009182909561786801,
            "percall": 6.559221115562e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py",
            "function": "read_or_stop",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tokenize.py:0(detect_encoding)": 14
            },
            "callees": {}
          },
          "/Users/Adam/Pycroscope/test_integration.py:0(workload_with_patterns)": {
            "ncalls": 1,
            "tottime": 0.0008962499850895256,
            "cumtime": 0.0008962499850895256,
            "percall": 0.0008962499850895256,
            "filename": "/Users/Adam/Pycroscope/test_integration.py",
            "function": "workload_with_patterns",
            "line": 0,
            "callers": {},
            "callees": {
              "/Users/Adam/Pycroscope/test_integration.py:0(inefficient_nested_loops)": 1,
              "/Users/Adam/Pycroscope/test_integration.py:0(complex_function)": 1
            }
          },
          "/Users/Adam/Pycroscope/test_integration.py:0(inefficient_nested_loops)": {
            "ncalls": 1,
            "tottime": 0.0008572090009693056,
            "cumtime": 0.0008572090009693056,
            "percall": 0.0008572090009693056,
            "filename": "/Users/Adam/Pycroscope/test_integration.py",
            "function": "inefficient_nested_loops",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/test_integration.py:0(workload_with_patterns)": 1
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(is_)": {
            "ncalls": 134,
            "tottime": 0.0008152147347573191,
            "cumtime": 0.0008152147347573191,
            "percall": 6.083692050427755e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "is_",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 52,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": 4
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(get_or_create_nest)": {
            "ncalls": 108,
            "tottime": 0.0007643401040695608,
            "cumtime": 0.0007643401040695608,
            "percall": 7.077223185829267e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "get_or_create_nest",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": 78,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": 4
            },
            "callees": {}
          },
          "<frozen genericpath>:0(exists)": {
            "ncalls": 36,
            "tottime": 0.0006448759231716394,
            "cumtime": 0.0006448759231716394,
            "percall": 1.7913220088101094e-05,
            "filename": "<frozen genericpath>",
            "function": "exists",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": 24,
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(stop)": 12
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getline)": {
            "ncalls": 44,
            "tottime": 0.0006132490816526115,
            "cumtime": 0.0006132490816526115,
            "percall": 1.3937479128468443e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py",
            "function": "getline",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/src/pycroscope/infrastructure/profilers/line_profiler.py:0(_extract_function_data)": 44
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(getlines)": 44
            }
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(set)": {
            "ncalls": 62,
            "tottime": 0.0004305859620217234,
            "cumtime": 0.0004305859620217234,
            "percall": 6.9449348713181195e-06,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "set",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(create_dict_rule)": 26,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(key_value_rule)": 36
            },
            "callees": {}
          },
          "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(<genexpr>)": {
            "ncalls": 309,
            "tottime": 0.0004267951298970729,
            "cumtime": 0.0004267951298970729,
            "percall": 1.3812140126118864e-06,
            "filename": "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py",
            "function": "<genexpr>",
            "line": 0,
            "callers": {
              "/Users/Adam/Pycroscope/venv/lib/python3.12/site-packages/line_profiler/line_profiler.py:0(show_func)": 309
            },
            "callees": {}
          },
          "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_inline_table)": {
            "ncalls": 4,
            "tottime": 0.0003965830255765468,
            "cumtime": 0.0003965830255765468,
            "percall": 9.91457563941367e-05,
            "filename": "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py",
            "function": "parse_inline_table",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_value)": 4
            },
            "callees": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(__init__)": 8,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(skip_chars)": 8,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(parse_key_value_pair)": 4,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(is_)": 4,
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/tomllib/_parser.py:0(get_or_create_nest)": 4
            }
          },
          "<frozen codecs>:0(decode)": {
            "ncalls": 84,
            "tottime": 0.0003428779891692102,
            "cumtime": 0.0003428779891692102,
            "percall": 4.081880823442978e-06,
            "filename": "<frozen codecs>",
            "function": "decode",
            "line": 0,
            "callers": {
              "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/linecache.py:0(updatecache)": 84
            },
            "callees": {}
          }
        },
        "stats_summary": "Custom call profiler tracked 9860 function calls in 0.583067 seconds",
        "sort_key": "cumulative",
        "profiler_type": "custom_call_profiler"
      },
      "start_time": "2025-07-27T14:17:03.825147",
      "end_time": "2025-07-27T14:17:03.897026",
      "duration": 0.071879,
      "success": true,
      "error_message": null
    }
  }
}